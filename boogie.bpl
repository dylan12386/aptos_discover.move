
// ** Expanded prelude

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Basic theory for vectors using arrays. This version of vectors is not extensional.

datatype Vec<T> {
    Vec(v: [int]T, l: int)
}

function {:builtin "MapConst"} MapConstVec<T>(T): [int]T;
function DefaultVecElem<T>(): T;
function {:inline} DefaultVecMap<T>(): [int]T { MapConstVec(DefaultVecElem()) }

function {:inline} EmptyVec<T>(): Vec T {
    Vec(DefaultVecMap(), 0)
}

function {:inline} MakeVec1<T>(v: T): Vec T {
    Vec(DefaultVecMap()[0 := v], 1)
}

function {:inline} MakeVec2<T>(v1: T, v2: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2], 2)
}

function {:inline} MakeVec3<T>(v1: T, v2: T, v3: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3], 3)
}

function {:inline} MakeVec4<T>(v1: T, v2: T, v3: T, v4: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3][3 := v4], 4)
}

function {:inline} ExtendVec<T>(v: Vec T, elem: T): Vec T {
    (var l := v->l;
    Vec(v->v[l := elem], l + 1))
}

function {:inline} ReadVec<T>(v: Vec T, i: int): T {
    v->v[i]
}

function {:inline} LenVec<T>(v: Vec T): int {
    v->l
}

function {:inline} IsEmptyVec<T>(v: Vec T): bool {
    v->l == 0
}

function {:inline} RemoveVec<T>(v: Vec T): Vec T {
    (var l := v->l - 1;
    Vec(v->v[l := DefaultVecElem()], l))
}

function {:inline} RemoveAtVec<T>(v: Vec T, i: int): Vec T {
    (var l := v->l - 1;
    Vec(
        (lambda j: int ::
           if j >= 0 && j < l then
               if j < i then v->v[j] else v->v[j+1]
           else DefaultVecElem()),
        l))
}

function {:inline} ConcatVec<T>(v1: Vec T, v2: Vec T): Vec T {
    (var l1, m1, l2, m2 := v1->l, v1->v, v2->l, v2->v;
    Vec(
        (lambda i: int ::
          if i >= 0 && i < l1 + l2 then
            if i < l1 then m1[i] else m2[i - l1]
          else DefaultVecElem()),
        l1 + l2))
}

function {:inline} ReverseVec<T>(v: Vec T): Vec T {
    (var l := v->l;
    Vec(
        (lambda i: int :: if 0 <= i && i < l then v->v[l - i - 1] else DefaultVecElem()),
        l))
}

function {:inline} SliceVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(
        (lambda k:int ::
          if 0 <= k && k < j - i then
            m[i + k]
          else
            DefaultVecElem()),
        (if j - i < 0 then 0 else j - i)))
}


function {:inline} UpdateVec<T>(v: Vec T, i: int, elem: T): Vec T {
    Vec(v->v[i := elem], v->l)
}

function {:inline} SwapVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v->v;
    Vec(m[i := m[j]][j := m[i]], v->l))
}

function {:inline} ContainsVec<T>(v: Vec T, e: T): bool {
    (var l := v->l;
    (exists i: int :: InRangeVec(v, i) && v->v[i] == e))
}

function IndexOfVec<T>(v: Vec T, e: T): int;
axiom {:ctor "Vec"} (forall<T> v: Vec T, e: T :: {IndexOfVec(v, e)}
    (var i := IndexOfVec(v,e);
     if (!ContainsVec(v, e)) then i == -1
     else InRangeVec(v, i) && ReadVec(v, i) == e &&
        (forall j: int :: j >= 0 && j < i ==> ReadVec(v, j) != e)));

// This function should stay non-inlined as it guards many quantifiers
// over vectors. It appears important to have this uninterpreted for
// quantifier triggering.
function InRangeVec<T>(v: Vec T, i: int): bool {
    i >= 0 && i < LenVec(v)
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Boogie model for multisets, based on Boogie arrays. This theory assumes extensional equality for element types.

datatype Multiset<T> {
    Multiset(v: [T]int, l: int)
}

function {:builtin "MapConst"} MapConstMultiset<T>(l: int): [T]int;

function {:inline} EmptyMultiset<T>(): Multiset T {
    Multiset(MapConstMultiset(0), 0)
}

function {:inline} LenMultiset<T>(s: Multiset T): int {
    s->l
}

function {:inline} ExtendMultiset<T>(s: Multiset T, v: T): Multiset T {
    (var len := s->l;
    (var cnt := s->v[v];
    Multiset(s->v[v := (cnt + 1)], len + 1)))
}

// This function returns (s1 - s2). This function assumes that s2 is a subset of s1.
function {:inline} SubtractMultiset<T>(s1: Multiset T, s2: Multiset T): Multiset T {
    (var len1 := s1->l;
    (var len2 := s2->l;
    Multiset((lambda v:T :: s1->v[v]-s2->v[v]), len1-len2)))
}

function {:inline} IsEmptyMultiset<T>(s: Multiset T): bool {
    (s->l == 0) &&
    (forall v: T :: s->v[v] == 0)
}

function {:inline} IsSubsetMultiset<T>(s1: Multiset T, s2: Multiset T): bool {
    (s1->l <= s2->l) &&
    (forall v: T :: s1->v[v] <= s2->v[v])
}

function {:inline} ContainsMultiset<T>(s: Multiset T, v: T): bool {
    s->v[v] > 0
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Theory for tables.

// v is the SMT array holding the key-value assignment. e is an array which
// independently determines whether a key is valid or not. l is the length.
//
// Note that even though the program cannot reflect over existence of a key,
// we want the specification to be able to do this, so it can express
// verification conditions like "key has been inserted".
datatype Table <K, V> {
    Table(v: [K]V, e: [K]bool, l: int)
}

// Functions for default SMT arrays. For the table values, we don't care and
// use an uninterpreted function.
function DefaultTableArray<K, V>(): [K]V;
function DefaultTableKeyExistsArray<K>(): [K]bool;
axiom DefaultTableKeyExistsArray() == (lambda i: int :: false);

function {:inline} EmptyTable<K, V>(): Table K V {
    Table(DefaultTableArray(), DefaultTableKeyExistsArray(), 0)
}

function {:inline} GetTable<K,V>(t: Table K V, k: K): V {
    // Notice we do not check whether key is in the table. The result is undetermined if it is not.
    t->v[k]
}

function {:inline} LenTable<K,V>(t: Table K V): int {
    t->l
}


function {:inline} ContainsTable<K,V>(t: Table K V, k: K): bool {
    t->e[k]
}

function {:inline} UpdateTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    Table(t->v[k := v], t->e, t->l)
}

function {:inline} AddTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    // This function has an undetermined result if the key is already in the table
    // (all specification functions have this "partial definiteness" behavior). Thus we can
    // just increment the length.
    Table(t->v[k := v], t->e[k := true], t->l + 1)
}

function {:inline} RemoveTable<K,V>(t: Table K V, k: K): Table K V {
    // Similar as above, we only need to consider the case where the key is in the table.
    Table(t->v, t->e[k := false], t->l - 1)
}

axiom {:ctor "Table"} (forall<K,V> t: Table K V :: {LenTable(t)}
    (exists k: K :: {ContainsTable(t, k)} ContainsTable(t, k)) ==> LenTable(t) >= 1
);
// TODO: we might want to encoder a stronger property that the length of table
// must be more than N given a set of N items. Currently we don't see a need here
// and the above axiom seems to be sufficient.
// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

// ==================================================================================
// Native object::exists_at

// ==================================================================================
// Intrinsic implementation of aggregator and aggregator factory

datatype $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle: int, $key: int, $limit: int, $val: int)
}
function {:inline} $Update'$1_aggregator_Aggregator'_handle(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(x, s->$key, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_key(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, x, s->$limit, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_limit(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, x, s->$val)
}
function {:inline} $Update'$1_aggregator_Aggregator'_val(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(s->$handle, s->$key, s->$limit, x)
}
function $IsValid'$1_aggregator_Aggregator'(s: $1_aggregator_Aggregator): bool {
    $IsValid'address'(s->$handle)
      && $IsValid'address'(s->$key)
      && $IsValid'u128'(s->$limit)
      && $IsValid'u128'(s->$val)
}
function {:inline} $IsEqual'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): bool {
    s1 == s2
}
function {:inline} $1_aggregator_spec_get_limit(s: $1_aggregator_Aggregator): int {
    s->$limit
}
function {:inline} $1_aggregator_spec_get_handle(s: $1_aggregator_Aggregator): int {
    s->$handle
}
function {:inline} $1_aggregator_spec_get_key(s: $1_aggregator_Aggregator): int {
    s->$key
}
function {:inline} $1_aggregator_spec_get_val(s: $1_aggregator_Aggregator): int {
    s->$val
}

function $1_aggregator_spec_read(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_spec_aggregator_set_val(agg: $1_aggregator_Aggregator, val: int): $1_aggregator_Aggregator {
    $Update'$1_aggregator_Aggregator'_val(agg, val)
}

function $1_aggregator_spec_aggregator_get_val(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_factory_spec_new_aggregator(limit: int) : $1_aggregator_Aggregator;

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
    (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_get_limit(agg) == limit));

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
     (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_aggregator_get_val(agg) == 0));

// ==================================================================================
// Native for function_info

procedure $1_function_info_is_identifier(s: Vec int) returns (res: bool);


// ============================================================================================
// Primitive Types

const $MAX_U8: int;
axiom $MAX_U8 == 255;
const $MAX_U16: int;
axiom $MAX_U16 == 65535;
const $MAX_U32: int;
axiom $MAX_U32 == 4294967295;
const $MAX_U64: int;
axiom $MAX_U64 == 18446744073709551615;
const $MAX_U128: int;
axiom $MAX_U128 == 340282366920938463463374607431768211455;
const $MAX_U256: int;
axiom $MAX_U256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935;

// Templates for bitvector operations

function {:bvbuiltin "bvand"} $And'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvor"} $Or'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvxor"} $Xor'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvadd"} $Add'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvsub"} $Sub'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvmul"} $Mul'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvudiv"} $Div'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvurem"} $Mod'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvshl"} $Shl'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvlshr"} $Shr'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvult"} $Lt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv8'(bv8,bv8) returns(bool);

procedure {:inline 1} $AddBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Add'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $AddBv8_unchecked(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $SubBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv8'(src1, src2);
}

procedure {:inline 1} $MulBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Mul'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv8'(src1, src2);
}

procedure {:inline 1} $DivBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv8'(src1, src2);
}

procedure {:inline 1} $ModBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv8'(src1, src2);
}

procedure {:inline 1} $AndBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $And'Bv8'(src1,src2);
}

procedure {:inline 1} $OrBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Or'Bv8'(src1,src2);
}

procedure {:inline 1} $XorBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Xor'Bv8'(src1,src2);
}

procedure {:inline 1} $LtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Lt'Bv8'(src1,src2);
}

procedure {:inline 1} $LeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Le'Bv8'(src1,src2);
}

procedure {:inline 1} $GtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Gt'Bv8'(src1,src2);
}

procedure {:inline 1} $GeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Ge'Bv8'(src1,src2);
}

function $IsValid'bv8'(v: bv8): bool {
  $Ge'Bv8'(v,0bv8) && $Le'Bv8'(v,255bv8)
}

function {:inline} $IsEqual'bv8'(x: bv8, y: bv8): bool {
    x == y
}

procedure {:inline 1} $int2bv8(src: int) returns (dst: bv8)
{
    if (src > 255) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.8(src);
}

procedure {:inline 1} $bv2int8(src: bv8) returns (dst: int)
{
    dst := $bv2int.8(src);
}

function {:builtin "(_ int2bv 8)"} $int2bv.8(i: int) returns (bv8);
function {:builtin "bv2nat"} $bv2int.8(i: bv8) returns (int);

function {:bvbuiltin "bvand"} $And'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvor"} $Or'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvxor"} $Xor'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvadd"} $Add'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvsub"} $Sub'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvmul"} $Mul'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvudiv"} $Div'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvurem"} $Mod'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvshl"} $Shl'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvlshr"} $Shr'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvult"} $Lt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv16'(bv16,bv16) returns(bool);

procedure {:inline 1} $AddBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Add'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $AddBv16_unchecked(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $SubBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv16'(src1, src2);
}

procedure {:inline 1} $MulBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Mul'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv16'(src1, src2);
}

procedure {:inline 1} $DivBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv16'(src1, src2);
}

procedure {:inline 1} $ModBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv16'(src1, src2);
}

procedure {:inline 1} $AndBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $And'Bv16'(src1,src2);
}

procedure {:inline 1} $OrBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Or'Bv16'(src1,src2);
}

procedure {:inline 1} $XorBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Xor'Bv16'(src1,src2);
}

procedure {:inline 1} $LtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Lt'Bv16'(src1,src2);
}

procedure {:inline 1} $LeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Le'Bv16'(src1,src2);
}

procedure {:inline 1} $GtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Gt'Bv16'(src1,src2);
}

procedure {:inline 1} $GeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Ge'Bv16'(src1,src2);
}

function $IsValid'bv16'(v: bv16): bool {
  $Ge'Bv16'(v,0bv16) && $Le'Bv16'(v,65535bv16)
}

function {:inline} $IsEqual'bv16'(x: bv16, y: bv16): bool {
    x == y
}

procedure {:inline 1} $int2bv16(src: int) returns (dst: bv16)
{
    if (src > 65535) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.16(src);
}

procedure {:inline 1} $bv2int16(src: bv16) returns (dst: int)
{
    dst := $bv2int.16(src);
}

function {:builtin "(_ int2bv 16)"} $int2bv.16(i: int) returns (bv16);
function {:builtin "bv2nat"} $bv2int.16(i: bv16) returns (int);

function {:bvbuiltin "bvand"} $And'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvor"} $Or'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvxor"} $Xor'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvadd"} $Add'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvsub"} $Sub'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvmul"} $Mul'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvudiv"} $Div'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvurem"} $Mod'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvshl"} $Shl'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvlshr"} $Shr'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvult"} $Lt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv32'(bv32,bv32) returns(bool);

procedure {:inline 1} $AddBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Add'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $AddBv32_unchecked(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $SubBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv32'(src1, src2);
}

procedure {:inline 1} $MulBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Mul'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv32'(src1, src2);
}

procedure {:inline 1} $DivBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv32'(src1, src2);
}

procedure {:inline 1} $ModBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv32'(src1, src2);
}

procedure {:inline 1} $AndBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $And'Bv32'(src1,src2);
}

procedure {:inline 1} $OrBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Or'Bv32'(src1,src2);
}

procedure {:inline 1} $XorBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Xor'Bv32'(src1,src2);
}

procedure {:inline 1} $LtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Lt'Bv32'(src1,src2);
}

procedure {:inline 1} $LeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Le'Bv32'(src1,src2);
}

procedure {:inline 1} $GtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Gt'Bv32'(src1,src2);
}

procedure {:inline 1} $GeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Ge'Bv32'(src1,src2);
}

function $IsValid'bv32'(v: bv32): bool {
  $Ge'Bv32'(v,0bv32) && $Le'Bv32'(v,2147483647bv32)
}

function {:inline} $IsEqual'bv32'(x: bv32, y: bv32): bool {
    x == y
}

procedure {:inline 1} $int2bv32(src: int) returns (dst: bv32)
{
    if (src > 2147483647) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.32(src);
}

procedure {:inline 1} $bv2int32(src: bv32) returns (dst: int)
{
    dst := $bv2int.32(src);
}

function {:builtin "(_ int2bv 32)"} $int2bv.32(i: int) returns (bv32);
function {:builtin "bv2nat"} $bv2int.32(i: bv32) returns (int);

function {:bvbuiltin "bvand"} $And'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvor"} $Or'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvxor"} $Xor'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvadd"} $Add'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsub"} $Sub'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvmul"} $Mul'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvudiv"} $Div'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvurem"} $Mod'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvshl"} $Shl'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvlshr"} $Shr'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvult"} $Lt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv64'(bv64,bv64) returns(bool);

procedure {:inline 1} $AddBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Add'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $AddBv64_unchecked(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $SubBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv64'(src1, src2);
}

procedure {:inline 1} $MulBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Mul'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv64'(src1, src2);
}

procedure {:inline 1} $DivBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv64'(src1, src2);
}

procedure {:inline 1} $ModBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv64'(src1, src2);
}

procedure {:inline 1} $AndBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $And'Bv64'(src1,src2);
}

procedure {:inline 1} $OrBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Or'Bv64'(src1,src2);
}

procedure {:inline 1} $XorBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Xor'Bv64'(src1,src2);
}

procedure {:inline 1} $LtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Lt'Bv64'(src1,src2);
}

procedure {:inline 1} $LeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Le'Bv64'(src1,src2);
}

procedure {:inline 1} $GtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Gt'Bv64'(src1,src2);
}

procedure {:inline 1} $GeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Ge'Bv64'(src1,src2);
}

function $IsValid'bv64'(v: bv64): bool {
  $Ge'Bv64'(v,0bv64) && $Le'Bv64'(v,18446744073709551615bv64)
}

function {:inline} $IsEqual'bv64'(x: bv64, y: bv64): bool {
    x == y
}

procedure {:inline 1} $int2bv64(src: int) returns (dst: bv64)
{
    if (src > 18446744073709551615) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.64(src);
}

procedure {:inline 1} $bv2int64(src: bv64) returns (dst: int)
{
    dst := $bv2int.64(src);
}

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: int) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (int);

function {:bvbuiltin "bvand"} $And'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvor"} $Or'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvxor"} $Xor'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvadd"} $Add'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvsub"} $Sub'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvmul"} $Mul'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvudiv"} $Div'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvurem"} $Mod'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvshl"} $Shl'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvlshr"} $Shr'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvult"} $Lt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv128'(bv128,bv128) returns(bool);

procedure {:inline 1} $AddBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Add'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $AddBv128_unchecked(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $SubBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv128'(src1, src2);
}

procedure {:inline 1} $MulBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Mul'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv128'(src1, src2);
}

procedure {:inline 1} $DivBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv128'(src1, src2);
}

procedure {:inline 1} $ModBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv128'(src1, src2);
}

procedure {:inline 1} $AndBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $And'Bv128'(src1,src2);
}

procedure {:inline 1} $OrBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Or'Bv128'(src1,src2);
}

procedure {:inline 1} $XorBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Xor'Bv128'(src1,src2);
}

procedure {:inline 1} $LtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Lt'Bv128'(src1,src2);
}

procedure {:inline 1} $LeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Le'Bv128'(src1,src2);
}

procedure {:inline 1} $GtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Gt'Bv128'(src1,src2);
}

procedure {:inline 1} $GeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Ge'Bv128'(src1,src2);
}

function $IsValid'bv128'(v: bv128): bool {
  $Ge'Bv128'(v,0bv128) && $Le'Bv128'(v,340282366920938463463374607431768211455bv128)
}

function {:inline} $IsEqual'bv128'(x: bv128, y: bv128): bool {
    x == y
}

procedure {:inline 1} $int2bv128(src: int) returns (dst: bv128)
{
    if (src > 340282366920938463463374607431768211455) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.128(src);
}

procedure {:inline 1} $bv2int128(src: bv128) returns (dst: int)
{
    dst := $bv2int.128(src);
}

function {:builtin "(_ int2bv 128)"} $int2bv.128(i: int) returns (bv128);
function {:builtin "bv2nat"} $bv2int.128(i: bv128) returns (int);

function {:bvbuiltin "bvand"} $And'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvor"} $Or'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvxor"} $Xor'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvadd"} $Add'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvsub"} $Sub'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvmul"} $Mul'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvudiv"} $Div'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvurem"} $Mod'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvshl"} $Shl'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvlshr"} $Shr'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvult"} $Lt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv256'(bv256,bv256) returns(bool);

procedure {:inline 1} $AddBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Add'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $AddBv256_unchecked(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $SubBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv256'(src1, src2);
}

procedure {:inline 1} $MulBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Mul'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv256'(src1, src2);
}

procedure {:inline 1} $DivBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv256'(src1, src2);
}

procedure {:inline 1} $ModBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv256'(src1, src2);
}

procedure {:inline 1} $AndBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $And'Bv256'(src1,src2);
}

procedure {:inline 1} $OrBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Or'Bv256'(src1,src2);
}

procedure {:inline 1} $XorBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Xor'Bv256'(src1,src2);
}

procedure {:inline 1} $LtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Lt'Bv256'(src1,src2);
}

procedure {:inline 1} $LeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Le'Bv256'(src1,src2);
}

procedure {:inline 1} $GtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Gt'Bv256'(src1,src2);
}

procedure {:inline 1} $GeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Ge'Bv256'(src1,src2);
}

function $IsValid'bv256'(v: bv256): bool {
  $Ge'Bv256'(v,0bv256) && $Le'Bv256'(v,115792089237316195423570985008687907853269984665640564039457584007913129639935bv256)
}

function {:inline} $IsEqual'bv256'(x: bv256, y: bv256): bool {
    x == y
}

procedure {:inline 1} $int2bv256(src: int) returns (dst: bv256)
{
    if (src > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.256(src);
}

procedure {:inline 1} $bv2int256(src: bv256) returns (dst: int)
{
    dst := $bv2int.256(src);
}

function {:builtin "(_ int2bv 256)"} $int2bv.256(i: int) returns (bv256);
function {:builtin "bv2nat"} $bv2int.256(i: bv256) returns (int);

datatype $Range {
    $Range(lb: int, ub: int)
}

function {:inline} $IsValid'bool'(v: bool): bool {
  true
}

function $IsValid'u8'(v: int): bool {
  v >= 0 && v <= $MAX_U8
}

function $IsValid'u16'(v: int): bool {
  v >= 0 && v <= $MAX_U16
}

function $IsValid'u32'(v: int): bool {
  v >= 0 && v <= $MAX_U32
}

function $IsValid'u64'(v: int): bool {
  v >= 0 && v <= $MAX_U64
}

function $IsValid'u128'(v: int): bool {
  v >= 0 && v <= $MAX_U128
}

function $IsValid'u256'(v: int): bool {
  v >= 0 && v <= $MAX_U256
}

function $IsValid'num'(v: int): bool {
  true
}

function $IsValid'address'(v: int): bool {
  // TODO: restrict max to representable addresses?
  v >= 0
}

function {:inline} $IsValidRange(r: $Range): bool {
   $IsValid'u64'(r->lb) &&  $IsValid'u64'(r->ub)
}

// Intentionally not inlined so it serves as a trigger in quantifiers.
function $InRange(r: $Range, i: int): bool {
   r->lb <= i && i < r->ub
}


function {:inline} $IsEqual'u8'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u16'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u32'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u64'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u128'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u256'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'num'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'address'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'bool'(x: bool, y: bool): bool {
    x == y
}

// ============================================================================================
// Memory

datatype $Location {
    // A global resource location within the statically known resource type's memory,
    // where `a` is an address.
    $Global(a: int),
    // A local location. `i` is the unique index of the local.
    $Local(i: int),
    // The location of a reference outside of the verification scope, for example, a `&mut` parameter
    // of the function being verified. References with these locations don't need to be written back
    // when mutation ends.
    $Param(i: int),
    // The location of an uninitialized mutation. Using this to make sure that the location
    // will not be equal to any valid mutation locations, i.e., $Local, $Global, or $Param.
    $Uninitialized()
}

// A mutable reference which also carries its current value. Since mutable references
// are single threaded in Move, we can keep them together and treat them as a value
// during mutation until the point they are stored back to their original location.
datatype $Mutation<T> {
    $Mutation(l: $Location, p: Vec int, v: T)
}

// Representation of memory for a given type.
datatype $Memory<T> {
    $Memory(domain: [int]bool, contents: [int]T)
}

function {:builtin "MapConst"} $ConstMemoryDomain(v: bool): [int]bool;
function {:builtin "MapConst"} $ConstMemoryContent<T>(v: T): [int]T;
axiom $ConstMemoryDomain(false) == (lambda i: int :: false);
axiom $ConstMemoryDomain(true) == (lambda i: int :: true);


// Dereferences a mutation.
function {:inline} $Dereference<T>(ref: $Mutation T): T {
    ref->v
}

// Update the value of a mutation.
function {:inline} $UpdateMutation<T>(m: $Mutation T, v: T): $Mutation T {
    $Mutation(m->l, m->p, v)
}

function {:inline} $ChildMutation<T1, T2>(m: $Mutation T1, offset: int, v: T2): $Mutation T2 {
    $Mutation(m->l, ExtendVec(m->p, offset), v)
}

// Return true if two mutations share the location and path
function {:inline} $IsSameMutation<T1, T2>(parent: $Mutation T1, child: $Mutation T2 ): bool {
    parent->l == child->l && parent->p == child->p
}

// Return true if the mutation is a parent of a child which was derived with the given edge offset. This
// is used to implement write-back choices.
function {:inline} $IsParentMutation<T1, T2>(parent: $Mutation T1, edge: int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
     cl == pl + 1 &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) ==  ReadVec(cp, i)) &&
     $EdgeMatches(ReadVec(cp, pl), edge)
    ))))
}

// Return true if the mutation is a parent of a child, for hyper edge.
function {:inline} $IsParentMutationHyper<T1, T2>(parent: $Mutation T1, hyper_edge: Vec int, child: $Mutation T2 ): bool {
    parent->l == child->l &&
    (var pp := parent->p;
    (var cp := child->p;
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
    (var el := LenVec(hyper_edge);
     cl == pl + el &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) == ReadVec(cp, i)) &&
     (forall i: int:: i >= 0 && i < el ==> $EdgeMatches(ReadVec(cp, pl + i), ReadVec(hyper_edge, i)))
    )))))
}

function {:inline} $EdgeMatches(edge: int, edge_pattern: int): bool {
    edge_pattern == -1 // wildcard
    || edge_pattern == edge
}



function {:inline} $SameLocation<T1, T2>(m1: $Mutation T1, m2: $Mutation T2): bool {
    m1->l == m2->l
}

function {:inline} $HasGlobalLocation<T>(m: $Mutation T): bool {
    (m->l) is $Global
}

function {:inline} $HasLocalLocation<T>(m: $Mutation T, idx: int): bool {
    m->l == $Local(idx)
}

function {:inline} $GlobalLocationAddress<T>(m: $Mutation T): int {
    (m->l)->a
}



// Tests whether resource exists.
function {:inline} $ResourceExists<T>(m: $Memory T, addr: int): bool {
    m->domain[addr]
}

// Obtains Value of given resource.
function {:inline} $ResourceValue<T>(m: $Memory T, addr: int): T {
    m->contents[addr]
}

// Update resource.
function {:inline} $ResourceUpdate<T>(m: $Memory T, a: int, v: T): $Memory T {
    $Memory(m->domain[a := true], m->contents[a := v])
}

// Remove resource.
function {:inline} $ResourceRemove<T>(m: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := false], m->contents)
}

// Copies resource from memory s to m.
function {:inline} $ResourceCopy<T>(m: $Memory T, s: $Memory T, a: int): $Memory T {
    $Memory(m->domain[a := s->domain[a]],
            m->contents[a := s->contents[a]])
}



// ============================================================================================
// Abort Handling

var $abort_flag: bool;
var $abort_code: int;

function {:inline} $process_abort_code(code: int): int {
    code
}

const $EXEC_FAILURE_CODE: int;
axiom $EXEC_FAILURE_CODE == -1;

// TODO(wrwg): currently we map aborts of native functions like those for vectors also to
//   execution failure. This may need to be aligned with what the runtime actually does.

procedure {:inline 1} $ExecFailureAbort() {
    $abort_flag := true;
    $abort_code := $EXEC_FAILURE_CODE;
}

procedure {:inline 1} $Abort(code: int) {
    $abort_flag := true;
    $abort_code := code;
}

function {:inline} $StdError(cat: int, reason: int): int {
    reason * 256 + cat
}

procedure {:inline 1} $InitVerification() {
    // Set abort_flag to false, and havoc abort_code
    $abort_flag := false;
    havoc $abort_code;
    // Initialize event store
    call $InitEventStore();
}

// ============================================================================================
// Instructions


procedure {:inline 1} $CastU8(src: int) returns (dst: int)
{
    if (src > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU16(src: int) returns (dst: int)
{
    if (src > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU32(src: int) returns (dst: int)
{
    if (src > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU64(src: int) returns (dst: int)
{
    if (src > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU128(src: int) returns (dst: int)
{
    if (src > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU256(src: int) returns (dst: int)
{
    if (src > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $AddU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $Sub(src1: int, src2: int) returns (dst: int)
{
    if (src1 < src2) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 - src2;
}

// uninterpreted function to return an undefined value.
function $undefined_int(): int;

// Recursive exponentiation function
// Undefined unless e >=0.  $pow(0,0) is also undefined.
function $pow(n: int, e: int): int {
    if n != 0 && e == 0 then 1
    else if e > 0 then n * $pow(n, e - 1)
    else $undefined_int()
}

function $shl(src1: int, p: int): int {
    src1 * $pow(2, p)
}

function $shlU8(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 256
}

function $shlU16(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 65536
}

function $shlU32(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 4294967296
}

function $shlU64(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 18446744073709551616
}

function $shlU128(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 340282366920938463463374607431768211456
}

function $shlU256(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 115792089237316195423570985008687907853269984665640564039457584007913129639936
}

function $shr(src1: int, p: int): int {
    src1 div $pow(2, p)
}

// We need to know the size of the destination in order to drop bits
// that have been shifted left more than that, so we have $ShlU8/16/32/64/128/256
procedure {:inline 1} $ShlU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU8(src1, src2);
}

// Template for cast and shift operations of bitvector types

procedure {:inline 1} $CastBv8to8(src: bv8) returns (dst: bv8)
{
    dst := src;
}


function $shlBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shl'Bv8'(src1, src2)
}

procedure {:inline 1} $ShlBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2);
}

function $shrBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shr'Bv8'(src1, src2)
}

procedure {:inline 1} $ShrBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2);
}

procedure {:inline 1} $CastBv16to8(src: bv16) returns (dst: bv8)
{
    if ($Gt'Bv16'(src, 255bv16)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv32to8(src: bv32) returns (dst: bv8)
{
    if ($Gt'Bv32'(src, 255bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv64to8(src: bv64) returns (dst: bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv128to8(src: bv128) returns (dst: bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv256to8(src: bv256) returns (dst: bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv8to16(src: bv8) returns (dst: bv16)
{
    dst := 0bv8 ++ src;
}


function $shlBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shl'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShlBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, 0bv8 ++ src2);
}

function $shrBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shr'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShrBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, 0bv8 ++ src2);
}

procedure {:inline 1} $CastBv16to16(src: bv16) returns (dst: bv16)
{
    dst := src;
}


function $shlBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shl'Bv16'(src1, src2)
}

procedure {:inline 1} $ShlBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2);
}

function $shrBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shr'Bv16'(src1, src2)
}

procedure {:inline 1} $ShrBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2);
}

procedure {:inline 1} $CastBv32to16(src: bv32) returns (dst: bv16)
{
    if ($Gt'Bv32'(src, 65535bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv64to16(src: bv64) returns (dst: bv16)
{
    if ($Gt'Bv64'(src, 65535bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv128to16(src: bv128) returns (dst: bv16)
{
    if ($Gt'Bv128'(src, 65535bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv256to16(src: bv256) returns (dst: bv16)
{
    if ($Gt'Bv256'(src, 65535bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv8to32(src: bv8) returns (dst: bv32)
{
    dst := 0bv24 ++ src;
}


function $shlBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShlBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv24 ++ src2);
}

function $shrBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShrBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv24 ++ src2);
}

procedure {:inline 1} $CastBv16to32(src: bv16) returns (dst: bv32)
{
    dst := 0bv16 ++ src;
}


function $shlBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShlBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv16 ++ src2);
}

function $shrBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShrBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv16 ++ src2);
}

procedure {:inline 1} $CastBv32to32(src: bv32) returns (dst: bv32)
{
    dst := src;
}


function $shlBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shl'Bv32'(src1, src2)
}

procedure {:inline 1} $ShlBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2);
}

function $shrBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shr'Bv32'(src1, src2)
}

procedure {:inline 1} $ShrBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2);
}

procedure {:inline 1} $CastBv64to32(src: bv64) returns (dst: bv32)
{
    if ($Gt'Bv64'(src, 2147483647bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv128to32(src: bv128) returns (dst: bv32)
{
    if ($Gt'Bv128'(src, 2147483647bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv256to32(src: bv256) returns (dst: bv32)
{
    if ($Gt'Bv256'(src, 2147483647bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv8to64(src: bv8) returns (dst: bv64)
{
    dst := 0bv56 ++ src;
}


function $shlBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShlBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv56 ++ src2);
}

function $shrBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShrBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv56 ++ src2);
}

procedure {:inline 1} $CastBv16to64(src: bv16) returns (dst: bv64)
{
    dst := 0bv48 ++ src;
}


function $shlBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShlBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv48 ++ src2);
}

function $shrBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShrBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv48 ++ src2);
}

procedure {:inline 1} $CastBv32to64(src: bv32) returns (dst: bv64)
{
    dst := 0bv32 ++ src;
}


function $shlBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShlBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv32 ++ src2);
}

function $shrBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShrBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv32 ++ src2);
}

procedure {:inline 1} $CastBv64to64(src: bv64) returns (dst: bv64)
{
    dst := src;
}


function $shlBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shl'Bv64'(src1, src2)
}

procedure {:inline 1} $ShlBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2);
}

function $shrBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shr'Bv64'(src1, src2)
}

procedure {:inline 1} $ShrBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2);
}

procedure {:inline 1} $CastBv128to64(src: bv128) returns (dst: bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv256to64(src: bv256) returns (dst: bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv8to128(src: bv8) returns (dst: bv128)
{
    dst := 0bv120 ++ src;
}


function $shlBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShlBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv120 ++ src2);
}

function $shrBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShrBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv120 ++ src2);
}

procedure {:inline 1} $CastBv16to128(src: bv16) returns (dst: bv128)
{
    dst := 0bv112 ++ src;
}


function $shlBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShlBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv112 ++ src2);
}

function $shrBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShrBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv112 ++ src2);
}

procedure {:inline 1} $CastBv32to128(src: bv32) returns (dst: bv128)
{
    dst := 0bv96 ++ src;
}


function $shlBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShlBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv96 ++ src2);
}

function $shrBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShrBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv96 ++ src2);
}

procedure {:inline 1} $CastBv64to128(src: bv64) returns (dst: bv128)
{
    dst := 0bv64 ++ src;
}


function $shlBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShlBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv64 ++ src2);
}

function $shrBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShrBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv64 ++ src2);
}

procedure {:inline 1} $CastBv128to128(src: bv128) returns (dst: bv128)
{
    dst := src;
}


function $shlBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shl'Bv128'(src1, src2)
}

procedure {:inline 1} $ShlBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2);
}

function $shrBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shr'Bv128'(src1, src2)
}

procedure {:inline 1} $ShrBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2);
}

procedure {:inline 1} $CastBv256to128(src: bv256) returns (dst: bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[128:0];
}


function $shlBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shl'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShlBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2[128:0]);
}

function $shrBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shr'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShrBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2[128:0]);
}

procedure {:inline 1} $CastBv8to256(src: bv8) returns (dst: bv256)
{
    dst := 0bv248 ++ src;
}


function $shlBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShlBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv248 ++ src2);
}

function $shrBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShrBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv248 ++ src2);
}

procedure {:inline 1} $CastBv16to256(src: bv16) returns (dst: bv256)
{
    dst := 0bv240 ++ src;
}


function $shlBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShlBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv240 ++ src2);
}

function $shrBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShrBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv240 ++ src2);
}

procedure {:inline 1} $CastBv32to256(src: bv32) returns (dst: bv256)
{
    dst := 0bv224 ++ src;
}


function $shlBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShlBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv224 ++ src2);
}

function $shrBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShrBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv224 ++ src2);
}

procedure {:inline 1} $CastBv64to256(src: bv64) returns (dst: bv256)
{
    dst := 0bv192 ++ src;
}


function $shlBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShlBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv192 ++ src2);
}

function $shrBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShrBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv192 ++ src2);
}

procedure {:inline 1} $CastBv128to256(src: bv128) returns (dst: bv256)
{
    dst := 0bv128 ++ src;
}


function $shlBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShlBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv128 ++ src2);
}

function $shrBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShrBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv128 ++ src2);
}

procedure {:inline 1} $CastBv256to256(src: bv256) returns (dst: bv256)
{
    dst := src;
}


function $shlBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shl'Bv256'(src1, src2)
}

procedure {:inline 1} $ShlBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, src2);
}

function $shrBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shr'Bv256'(src1, src2)
}

procedure {:inline 1} $ShrBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, src2);
}

procedure {:inline 1} $ShlU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU16(src1, src2);
}

procedure {:inline 1} $ShlU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU32(src1, src2);
}

procedure {:inline 1} $ShlU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
       call $ExecFailureAbort();
       return;
    }
    dst := $shlU64(src1, src2);
}

procedure {:inline 1} $ShlU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU128(src1, src2);
}

procedure {:inline 1} $ShlU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shlU256(src1, src2);
}

procedure {:inline 1} $Shr(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $MulU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $Div(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 div src2;
}

procedure {:inline 1} $Mod(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 mod src2;
}

procedure {:inline 1} $ArithBinaryUnimplemented(src1: int, src2: int) returns (dst: int);

procedure {:inline 1} $Lt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 < src2;
}

procedure {:inline 1} $Gt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 > src2;
}

procedure {:inline 1} $Le(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 <= src2;
}

procedure {:inline 1} $Ge(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 >= src2;
}

procedure {:inline 1} $And(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 && src2;
}

procedure {:inline 1} $Or(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 || src2;
}

procedure {:inline 1} $Not(src: bool) returns (dst: bool)
{
    dst := !src;
}

// Pack and Unpack are auto-generated for each type T


// ==================================================================================
// Native Vector

function {:inline} $SliceVecByRange<T>(v: Vec T, r: $Range): Vec T {
    SliceVec(v, r->lb, r->ub)
}

// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `#0`

// Not inlined. It appears faster this way.
function $IsEqual'vec'#0''(v1: Vec (#0), v2: Vec (#0)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'#0'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'#0''(v: Vec (#0), prefix: Vec (#0)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'#0'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'#0''(v: Vec (#0), suffix: Vec (#0)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'#0'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'#0''(v: Vec (#0)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'#0'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'#0'(v: Vec (#0), e: #0): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e))
}

function $IndexOfVec'#0'(v: Vec (#0), e: #0): int;
axiom (forall v: Vec (#0), e: #0:: {$IndexOfVec'#0'(v, e)}
    (var i := $IndexOfVec'#0'(v, e);
     if (!$ContainsVec'#0'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'#0'(ReadVec(v, j), e))));


function {:inline} $RangeVec'#0'(v: Vec (#0)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'#0'() returns (v: Vec (#0)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'#0'(v: Vec (#0)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'#0'(m: $Mutation (Vec (#0)), val: #0) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'#0'(v: Vec (#0), val: #0): Vec (#0) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'#0'(m: $Mutation (Vec (#0))) returns (e: #0, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'#0'(m: $Mutation (Vec (#0))) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'#0'(m: $Mutation (Vec (#0)), left: int, right: int) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'#0'(m: $Mutation (Vec (#0)), rot: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'#0'(m: $Mutation (Vec (#0)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var mid_left_vec: Vec (#0);
    var mid_right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'#0'(m: $Mutation (Vec (#0)), i: int, e: #0) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'#0'(v: Vec (#0)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'#0'(v: Vec (#0)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'#0'(v: Vec (#0), i: int) returns (dst: #0) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'#0'(m: $Mutation (Vec (#0)), index: int)
returns (dst: $Mutation (#0), m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'#0'(v: Vec (#0)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'#0'(m: $Mutation (Vec (#0)), i: int, j: int) returns (m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'#0'(v: Vec (#0), i: int, j: int): Vec (#0) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var len: int;
    var v: Vec (#0);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'#0'(v: Vec (#0), e: #0) returns (res: bool)  {
    res := $ContainsVec'#0'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'#0'(v: Vec (#0), e: #0) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'#0'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(v1: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), v2: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), prefix: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), suffix: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(ReadVec(v, i), e))
}

function $IndexOfVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'): int;
axiom (forall v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set':: {$IndexOfVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v, e)}
    (var i := $IndexOfVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v, e);
     if (!$ContainsVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(): Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''() returns (v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(): Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), val: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set') returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), val: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'): Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set') {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) returns (e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) {
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), other: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')) returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), other: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')) returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), new_len: int) returns (v: (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), new_len: int) returns (v: (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), left: int, right: int) returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) {
    var left_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var mid_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var right_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), rot: int) returns (n: int, m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) {
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var len: int;
    var left_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var right_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) {
    var left_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var mid_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var right_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var mid_left_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var mid_right_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), i: int, e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set') returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))) {
    var left_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var right_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), i: int) returns (dst: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set') {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), i: int): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), index: int)
returns (dst: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')))
{
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), i: int): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), i: int, j: int) returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')))
{
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), i: int, j: int): Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set') {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), i: int) returns (e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')))
{
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')), i: int) returns (e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')))
{
    var len: int;
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set') returns (res: bool)  {
    res := $ContainsVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set') returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(v1: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), v2: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), prefix: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), suffix: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(ReadVec(v, i), e))
}

function $IndexOfVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'): int;
axiom (forall v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer':: {$IndexOfVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v, e)}
    (var i := $IndexOfVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v, e);
     if (!$ContainsVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(): Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''() returns (v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(): Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer') {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), val: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer') returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), val: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'): Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer') {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) returns (e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) {
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), other: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')) returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), other: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')) returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), new_len: int) returns (v: (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), new_len: int) returns (v: (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), left: int, right: int) returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) {
    var left_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var mid_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var right_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), rot: int) returns (n: int, m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) {
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var len: int;
    var left_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var right_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) {
    var left_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var mid_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var right_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var mid_left_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var mid_right_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), i: int, e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer') returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))) {
    var left_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var right_vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), i: int) returns (dst: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer') {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), i: int): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), index: int)
returns (dst: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')))
{
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), i: int): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer' {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), i: int, j: int) returns (m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')))
{
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), i: int, j: int): Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer') {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), i: int) returns (e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')))
{
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')), i: int) returns (e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', m': $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')))
{
    var len: int;
    var v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer') returns (res: bool)  {
    res := $ContainsVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), e: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer') returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_function_info_FunctionInfo`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_function_info_FunctionInfo''(v1: Vec ($1_function_info_FunctionInfo), v2: Vec ($1_function_info_FunctionInfo)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_function_info_FunctionInfo''(v: Vec ($1_function_info_FunctionInfo), prefix: Vec ($1_function_info_FunctionInfo)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_function_info_FunctionInfo''(v: Vec ($1_function_info_FunctionInfo), suffix: Vec ($1_function_info_FunctionInfo)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_function_info_FunctionInfo''(v: Vec ($1_function_info_FunctionInfo)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_function_info_FunctionInfo'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo): int;
axiom (forall v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo:: {$IndexOfVec'$1_function_info_FunctionInfo'(v, e)}
    (var i := $IndexOfVec'$1_function_info_FunctionInfo'(v, e);
     if (!$ContainsVec'$1_function_info_FunctionInfo'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_function_info_FunctionInfo'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_function_info_FunctionInfo'(): Vec ($1_function_info_FunctionInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_function_info_FunctionInfo'() returns (v: Vec ($1_function_info_FunctionInfo)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_function_info_FunctionInfo'(): Vec ($1_function_info_FunctionInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), val: $1_function_info_FunctionInfo) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), val: $1_function_info_FunctionInfo): Vec ($1_function_info_FunctionInfo) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo))) returns (e: $1_function_info_FunctionInfo, m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var v: Vec ($1_function_info_FunctionInfo);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), other: Vec ($1_function_info_FunctionInfo)) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo))) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), other: Vec ($1_function_info_FunctionInfo)) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), new_len: int) returns (v: (Vec ($1_function_info_FunctionInfo)), m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), new_len: int) returns (v: (Vec ($1_function_info_FunctionInfo)), m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), left: int, right: int) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var mid_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    var v: Vec ($1_function_info_FunctionInfo);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), rot: int) returns (n: int, m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var v: Vec ($1_function_info_FunctionInfo);
    var len: int;
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var mid_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    var mid_left_vec: Vec ($1_function_info_FunctionInfo);
    var mid_right_vec: Vec ($1_function_info_FunctionInfo);
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int, e: $1_function_info_FunctionInfo) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo))) {
    var left_vec: Vec ($1_function_info_FunctionInfo);
    var right_vec: Vec ($1_function_info_FunctionInfo);
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int) returns (dst: $1_function_info_FunctionInfo) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int): $1_function_info_FunctionInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), index: int)
returns (dst: $Mutation ($1_function_info_FunctionInfo), m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int): $1_function_info_FunctionInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int, j: int) returns (m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var v: Vec ($1_function_info_FunctionInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), i: int, j: int): Vec ($1_function_info_FunctionInfo) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int) returns (e: $1_function_info_FunctionInfo, m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var v: Vec ($1_function_info_FunctionInfo);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_function_info_FunctionInfo'(m: $Mutation (Vec ($1_function_info_FunctionInfo)), i: int) returns (e: $1_function_info_FunctionInfo, m': $Mutation (Vec ($1_function_info_FunctionInfo)))
{
    var len: int;
    var v: Vec ($1_function_info_FunctionInfo);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo) returns (res: bool)  {
    res := $ContainsVec'$1_function_info_FunctionInfo'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_function_info_FunctionInfo'(v: Vec ($1_function_info_FunctionInfo), e: $1_function_info_FunctionInfo) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_function_info_FunctionInfo'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fungible_asset_FungibleStore`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fungible_asset_FungibleStore''(v1: Vec ($1_fungible_asset_FungibleStore), v2: Vec ($1_fungible_asset_FungibleStore)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fungible_asset_FungibleStore''(v: Vec ($1_fungible_asset_FungibleStore), prefix: Vec ($1_fungible_asset_FungibleStore)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fungible_asset_FungibleStore''(v: Vec ($1_fungible_asset_FungibleStore), suffix: Vec ($1_fungible_asset_FungibleStore)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fungible_asset_FungibleStore''(v: Vec ($1_fungible_asset_FungibleStore)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fungible_asset_FungibleStore'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore): int;
axiom (forall v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore:: {$IndexOfVec'$1_fungible_asset_FungibleStore'(v, e)}
    (var i := $IndexOfVec'$1_fungible_asset_FungibleStore'(v, e);
     if (!$ContainsVec'$1_fungible_asset_FungibleStore'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fungible_asset_FungibleStore'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fungible_asset_FungibleStore'(): Vec ($1_fungible_asset_FungibleStore) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fungible_asset_FungibleStore'() returns (v: Vec ($1_fungible_asset_FungibleStore)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fungible_asset_FungibleStore'(): Vec ($1_fungible_asset_FungibleStore) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), val: $1_fungible_asset_FungibleStore) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), val: $1_fungible_asset_FungibleStore): Vec ($1_fungible_asset_FungibleStore) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore))) returns (e: $1_fungible_asset_FungibleStore, m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var v: Vec ($1_fungible_asset_FungibleStore);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), other: Vec ($1_fungible_asset_FungibleStore)) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore))) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), other: Vec ($1_fungible_asset_FungibleStore)) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), new_len: int) returns (v: (Vec ($1_fungible_asset_FungibleStore)), m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), new_len: int) returns (v: (Vec ($1_fungible_asset_FungibleStore)), m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), left: int, right: int) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    var v: Vec ($1_fungible_asset_FungibleStore);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var v: Vec ($1_fungible_asset_FungibleStore);
    var len: int;
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_left_vec: Vec ($1_fungible_asset_FungibleStore);
    var mid_right_vec: Vec ($1_fungible_asset_FungibleStore);
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int, e: $1_fungible_asset_FungibleStore) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore))) {
    var left_vec: Vec ($1_fungible_asset_FungibleStore);
    var right_vec: Vec ($1_fungible_asset_FungibleStore);
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int) returns (dst: $1_fungible_asset_FungibleStore) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int): $1_fungible_asset_FungibleStore {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), index: int)
returns (dst: $Mutation ($1_fungible_asset_FungibleStore), m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int): $1_fungible_asset_FungibleStore {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int, j: int) returns (m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var v: Vec ($1_fungible_asset_FungibleStore);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), i: int, j: int): Vec ($1_fungible_asset_FungibleStore) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int) returns (e: $1_fungible_asset_FungibleStore, m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var v: Vec ($1_fungible_asset_FungibleStore);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fungible_asset_FungibleStore'(m: $Mutation (Vec ($1_fungible_asset_FungibleStore)), i: int) returns (e: $1_fungible_asset_FungibleStore, m': $Mutation (Vec ($1_fungible_asset_FungibleStore)))
{
    var len: int;
    var v: Vec ($1_fungible_asset_FungibleStore);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore) returns (res: bool)  {
    res := $ContainsVec'$1_fungible_asset_FungibleStore'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fungible_asset_FungibleStore'(v: Vec ($1_fungible_asset_FungibleStore), e: $1_fungible_asset_FungibleStore) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fungible_asset_FungibleStore'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_string_String`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_string_String''(v1: Vec ($1_string_String), v2: Vec ($1_string_String)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_string_String'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_string_String''(v: Vec ($1_string_String), prefix: Vec ($1_string_String)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_string_String'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_string_String''(v: Vec ($1_string_String), suffix: Vec ($1_string_String)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_string_String'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_string_String''(v: Vec ($1_string_String)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_string_String'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_string_String'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String): int;
axiom (forall v: Vec ($1_string_String), e: $1_string_String:: {$IndexOfVec'$1_string_String'(v, e)}
    (var i := $IndexOfVec'$1_string_String'(v, e);
     if (!$ContainsVec'$1_string_String'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_string_String'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_string_String'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_string_String'(v: Vec ($1_string_String)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_string_String'(): Vec ($1_string_String) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_string_String'() returns (v: Vec ($1_string_String)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_string_String'(): Vec ($1_string_String) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_string_String'(v: Vec ($1_string_String)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_string_String'(m: $Mutation (Vec ($1_string_String)), val: $1_string_String) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_string_String'(v: Vec ($1_string_String), val: $1_string_String): Vec ($1_string_String) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_string_String'(m: $Mutation (Vec ($1_string_String))) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String))) {
    var v: Vec ($1_string_String);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_string_String'(m: $Mutation (Vec ($1_string_String)), other: Vec ($1_string_String)) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_string_String'(m: $Mutation (Vec ($1_string_String))) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_string_String'(m: $Mutation (Vec ($1_string_String)), other: Vec ($1_string_String)) returns (m': $Mutation (Vec ($1_string_String))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_string_String'(m: $Mutation (Vec ($1_string_String)), new_len: int) returns (v: (Vec ($1_string_String)), m': $Mutation (Vec ($1_string_String))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_string_String'(m: $Mutation (Vec ($1_string_String)), new_len: int) returns (v: (Vec ($1_string_String)), m': $Mutation (Vec ($1_string_String))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_string_String'(m: $Mutation (Vec ($1_string_String)), left: int, right: int) returns (m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var mid_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_string_String'(m: $Mutation (Vec ($1_string_String)), rot: int) returns (n: int, m': $Mutation (Vec ($1_string_String))) {
    var v: Vec ($1_string_String);
    var len: int;
    var left_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_string_String'(m: $Mutation (Vec ($1_string_String)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var mid_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var mid_left_vec: Vec ($1_string_String);
    var mid_right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int, e: $1_string_String) returns (m': $Mutation (Vec ($1_string_String))) {
    var left_vec: Vec ($1_string_String);
    var right_vec: Vec ($1_string_String);
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_string_String'(v: Vec ($1_string_String)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_string_String'(v: Vec ($1_string_String)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_string_String'(v: Vec ($1_string_String), i: int) returns (dst: $1_string_String) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_string_String'(v: Vec ($1_string_String), i: int): $1_string_String {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_string_String'(m: $Mutation (Vec ($1_string_String)), index: int)
returns (dst: $Mutation ($1_string_String), m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_string_String'(v: Vec ($1_string_String), i: int): $1_string_String {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_string_String'(v: Vec ($1_string_String)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int, j: int) returns (m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_string_String'(v: Vec ($1_string_String), i: int, j: int): Vec ($1_string_String) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String)))
{
    var v: Vec ($1_string_String);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_string_String'(m: $Mutation (Vec ($1_string_String)), i: int) returns (e: $1_string_String, m': $Mutation (Vec ($1_string_String)))
{
    var len: int;
    var v: Vec ($1_string_String);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String) returns (res: bool)  {
    res := $ContainsVec'$1_string_String'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_string_String'(v: Vec ($1_string_String), e: $1_string_String) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_string_String'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v1: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), v2: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), prefix: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), suffix: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(ReadVec(v, i), e))
}

function $IndexOfVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set): int;
axiom (forall v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set:: {$IndexOfVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v, e)}
    (var i := $IndexOfVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v, e);
     if (!$ContainsVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(): Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'() returns (v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(): Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), val: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), val: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set): Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) returns (e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set, m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), other: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), other: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), new_len: int) returns (v: (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), new_len: int) returns (v: (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), left: int, right: int) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    var left_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var mid_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var right_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), rot: int) returns (n: int, m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var len: int;
    var left_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var right_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    var left_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var mid_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var right_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var mid_left_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var mid_right_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), i: int, e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    var left_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var right_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), i: int) returns (dst: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), i: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), index: int)
returns (dst: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)))
{
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), i: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), i: int, j: int) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)))
{
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), i: int, j: int): Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), i: int) returns (e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set, m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)))
{
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), i: int) returns (e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set, m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)))
{
    var len: int;
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) returns (res: bool)  {
    res := $ContainsVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v1: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), v2: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), prefix: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), suffix: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(ReadVec(v, i), e))
}

function $IndexOfVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer): int;
axiom (forall v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer:: {$IndexOfVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v, e)}
    (var i := $IndexOfVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v, e);
     if (!$ContainsVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(): Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'() returns (v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(): Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), val: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), val: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer): Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) returns (e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer, m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), other: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), other: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), new_len: int) returns (v: (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), new_len: int) returns (v: (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), left: int, right: int) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    var left_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var mid_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var right_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), rot: int) returns (n: int, m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var len: int;
    var left_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var right_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    var left_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var mid_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var right_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var mid_left_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var mid_right_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), i: int, e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    var left_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var right_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), i: int) returns (dst: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), i: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), index: int)
returns (dst: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)))
{
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), i: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), i: int, j: int) returns (m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)))
{
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), i: int, j: int): Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), i: int) returns (e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer, m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)))
{
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(m: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), i: int) returns (e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer, m': $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)))
{
    var len: int;
    var v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) returns (res: bool)  {
    res := $ContainsVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), e: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `address`

// Not inlined. It appears faster this way.
function $IsEqual'vec'address''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'address'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'address''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'address'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'address''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'address'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'address''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'address'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'address'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e))
}

function $IndexOfVec'address'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'address'(v, e)}
    (var i := $IndexOfVec'address'(v, e);
     if (!$ContainsVec'address'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'address'(ReadVec(v, j), e))));


function {:inline} $RangeVec'address'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'address'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'address'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'address'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'address'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'address'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'address'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'address'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'address'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'address'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'address'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'address'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'address'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'address'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'address'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'address'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'address'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'address'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'address'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'address'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'address'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'address'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u128`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u128''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u128'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u128''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u128'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u128''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u128'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u128''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u128'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u128'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u128'(ReadVec(v, i), e))
}

function $IndexOfVec'u128'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u128'(v, e)}
    (var i := $IndexOfVec'u128'(v, e);
     if (!$ContainsVec'u128'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u128'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u128'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u128'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u128'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u128'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u128'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u128'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u128'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u128'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u128'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u128'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u128'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u128'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u128'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u128'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u128'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u128'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u128'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u128'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u128'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u128'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u128'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u128'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u128'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u128'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u128'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u128'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u128'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u128'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u128'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u128'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u128'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u128'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u128'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u64''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u64''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u64''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u64''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u64'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e))
}

function $IndexOfVec'u64'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u64'(v, e)}
    (var i := $IndexOfVec'u64'(v, e);
     if (!$ContainsVec'u64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u64'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u64'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u64'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u64'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u64'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u64'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u64'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u64'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u64'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u64'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u64'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u64'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u64'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u64'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u64'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u64'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u64'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u64'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u64'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u64'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u8''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u8''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u8''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u8''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u8'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e))
}

function $IndexOfVec'u8'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u8'(v, e)}
    (var i := $IndexOfVec'u8'(v, e);
     if (!$ContainsVec'u8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u8'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u8'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u8'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u8'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u8'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u8'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u8'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u8'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u8'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u8'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u8'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u8'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u8'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u8'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u8'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u8'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u8'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u8'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u8'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u8'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv128`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv128''(v1: Vec (bv128), v2: Vec (bv128)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv128'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv128''(v: Vec (bv128), prefix: Vec (bv128)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv128'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv128''(v: Vec (bv128), suffix: Vec (bv128)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv128'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv128''(v: Vec (bv128)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv128'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv128'(v: Vec (bv128), e: bv128): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv128'(ReadVec(v, i), e))
}

function $IndexOfVec'bv128'(v: Vec (bv128), e: bv128): int;
axiom (forall v: Vec (bv128), e: bv128:: {$IndexOfVec'bv128'(v, e)}
    (var i := $IndexOfVec'bv128'(v, e);
     if (!$ContainsVec'bv128'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv128'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv128'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv128'(v: Vec (bv128)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv128'(): Vec (bv128) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv128'() returns (v: Vec (bv128)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv128'(): Vec (bv128) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv128'(v: Vec (bv128)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv128'(m: $Mutation (Vec (bv128)), val: bv128) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv128'(v: Vec (bv128), val: bv128): Vec (bv128) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv128'(m: $Mutation (Vec (bv128))) returns (e: bv128, m': $Mutation (Vec (bv128))) {
    var v: Vec (bv128);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv128'(m: $Mutation (Vec (bv128)), other: Vec (bv128)) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv128'(m: $Mutation (Vec (bv128))) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv128'(m: $Mutation (Vec (bv128)), other: Vec (bv128)) returns (m': $Mutation (Vec (bv128))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv128'(m: $Mutation (Vec (bv128)), new_len: int) returns (v: (Vec (bv128)), m': $Mutation (Vec (bv128))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv128'(m: $Mutation (Vec (bv128)), new_len: int) returns (v: (Vec (bv128)), m': $Mutation (Vec (bv128))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv128'(m: $Mutation (Vec (bv128)), left: int, right: int) returns (m': $Mutation (Vec (bv128))) {
    var left_vec: Vec (bv128);
    var mid_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    var v: Vec (bv128);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv128'(m: $Mutation (Vec (bv128)), rot: int) returns (n: int, m': $Mutation (Vec (bv128))) {
    var v: Vec (bv128);
    var len: int;
    var left_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv128'(m: $Mutation (Vec (bv128)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv128))) {
    var left_vec: Vec (bv128);
    var mid_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    var mid_left_vec: Vec (bv128);
    var mid_right_vec: Vec (bv128);
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv128'(m: $Mutation (Vec (bv128)), i: int, e: bv128) returns (m': $Mutation (Vec (bv128))) {
    var left_vec: Vec (bv128);
    var right_vec: Vec (bv128);
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv128'(v: Vec (bv128)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv128'(v: Vec (bv128)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv128'(v: Vec (bv128), i: int) returns (dst: bv128) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv128'(v: Vec (bv128), i: int): bv128 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv128'(m: $Mutation (Vec (bv128)), index: int)
returns (dst: $Mutation (bv128), m': $Mutation (Vec (bv128)))
{
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv128'(v: Vec (bv128), i: int): bv128 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv128'(v: Vec (bv128)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv128'(m: $Mutation (Vec (bv128)), i: int, j: int) returns (m': $Mutation (Vec (bv128)))
{
    var v: Vec (bv128);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv128'(v: Vec (bv128), i: int, j: int): Vec (bv128) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv128'(m: $Mutation (Vec (bv128)), i: int) returns (e: bv128, m': $Mutation (Vec (bv128)))
{
    var v: Vec (bv128);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv128'(m: $Mutation (Vec (bv128)), i: int) returns (e: bv128, m': $Mutation (Vec (bv128)))
{
    var len: int;
    var v: Vec (bv128);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv128'(v: Vec (bv128), e: bv128) returns (res: bool)  {
    res := $ContainsVec'bv128'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv128'(v: Vec (bv128), e: bv128) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv128'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv64''(v1: Vec (bv64), v2: Vec (bv64)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv64''(v: Vec (bv64), prefix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv64''(v: Vec (bv64), suffix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv64''(v: Vec (bv64)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv64'(v: Vec (bv64), e: bv64): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e))
}

function $IndexOfVec'bv64'(v: Vec (bv64), e: bv64): int;
axiom (forall v: Vec (bv64), e: bv64:: {$IndexOfVec'bv64'(v, e)}
    (var i := $IndexOfVec'bv64'(v, e);
     if (!$ContainsVec'bv64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv64'(v: Vec (bv64)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv64'() returns (v: Vec (bv64)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv64'(v: Vec (bv64)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv64'(m: $Mutation (Vec (bv64)), val: bv64) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv64'(v: Vec (bv64), val: bv64): Vec (bv64) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv64'(m: $Mutation (Vec (bv64))) returns (e: bv64, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv64'(m: $Mutation (Vec (bv64))) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, right: int) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv64'(m: $Mutation (Vec (bv64)), rot: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var mid_left_vec: Vec (bv64);
    var mid_right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv64'(m: $Mutation (Vec (bv64)), i: int, e: bv64) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv64'(v: Vec (bv64)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv64'(v: Vec (bv64)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv64'(v: Vec (bv64), i: int) returns (dst: bv64) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv64'(m: $Mutation (Vec (bv64)), index: int)
returns (dst: $Mutation (bv64), m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv64'(v: Vec (bv64)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv64'(m: $Mutation (Vec (bv64)), i: int, j: int) returns (m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv64'(v: Vec (bv64), i: int, j: int): Vec (bv64) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var len: int;
    var v: Vec (bv64);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv64'(v: Vec (bv64), e: bv64) returns (res: bool)  {
    res := $ContainsVec'bv64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv64'(v: Vec (bv64), e: bv64) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv8''(v1: Vec (bv8), v2: Vec (bv8)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv8''(v: Vec (bv8), prefix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv8''(v: Vec (bv8), suffix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv8''(v: Vec (bv8)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv8'(v: Vec (bv8), e: bv8): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e))
}

function $IndexOfVec'bv8'(v: Vec (bv8), e: bv8): int;
axiom (forall v: Vec (bv8), e: bv8:: {$IndexOfVec'bv8'(v, e)}
    (var i := $IndexOfVec'bv8'(v, e);
     if (!$ContainsVec'bv8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv8'(v: Vec (bv8)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv8'() returns (v: Vec (bv8)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv8'(v: Vec (bv8)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv8'(m: $Mutation (Vec (bv8)), val: bv8) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv8'(v: Vec (bv8), val: bv8): Vec (bv8) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv8'(m: $Mutation (Vec (bv8))) returns (e: bv8, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv8'(m: $Mutation (Vec (bv8))) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, right: int) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv8'(m: $Mutation (Vec (bv8)), rot: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var mid_left_vec: Vec (bv8);
    var mid_right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv8'(m: $Mutation (Vec (bv8)), i: int, e: bv8) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv8'(v: Vec (bv8)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv8'(v: Vec (bv8)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv8'(v: Vec (bv8), i: int) returns (dst: bv8) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv8'(m: $Mutation (Vec (bv8)), index: int)
returns (dst: $Mutation (bv8), m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(m->l, ExtendVec(m->p, index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv8'(v: Vec (bv8)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv8'(m: $Mutation (Vec (bv8)), i: int, j: int) returns (m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv8'(v: Vec (bv8), i: int, j: int): Vec (bv8) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var len: int;
    var v: Vec (bv8);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv8'(v: Vec (bv8), e: bv8) returns (res: bool)  {
    res := $ContainsVec'bv8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv8'(v: Vec (bv8), e: bv8) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ==================================================================================
// Native Table

// ----------------------------------------------------------------------------------
// Native Table key encoding for type `u64`

function $EncodeKey'u64'(k: int): int;
axiom (
  forall k1, k2: int :: {$EncodeKey'u64'(k1), $EncodeKey'u64'(k2)}
    $IsEqual'u64'(k1, k2) <==> $EncodeKey'u64'(k1) == $EncodeKey'u64'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table implementation for type `(u64,vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')`

function $IsEqual'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(t1: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), t2: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(GetTable(t, i)))
}
procedure {:inline 2} $1_table_with_length_new'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''() returns (v: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_with_length_destroy_empty'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_with_length_length'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t: (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_table_with_length_empty'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t: (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)))) returns (r: bool) {
    r := LenTable(t) == 0;
}
procedure {:inline 2} $1_table_with_length_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t: (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'u64'(k));
}
procedure {:inline 2} $1_table_with_length_add'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))), k: int, v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) returns (m': $Mutation(Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)))) {
    var enc_k: int;
    var t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_with_length_upsert'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))), k: int, v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) returns (m': $Mutation(Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)))) {
    var enc_k: int;
    var t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_with_length_remove'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))), k: int)
returns (v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), m': $Mutation(Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)))) {
    var enc_k: int;
    var t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_with_length_borrow'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), k: int) returns (v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) {
    var enc_k: int;
    enc_k := $EncodeKey'u64'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'u64'(k));
    }
}
procedure {:inline 2} $1_table_with_length_borrow_mut'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))), k: int)
returns (dst: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), m': $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)))) {
    var enc_k: int;
    var t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_with_length_borrow_mut_with_default'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(m: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))), k: int, default: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))
returns (dst: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), m': $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)))) {
    var enc_k: int;
    var t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    var t': Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_table_with_length_spec_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t: (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)))): int {
    LenTable(t)
}
function {:inline} $1_table_with_length_spec_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t: (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))), k: int): bool {
    ContainsTable(t, $EncodeKey'u64'(k))
}
function {:inline} $1_table_with_length_spec_set'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), k: int, v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)): Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) {
    (var enc_k := $EncodeKey'u64'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_with_length_spec_remove'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), k: int): Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) {
    RemoveTable(t, $EncodeKey'u64'(k))
}
function {:inline} $1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), k: int): Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) {
    GetTable(t, $EncodeKey'u64'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `(u64,vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')`

function $IsEqual'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(t1: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), t2: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(GetTable(t, i)))
}
procedure {:inline 2} $1_table_with_length_new'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''() returns (v: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_with_length_destroy_empty'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_with_length_length'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t: (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_table_with_length_empty'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t: (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)))) returns (r: bool) {
    r := LenTable(t) == 0;
}
procedure {:inline 2} $1_table_with_length_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t: (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'u64'(k));
}
procedure {:inline 2} $1_table_with_length_add'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))), k: int, v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) returns (m': $Mutation(Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)))) {
    var enc_k: int;
    var t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_with_length_upsert'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))), k: int, v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) returns (m': $Mutation(Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)))) {
    var enc_k: int;
    var t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_with_length_remove'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))), k: int)
returns (v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), m': $Mutation(Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)))) {
    var enc_k: int;
    var t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_with_length_borrow'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), k: int) returns (v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) {
    var enc_k: int;
    enc_k := $EncodeKey'u64'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'u64'(k));
    }
}
procedure {:inline 2} $1_table_with_length_borrow_mut'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))), k: int)
returns (dst: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), m': $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)))) {
    var enc_k: int;
    var t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_with_length_borrow_mut_with_default'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(m: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))), k: int, default: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))
returns (dst: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), m': $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)))) {
    var enc_k: int;
    var t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
    var t': Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_table_with_length_spec_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t: (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)))): int {
    LenTable(t)
}
function {:inline} $1_table_with_length_spec_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t: (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))), k: int): bool {
    ContainsTable(t, $EncodeKey'u64'(k))
}
function {:inline} $1_table_with_length_spec_set'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), k: int, v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)): Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) {
    (var enc_k := $EncodeKey'u64'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_with_length_spec_remove'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), k: int): Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) {
    RemoveTable(t, $EncodeKey'u64'(k))
}
function {:inline} $1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), k: int): Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) {
    GetTable(t, $EncodeKey'u64'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `(u64,vec'#0')`

function $IsEqual'$1_table_with_length_TableWithLength'u64_vec'#0'''(t1: Table int (Vec (#0)), t2: Table int (Vec (#0))): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_with_length_TableWithLength'u64_vec'#0'''(t: Table int (Vec (#0))): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'vec'#0''(GetTable(t, i)))
}
procedure {:inline 2} $1_table_with_length_new'u64_vec'#0''() returns (v: Table int (Vec (#0))) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_with_length_destroy_empty'u64_vec'#0''(t: Table int (Vec (#0))) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_with_length_length'u64_vec'#0''(t: (Table int (Vec (#0)))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_table_with_length_empty'u64_vec'#0''(t: (Table int (Vec (#0)))) returns (r: bool) {
    r := LenTable(t) == 0;
}
procedure {:inline 2} $1_table_with_length_contains'u64_vec'#0''(t: (Table int (Vec (#0))), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'u64'(k));
}
procedure {:inline 2} $1_table_with_length_add'u64_vec'#0''(m: $Mutation (Table int (Vec (#0))), k: int, v: Vec (#0)) returns (m': $Mutation(Table int (Vec (#0)))) {
    var enc_k: int;
    var t: Table int (Vec (#0));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_with_length_upsert'u64_vec'#0''(m: $Mutation (Table int (Vec (#0))), k: int, v: Vec (#0)) returns (m': $Mutation(Table int (Vec (#0)))) {
    var enc_k: int;
    var t: Table int (Vec (#0));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_with_length_remove'u64_vec'#0''(m: $Mutation (Table int (Vec (#0))), k: int)
returns (v: Vec (#0), m': $Mutation(Table int (Vec (#0)))) {
    var enc_k: int;
    var t: Table int (Vec (#0));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_with_length_borrow'u64_vec'#0''(t: Table int (Vec (#0)), k: int) returns (v: Vec (#0)) {
    var enc_k: int;
    enc_k := $EncodeKey'u64'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'u64'(k));
    }
}
procedure {:inline 2} $1_table_with_length_borrow_mut'u64_vec'#0''(m: $Mutation (Table int (Vec (#0))), k: int)
returns (dst: $Mutation (Vec (#0)), m': $Mutation (Table int (Vec (#0)))) {
    var enc_k: int;
    var t: Table int (Vec (#0));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_with_length_borrow_mut_with_default'u64_vec'#0''(m: $Mutation (Table int (Vec (#0))), k: int, default: Vec (#0))
returns (dst: $Mutation (Vec (#0)), m': $Mutation (Table int (Vec (#0)))) {
    var enc_k: int;
    var t: Table int (Vec (#0));
    var t': Table int (Vec (#0));
    enc_k := $EncodeKey'u64'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(m'->l, ExtendVec(m'->p, enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(m->l, ExtendVec(m->p, enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_table_with_length_spec_len'u64_vec'#0''(t: (Table int (Vec (#0)))): int {
    LenTable(t)
}
function {:inline} $1_table_with_length_spec_contains'u64_vec'#0''(t: (Table int (Vec (#0))), k: int): bool {
    ContainsTable(t, $EncodeKey'u64'(k))
}
function {:inline} $1_table_with_length_spec_set'u64_vec'#0''(t: Table int (Vec (#0)), k: int, v: Vec (#0)): Table int (Vec (#0)) {
    (var enc_k := $EncodeKey'u64'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_with_length_spec_remove'u64_vec'#0''(t: Table int (Vec (#0)), k: int): Table int (Vec (#0)) {
    RemoveTable(t, $EncodeKey'u64'(k))
}
function {:inline} $1_table_with_length_spec_get'u64_vec'#0''(t: Table int (Vec (#0)), k: int): Vec (#0) {
    GetTable(t, $EncodeKey'u64'(k))
}



// ==================================================================================
// Native Hash

// Hash is modeled as an otherwise uninterpreted injection.
// In truth, it is not an injection since the domain has greater cardinality
// (arbitrary length vectors) than the co-domain (vectors of length 32).  But it is
// common to assume in code there are no hash collisions in practice.  Fortunately,
// Boogie is not smart enough to recognized that there is an inconsistency.
// FIXME: If we were using a reliable extensional theory of arrays, and if we could use ==
// instead of $IsEqual, we might be able to avoid so many quantified formulas by
// using a sha2_inverse function in the ensures conditions of Hash_sha2_256 to
// assert that sha2/3 are injections without using global quantified axioms.


function $1_hash_sha2(val: Vec int): Vec int;

// This says that Hash_sha2 is bijective.
axiom (forall v1,v2: Vec int :: {$1_hash_sha2(v1), $1_hash_sha2(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha2(v1), $1_hash_sha2(v2)));

procedure $1_hash_sha2_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha2(val);     // returns Hash_sha2 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha2_256(val: Vec int): Vec int {
    $1_hash_sha2(val)
}

// similarly for Hash_sha3
function $1_hash_sha3(val: Vec int): Vec int;

axiom (forall v1,v2: Vec int :: {$1_hash_sha3(v1), $1_hash_sha3(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha3(v1), $1_hash_sha3(v2)));

procedure $1_hash_sha3_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha3(val);     // returns Hash_sha3 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha3_256(val: Vec int): Vec int {
    $1_hash_sha3(val)
}

// ==================================================================================
// Native string

// TODO: correct implementation of strings

procedure {:inline 1} $1_string_internal_check_utf8(x: Vec int) returns (r: bool) {
}

procedure {:inline 1} $1_string_internal_sub_string(x: Vec int, i: int, j: int) returns (r: Vec int) {
}

procedure {:inline 1} $1_string_internal_index_of(x: Vec int, y: Vec int) returns (r: int) {
}

procedure {:inline 1} $1_string_internal_is_char_boundary(x: Vec int, i: int) returns (r: bool) {
}




// ==================================================================================
// Native diem_account

procedure {:inline 1} $1_DiemAccount_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

procedure {:inline 1} $1_DiemAccount_destroy_signer(
  signer: $signer
) {
  return;
}

// ==================================================================================
// Native account

procedure {:inline 1} $1_Account_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

// ==================================================================================
// Native Signer

datatype $signer {
    $signer($addr: int)
}
function {:inline} $IsValid'signer'(s: $signer): bool {
    $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'signer'(s1: $signer, s2: $signer): bool {
    s1 == s2
}

procedure {:inline 1} $1_signer_borrow_address(signer: $signer) returns (res: int) {
    res := signer->$addr;
}

function {:inline} $1_signer_$borrow_address(signer: $signer): int
{
    signer->$addr
}

function $1_signer_is_txn_signer(s: $signer): bool;

function $1_signer_is_txn_signer_addr(a: int): bool;


// ==================================================================================
// Native signature

// Signature related functionality is handled via uninterpreted functions. This is sound
// currently because we verify every code path based on signature verification with
// an arbitrary interpretation.

function $1_Signature_$ed25519_validate_pubkey(public_key: Vec int): bool;
function $1_Signature_$ed25519_verify(signature: Vec int, public_key: Vec int, message: Vec int): bool;

// Needed because we do not have extensional equality:
axiom (forall k1, k2: Vec int ::
    {$1_Signature_$ed25519_validate_pubkey(k1), $1_Signature_$ed25519_validate_pubkey(k2)}
    $IsEqual'vec'u8''(k1, k2) ==> $1_Signature_$ed25519_validate_pubkey(k1) == $1_Signature_$ed25519_validate_pubkey(k2));
axiom (forall s1, s2, k1, k2, m1, m2: Vec int ::
    {$1_Signature_$ed25519_verify(s1, k1, m1), $1_Signature_$ed25519_verify(s2, k2, m2)}
    $IsEqual'vec'u8''(s1, s2) && $IsEqual'vec'u8''(k1, k2) && $IsEqual'vec'u8''(m1, m2)
    ==> $1_Signature_$ed25519_verify(s1, k1, m1) == $1_Signature_$ed25519_verify(s2, k2, m2));


procedure {:inline 1} $1_Signature_ed25519_validate_pubkey(public_key: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_validate_pubkey(public_key);
}

procedure {:inline 1} $1_Signature_ed25519_verify(
        signature: Vec int, public_key: Vec int, message: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_verify(signature, public_key, message);
}


// ==================================================================================
// Native bcs::serialize

// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set): Vec int;

axiom (forall v1, v2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set :: {$1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v1), $1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v2)}
   $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v1), $1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set :: {$1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v)}
     ( var r := $1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) returns (res: Vec int);
ensures res == $1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v);

function {:inline} $1_bcs_$to_bytes'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set): Vec int {
    $1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(v)
}




// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer): Vec int;

axiom (forall v1, v2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer :: {$1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v1), $1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v2)}
   $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v1), $1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer :: {$1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v)}
     ( var r := $1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) returns (res: Vec int);
ensures res == $1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v);

function {:inline} $1_bcs_$to_bytes'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer): Vec int {
    $1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(v)
}




// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)): Vec int;

axiom (forall v1, v2: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) :: {$1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v1), $1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v2)}
   $IsEqual'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v1), $1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) :: {$1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v)}
     ( var r := $1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) returns (res: Vec int);
ensures res == $1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v);

function {:inline} $1_bcs_$to_bytes'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)): Vec int {
    $1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(v)
}




// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)): Vec int;

axiom (forall v1, v2: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) :: {$1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v1), $1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v2)}
   $IsEqual'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v1), $1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) :: {$1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v)}
     ( var r := $1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) returns (res: Vec int);
ensures res == $1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v);

function {:inline} $1_bcs_$to_bytes'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)): Vec int {
    $1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(v)
}




// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `address`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'address'(v: int): Vec int;

axiom (forall v1, v2: int :: {$1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)}
   $IsEqual'address'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'address'(v: int) returns (res: Vec int);
ensures res == $1_bcs_serialize'address'(v);

function {:inline} $1_bcs_$to_bytes'address'(v: int): Vec int {
    $1_bcs_serialize'address'(v)
}

// Serialized addresses should have the same length.
const $serialized_address_len: int;
// Serialized addresses should have the same length
axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); LenVec(r) == $serialized_address_len));




// ==================================================================================
// Native Event module



procedure {:inline 1} $InitEventStore() {
}

// ============================================================================================
// Type Reflection on Type Parameters

datatype $TypeParamInfo {
    $TypeParamBool(),
    $TypeParamU8(),
    $TypeParamU16(),
    $TypeParamU32(),
    $TypeParamU64(),
    $TypeParamU128(),
    $TypeParamU256(),
    $TypeParamAddress(),
    $TypeParamSigner(),
    $TypeParamVector(e: $TypeParamInfo),
    $TypeParamStruct(a: int, m: Vec int, s: Vec int)
}



//==================================
// Begin Translation

function $TypeName(t: $TypeParamInfo): Vec int;
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamBool ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)) ==> t is $TypeParamBool);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU8 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)) ==> t is $TypeParamU8);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU16 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)) ==> t is $TypeParamU16);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU32 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)) ==> t is $TypeParamU32);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU64 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)) ==> t is $TypeParamU64);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU128 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)) ==> t is $TypeParamU128);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamU256 ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)) ==> t is $TypeParamU256);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamAddress ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)) ==> t is $TypeParamAddress);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamSigner ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)) ==> t is $TypeParamSigner);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamVector ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7), $TypeName(t->e)), Vec(DefaultVecMap()[0 := 62], 1))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} ($IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7)) && $IsSuffix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 62], 1))) ==> t is $TypeParamVector);
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} t is $TypeParamStruct ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 48][1 := 120], 2), MakeVec1(t->a)), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->m), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), t->s)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 48][1 := 120], 2)) ==> t is $TypeParamVector);


// Given Types for Type Parameters

type #0;
function {:inline} $IsEqual'#0'(x1: #0, x2: #0): bool { x1 == x2 }
function {:inline} $IsValid'#0'(x: #0): bool { true }
var #0_info: $TypeParamInfo;
var #0_$memory: $Memory #0;

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'bool'(b1), $1_from_bcs_deserializable'bool'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u8'(b1), $1_from_bcs_deserializable'u8'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u64'(b1), $1_from_bcs_deserializable'u64'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u128'(b1), $1_from_bcs_deserializable'u128'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u256'(b1), $1_from_bcs_deserializable'u256'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'address'(b1), $1_from_bcs_deserializable'address'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'signer'(b1), $1_from_bcs_deserializable'signer'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u8''(b1), $1_from_bcs_deserializable'vec'u8''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u64''(b1), $1_from_bcs_deserializable'vec'u64''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u128''(b1), $1_from_bcs_deserializable'vec'u128''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'address''(b1), $1_from_bcs_deserializable'vec'address''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_string_String''(b1), $1_from_bcs_deserializable'vec'$1_string_String''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<big_vector::BigVector<aptos_discover::Q_set>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(b1), $1_from_bcs_deserializable'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<big_vector::BigVector<aptos_discover::User_answer>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(b1), $1_from_bcs_deserializable'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<aptos_discover::Q_set>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(b1), $1_from_bcs_deserializable'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<aptos_discover::User_answer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(b1), $1_from_bcs_deserializable'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'#0''(b1), $1_from_bcs_deserializable'vec'#0''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'u64''(b1), $1_from_bcs_deserializable'$1_option_Option'u64''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'u128''(b1), $1_from_bcs_deserializable'$1_option_Option'u128''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'address''(b1), $1_from_bcs_deserializable'$1_option_Option'address''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<big_vector::BigVector<aptos_discover::Q_set>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<big_vector::BigVector<aptos_discover::User_answer>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_String'(b1), $1_from_bcs_deserializable'$1_string_String'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_features_Features'(b1), $1_from_bcs_deserializable'$1_features_Features'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserializable'$1_type_info_TypeInfo'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_GUID'(b1), $1_from_bcs_deserializable'$1_guid_GUID'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_ID'(b1), $1_from_bcs_deserializable'$1_guid_ID'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_Account'(b1), $1_from_bcs_deserializable'$1_account_Account'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_SignerCapability'(b1), $1_from_bcs_deserializable'$1_account_SignerCapability'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aggregator_v2::Aggregator<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aggregator_v2::Aggregator<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(b1), $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ConstructorRef'(b1), $1_from_bcs_deserializable'$1_object_ConstructorRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::DeleteRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_DeleteRef'(b1), $1_from_bcs_deserializable'$1_object_DeleteRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::DeriveRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_DeriveRef'(b1), $1_from_bcs_deserializable'$1_object_DeriveRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::ExtendRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ExtendRef'(b1), $1_from_bcs_deserializable'$1_object_ExtendRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::Object<fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::Object<fungible_asset::Metadata>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(b1), $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_ObjectCore'(b1), $1_from_bcs_deserializable'$1_object_ObjectCore'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::TombStone>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TombStone'(b1), $1_from_bcs_deserializable'$1_object_TombStone'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::Transfer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Transfer'(b1), $1_from_bcs_deserializable'$1_object_Transfer'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferEvent'(b1), $1_from_bcs_deserializable'$1_object_TransferEvent'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_TransferRef'(b1), $1_from_bcs_deserializable'$1_object_TransferRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <object::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_object_Untransferable'(b1), $1_from_bcs_deserializable'$1_object_Untransferable'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <function_info::FunctionInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_function_info_FunctionInfo'(b1), $1_from_bcs_deserializable'$1_function_info_FunctionInfo'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(b1), $1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::BurnRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(b1), $1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::ConcurrentFungibleBalance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(b1), $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::ConcurrentSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(b1), $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::Deposit>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Deposit'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Deposit'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::DispatchFunctionStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(b1), $1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::FungibleAsset>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(b1), $1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::FungibleStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(b1), $1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::Metadata>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Metadata'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Metadata'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::MintRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_MintRef'(b1), $1_from_bcs_deserializable'$1_fungible_asset_MintRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::Supply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Supply'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Supply'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fungible_asset::Withdraw>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(b1), $1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <dispatchable_fungible_asset::TransferRefStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(b1), $1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <primary_fungible_store::DeriveRefPod>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(b1), $1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(b1), $1_from_bcs_deserializable'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <table_with_length::TableWithLength<u64, vector<aptos_discover::User_answer>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(b1), $1_from_bcs_deserializable'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <table_with_length::TableWithLength<u64, vector<#0>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_table_with_length_TableWithLength'u64_vec'#0'''(b1), $1_from_bcs_deserializable'$1_table_with_length_TableWithLength'u64_vec'#0'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <big_vector::BigVector<aptos_discover::Q_set>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(b1), $1_from_bcs_deserializable'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <big_vector::BigVector<aptos_discover::User_answer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(b1), $1_from_bcs_deserializable'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <smart_vector::SmartVector<aptos_discover::Q_set>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(b1), $1_from_bcs_deserializable'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <smart_vector::SmartVector<aptos_discover::User_answer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(b1), $1_from_bcs_deserializable'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_discover::ChainMark_FA_cap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'(b1), $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_discover::ChainMark_Object_cap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'(b1), $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_discover::Object_cap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'(b1), $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_discover::Organization>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'(b1), $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_discover::Problem>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'(b1), $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_discover::Problem_set>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'(b1), $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_discover::Q_set>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(b1), $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_discover::ResourceCap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'(b1), $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_discover::Resource_store_object>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'(b1), $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_discover::User_answer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(b1), $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'#0'(b1), $1_from_bcs_deserializable'#0'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u128'($1_from_bcs_deserialize'u128'(b1), $1_from_bcs_deserialize'u128'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u64''($1_from_bcs_deserialize'vec'u64''(b1), $1_from_bcs_deserialize'vec'u64''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u128''($1_from_bcs_deserialize'vec'u128''(b1), $1_from_bcs_deserialize'vec'u128''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<string::String>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_string_String''($1_from_bcs_deserialize'vec'$1_string_String''(b1), $1_from_bcs_deserialize'vec'$1_string_String''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_function_info_FunctionInfo''($1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fungible_asset_FungibleStore''($1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<big_vector::BigVector<aptos_discover::Q_set>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''($1_from_bcs_deserialize'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(b1), $1_from_bcs_deserialize'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<big_vector::BigVector<aptos_discover::User_answer>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''($1_from_bcs_deserialize'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(b1), $1_from_bcs_deserialize'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<aptos_discover::Q_set>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($1_from_bcs_deserialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(b1), $1_from_bcs_deserialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<aptos_discover::User_answer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($1_from_bcs_deserialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(b1), $1_from_bcs_deserialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'u64''($1_from_bcs_deserialize'$1_option_Option'u64''(b1), $1_from_bcs_deserialize'$1_option_Option'u64''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'u128''($1_from_bcs_deserialize'$1_option_Option'u128''(b1), $1_from_bcs_deserialize'$1_option_Option'u128''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'address''($1_from_bcs_deserialize'$1_option_Option'address''(b1), $1_from_bcs_deserialize'$1_option_Option'address''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<function_info::FunctionInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<big_vector::BigVector<aptos_discover::Q_set>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''($1_from_bcs_deserialize'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<big_vector::BigVector<aptos_discover::User_answer>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''($1_from_bcs_deserialize'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <features::Features>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_features_Features'($1_from_bcs_deserialize'$1_features_Features'(b1), $1_from_bcs_deserialize'$1_features_Features'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_type_info_TypeInfo'($1_from_bcs_deserialize'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserialize'$1_type_info_TypeInfo'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<object::TransferEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_Account'($1_from_bcs_deserialize'$1_account_Account'(b1), $1_from_bcs_deserialize'$1_account_Account'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_SignerCapability'($1_from_bcs_deserialize'$1_account_SignerCapability'(b1), $1_from_bcs_deserialize'$1_account_SignerCapability'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aggregator_v2::Aggregator<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_Aggregator'u64''($1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aggregator_v2::Aggregator<u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_v2_Aggregator'u128''($1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(b1), $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::ConstructorRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ConstructorRef'($1_from_bcs_deserialize'$1_object_ConstructorRef'(b1), $1_from_bcs_deserialize'$1_object_ConstructorRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::DeleteRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_DeleteRef'($1_from_bcs_deserialize'$1_object_DeleteRef'(b1), $1_from_bcs_deserialize'$1_object_DeleteRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::DeriveRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_DeriveRef'($1_from_bcs_deserialize'$1_object_DeriveRef'(b1), $1_from_bcs_deserialize'$1_object_DeriveRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::ExtendRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ExtendRef'($1_from_bcs_deserialize'$1_object_ExtendRef'(b1), $1_from_bcs_deserialize'$1_object_ExtendRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::Object<fungible_asset::FungibleStore>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$1_fungible_asset_FungibleStore''($1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(b1), $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::Object<fungible_asset::Metadata>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(b1), $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::ObjectCore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_ObjectCore'($1_from_bcs_deserialize'$1_object_ObjectCore'(b1), $1_from_bcs_deserialize'$1_object_ObjectCore'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::TombStone>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TombStone'($1_from_bcs_deserialize'$1_object_TombStone'(b1), $1_from_bcs_deserialize'$1_object_TombStone'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::Transfer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Transfer'($1_from_bcs_deserialize'$1_object_Transfer'(b1), $1_from_bcs_deserialize'$1_object_Transfer'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::TransferEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferEvent'($1_from_bcs_deserialize'$1_object_TransferEvent'(b1), $1_from_bcs_deserialize'$1_object_TransferEvent'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_TransferRef'($1_from_bcs_deserialize'$1_object_TransferRef'(b1), $1_from_bcs_deserialize'$1_object_TransferRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <object::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_object_Untransferable'($1_from_bcs_deserialize'$1_object_Untransferable'(b1), $1_from_bcs_deserialize'$1_object_Untransferable'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <function_info::FunctionInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_function_info_FunctionInfo'($1_from_bcs_deserialize'$1_function_info_FunctionInfo'(b1), $1_from_bcs_deserialize'$1_function_info_FunctionInfo'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::TransferRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_TransferRef'($1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(b1), $1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::Untransferable>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Untransferable'($1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::BurnRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_BurnRef'($1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(b1), $1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::ConcurrentFungibleBalance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_ConcurrentFungibleBalance'($1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(b1), $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::ConcurrentSupply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_ConcurrentSupply'($1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(b1), $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::Deposit>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Deposit'($1_from_bcs_deserialize'$1_fungible_asset_Deposit'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Deposit'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::DispatchFunctionStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_DispatchFunctionStore'($1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(b1), $1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::FungibleAsset>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_FungibleAsset'($1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(b1), $1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::FungibleStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_FungibleStore'($1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(b1), $1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::Metadata>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Metadata'($1_from_bcs_deserialize'$1_fungible_asset_Metadata'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Metadata'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::MintRef>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_MintRef'($1_from_bcs_deserialize'$1_fungible_asset_MintRef'(b1), $1_from_bcs_deserialize'$1_fungible_asset_MintRef'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::Supply>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Supply'($1_from_bcs_deserialize'$1_fungible_asset_Supply'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Supply'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fungible_asset::Withdraw>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fungible_asset_Withdraw'($1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(b1), $1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <dispatchable_fungible_asset::TransferRefStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_dispatchable_fungible_asset_TransferRefStore'($1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(b1), $1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <primary_fungible_store::DeriveRefPod>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_primary_fungible_store_DeriveRefPod'($1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(b1), $1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''($1_from_bcs_deserialize'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(b1), $1_from_bcs_deserialize'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <table_with_length::TableWithLength<u64, vector<aptos_discover::User_answer>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''($1_from_bcs_deserialize'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(b1), $1_from_bcs_deserialize'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <table_with_length::TableWithLength<u64, vector<#0>>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_table_with_length_TableWithLength'u64_vec'#0'''($1_from_bcs_deserialize'$1_table_with_length_TableWithLength'u64_vec'#0'''(b1), $1_from_bcs_deserialize'$1_table_with_length_TableWithLength'u64_vec'#0'''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <big_vector::BigVector<aptos_discover::Q_set>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($1_from_bcs_deserialize'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(b1), $1_from_bcs_deserialize'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <big_vector::BigVector<aptos_discover::User_answer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($1_from_bcs_deserialize'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(b1), $1_from_bcs_deserialize'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <smart_vector::SmartVector<aptos_discover::Q_set>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($1_from_bcs_deserialize'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(b1), $1_from_bcs_deserialize'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <smart_vector::SmartVector<aptos_discover::User_answer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($1_from_bcs_deserialize'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(b1), $1_from_bcs_deserialize'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_discover::ChainMark_FA_cap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'($1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'(b1), $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_discover::ChainMark_Object_cap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'($1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'(b1), $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_discover::Object_cap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'($1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'(b1), $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_discover::Organization>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'($1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'(b1), $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_discover::Problem>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'($1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'(b1), $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_discover::Problem_set>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'($1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'(b1), $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_discover::Q_set>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(b1), $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_discover::ResourceCap>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'($1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'(b1), $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_discover::Resource_store_object>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'($1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'(b1), $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_discover::User_answer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(b1), $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:8:9+113
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_keccak256(b1), $1_aptos_hash_spec_keccak256(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:13:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha2_512_internal(b1), $1_aptos_hash_spec_sha2_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:18:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha3_512_internal(b1), $1_aptos_hash_spec_sha3_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:23:9+131
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_ripemd160_internal(b1), $1_aptos_hash_spec_ripemd160_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:28:9+135
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_blake2b_256_internal(b1), $1_aptos_hash_spec_blake2b_256_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'u64'(self: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'u64'(self), 0)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'u128'(self: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'u128'(self), 0)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'address'(self: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'address'(self), 0)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'$1_function_info_FunctionInfo'(self: Vec ($1_function_info_FunctionInfo)): bool {
    $IsEqual'u64'($1_vector_$length'$1_function_info_FunctionInfo'(self), 0)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(self: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')): bool {
    $IsEqual'u64'($1_vector_$length'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(self), 0)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:152:5+92
function {:inline} $1_vector_$is_empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(self: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')): bool {
    $IsEqual'u64'($1_vector_$length'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(self), 0)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'u64'(): $1_option_Option'u64' {
    $1_option_Option'u64'($EmptyVec'u64'())
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'u128'(): $1_option_Option'u128' {
    $1_option_Option'u128'($EmptyVec'u128'())
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'address'(): $1_option_Option'address' {
    $1_option_Option'address'($EmptyVec'address'())
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'$1_function_info_FunctionInfo'(): $1_option_Option'$1_function_info_FunctionInfo' {
    $1_option_Option'$1_function_info_FunctionInfo'($EmptyVec'$1_function_info_FunctionInfo'())
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(): $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' {
    $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($EmptyVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''())
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(): $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' {
    $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($EmptyVec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''())
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'address'(e: int): $1_option_Option'address' {
    $1_option_Option'address'(MakeVec1(e))
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+97
function {:inline} $1_option_spec_is_none'u64'(self: $1_option_Option'u64'): bool {
    $1_vector_$is_empty'u64'(self->$vec)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+97
function {:inline} $1_option_spec_is_none'u128'(self: $1_option_Option'u128'): bool {
    $1_vector_$is_empty'u128'(self->$vec)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+97
function {:inline} $1_option_spec_is_none'address'(self: $1_option_Option'address'): bool {
    $1_vector_$is_empty'address'(self->$vec)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+97
function {:inline} $1_option_spec_is_none'$1_function_info_FunctionInfo'(self: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    $1_vector_$is_empty'$1_function_info_FunctionInfo'(self->$vec)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+97
function {:inline} $1_option_spec_is_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(self: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''): bool {
    $1_vector_$is_empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(self->$vec)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+97
function {:inline} $1_option_spec_is_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(self: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''): bool {
    $1_vector_$is_empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(self->$vec)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+98
function {:inline} $1_option_spec_is_some'u64'(self: $1_option_Option'u64'): bool {
    !$1_vector_$is_empty'u64'(self->$vec)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+98
function {:inline} $1_option_spec_is_some'u128'(self: $1_option_Option'u128'): bool {
    !$1_vector_$is_empty'u128'(self->$vec)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+98
function {:inline} $1_option_spec_is_some'$1_function_info_FunctionInfo'(self: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    !$1_vector_$is_empty'$1_function_info_FunctionInfo'(self->$vec)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+98
function {:inline} $1_option_spec_is_some'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(self: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''): bool {
    !$1_vector_$is_empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(self->$vec)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+98
function {:inline} $1_option_spec_is_some'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(self: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''): bool {
    !$1_vector_$is_empty'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(self->$vec)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'u64'(self: $1_option_Option'u64'): int {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'u128'(self: $1_option_Option'u128'): int {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$1_function_info_FunctionInfo'(self: $1_option_Option'$1_function_info_FunctionInfo'): $1_function_info_FunctionInfo {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(self: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:111:10+84
function {:inline} $1_option_spec_borrow'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(self: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer' {
    ReadVec(self->$vec, 0)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+154
function {:inline} $1_option_$borrow'u64'(self: $1_option_Option'u64'): int {
    $1_vector_$borrow'u64'(self->$vec, 0)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+101
function {:inline} $1_option_$is_none'u64'(self: $1_option_Option'u64'): bool {
    $1_vector_$is_empty'u64'(self->$vec)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+102
function {:inline} $1_option_$is_some'u64'(self: $1_option_Option'u64'): bool {
    !$1_vector_$is_empty'u64'(self->$vec)
}

// struct option::Option<u64> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'u64' {
    $1_option_Option'u64'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'u64''_vec(s: $1_option_Option'u64', x: Vec (int)): $1_option_Option'u64' {
    $1_option_Option'u64'(x)
}
function $IsValid'$1_option_Option'u64''(s: $1_option_Option'u64'): bool {
    $IsValid'vec'u64''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'u64''(s1: $1_option_Option'u64', s2: $1_option_Option'u64'): bool {
    $IsEqual'vec'u64''(s1->$vec, s2->$vec)}

// struct option::Option<u128> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'u128' {
    $1_option_Option'u128'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'u128''_vec(s: $1_option_Option'u128', x: Vec (int)): $1_option_Option'u128' {
    $1_option_Option'u128'(x)
}
function $IsValid'$1_option_Option'u128''(s: $1_option_Option'u128'): bool {
    $IsValid'vec'u128''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'u128''(s1: $1_option_Option'u128', s2: $1_option_Option'u128'): bool {
    $IsEqual'vec'u128''(s1->$vec, s2->$vec)}

// struct option::Option<address> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'address' {
    $1_option_Option'address'($vec: Vec (int))
}
function {:inline} $Update'$1_option_Option'address''_vec(s: $1_option_Option'address', x: Vec (int)): $1_option_Option'address' {
    $1_option_Option'address'(x)
}
function $IsValid'$1_option_Option'address''(s: $1_option_Option'address'): bool {
    $IsValid'vec'address''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'address''(s1: $1_option_Option'address', s2: $1_option_Option'address'): bool {
    $IsEqual'vec'address''(s1->$vec, s2->$vec)}

// struct option::Option<function_info::FunctionInfo> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_function_info_FunctionInfo' {
    $1_option_Option'$1_function_info_FunctionInfo'($vec: Vec ($1_function_info_FunctionInfo))
}
function {:inline} $Update'$1_option_Option'$1_function_info_FunctionInfo''_vec(s: $1_option_Option'$1_function_info_FunctionInfo', x: Vec ($1_function_info_FunctionInfo)): $1_option_Option'$1_function_info_FunctionInfo' {
    $1_option_Option'$1_function_info_FunctionInfo'(x)
}
function $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    $IsValid'vec'$1_function_info_FunctionInfo''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1: $1_option_Option'$1_function_info_FunctionInfo', s2: $1_option_Option'$1_function_info_FunctionInfo'): bool {
    $IsEqual'vec'$1_function_info_FunctionInfo''(s1->$vec, s2->$vec)}

// struct option::Option<big_vector::BigVector<aptos_discover::Q_set>> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' {
    $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))
}
function {:inline} $Update'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''_vec(s: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'', x: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')): $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' {
    $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(x)
}
function $IsValid'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(s: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''): bool {
    $IsValid'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(s1: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'', s2: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''): bool {
    $IsEqual'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(s1->$vec, s2->$vec)}

// struct option::Option<big_vector::BigVector<aptos_discover::User_answer>> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
datatype $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' {
    $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($vec: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))
}
function {:inline} $Update'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''_vec(s: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'', x: Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')): $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' {
    $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(x)
}
function $IsValid'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(s: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''): bool {
    $IsValid'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(s->$vec)
}
function {:inline} $IsEqual'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(s1: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'', s2: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''): bool {
    $IsEqual'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(s1->$vec, s2->$vec)}

// fun option::borrow_mut<u128> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+174
procedure {:inline 1} $1_option_borrow_mut'u128'(_$t0: $Mutation ($1_option_Option'u128')) returns ($ret0: $Mutation (int), $ret1: $Mutation ($1_option_Option'u128'))
{
    // declare local variables
    var $t1: $1_option_Option'u128';
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation (Vec (int));
    var $t6: int;
    var $t7: $Mutation (int);
    var $t0: $Mutation ($1_option_Option'u128');
    var $temp_0'$1_option_Option'u128'': $1_option_Option'u128';
    var $temp_0'u128': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+1
    assume {:print "$at(12,5933,5934)"} true;
    $temp_0'$1_option_Option'u128'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'u128''} $temp_0'$1_option_Option'u128'' == $temp_0'$1_option_Option'u128'';

    // $t1 := read_ref($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:25+4
    assume {:print "$at(12,6032,6036)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // assume WellFormed($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'u128'($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // if ($t2) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L0:

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;

    // drop($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39

    // $t3 := 262145 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:32+15
    $t3 := 262145;
    assume $IsValid'u64'($t3);

    // trace_abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    assume {:print "$track_abort(1,1):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    $t4 := $t3;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:33+4
    assume {:print "$at(12,6089,6093)"} true;
L2:

    // $t5 := borrow_field<option::Option<#0>>.vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:28+13
    assume {:print "$at(12,6084,6097)"} true;
    $t5 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t6 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:43+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := vector::borrow_mut<#0>($t5, $t6) on_abort goto L4 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    call $t7,$t5 := $1_vector_borrow_mut'u128'($t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(12,6065,6101)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(1,1):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_return[0]($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'u128' := $Dereference($t7);
    assume {:print "$track_return(1,1,0):", $temp_0'u128'} $temp_0'u128' == $temp_0'u128';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'u128'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'u128''} $temp_0'$1_option_Option'u128'' == $temp_0'$1_option_Option'u128'';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'u128'' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'u128''} $temp_0'$1_option_Option'u128'' == $temp_0'$1_option_Option'u128'';

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
L3:

    // return $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $ret0 := $t7;
    $ret1 := $t0;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
L4:

    // abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun option::borrow_mut<big_vector::BigVector<aptos_discover::Q_set>> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+174
procedure {:inline 1} $1_option_borrow_mut'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(_$t0: $Mutation ($1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'')) returns ($ret0: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), $ret1: $Mutation ($1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''))
{
    // declare local variables
    var $t1: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'));
    var $t6: int;
    var $t7: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t0: $Mutation ($1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'');
    var $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''': $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+1
    assume {:print "$at(12,5933,5934)"} true;
    $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''} $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''' == $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''';

    // $t1 := read_ref($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:25+4
    assume {:print "$at(12,6032,6036)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // assume WellFormed($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // if ($t2) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L0:

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;

    // drop($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39

    // $t3 := 262145 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:32+15
    $t3 := 262145;
    assume $IsValid'u64'($t3);

    // trace_abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    assume {:print "$track_abort(1,1):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    $t4 := $t3;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:33+4
    assume {:print "$at(12,6089,6093)"} true;
L2:

    // $t5 := borrow_field<option::Option<#0>>.vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:28+13
    assume {:print "$at(12,6084,6097)"} true;
    $t5 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t6 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:43+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := vector::borrow_mut<#0>($t5, $t6) on_abort goto L4 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    call $t7,$t5 := $1_vector_borrow_mut'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(12,6065,6101)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(1,1):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_return[0]($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t7);
    assume {:print "$track_return(1,1,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''} $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''' == $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''} $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''' == $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''';

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
L3:

    // return $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $ret0 := $t7;
    $ret1 := $t0;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
L4:

    // abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun option::borrow_mut<big_vector::BigVector<aptos_discover::User_answer>> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+174
procedure {:inline 1} $1_option_borrow_mut'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(_$t0: $Mutation ($1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'')) returns ($ret0: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), $ret1: $Mutation ($1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''))
{
    // declare local variables
    var $t1: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation (Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'));
    var $t6: int;
    var $t7: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var $t0: $Mutation ($1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'');
    var $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'': $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''': $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:173:5+1
    assume {:print "$at(12,5933,5934)"} true;
    $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''} $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''' == $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''';

    // $t1 := read_ref($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:25+4
    assume {:print "$at(12,6032,6036)"} true;
    $t1 := $Dereference($t0);

    // $t2 := opaque begin: option::is_some<#0>($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // assume WellFormed($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<#0>($t1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t1));

    // $t2 := opaque end: option::is_some<#0>($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:17+13

    // if ($t2) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
L0:

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;

    // drop($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39

    // $t3 := 262145 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:32+15
    $t3 := 262145;
    assume $IsValid'u64'($t3);

    // trace_abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    assume {:print "$at(12,6016,6055)"} true;
    assume {:print "$track_abort(1,1):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    $t4 := $t3;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:174:9+39
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:33+4
    assume {:print "$at(12,6089,6093)"} true;
L2:

    // $t5 := borrow_field<option::Option<#0>>.vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:28+13
    assume {:print "$at(12,6084,6097)"} true;
    $t5 := $ChildMutation($t0, 0, $Dereference($t0)->$vec);

    // $t6 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:43+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := vector::borrow_mut<#0>($t5, $t6) on_abort goto L4 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    call $t7,$t5 := $1_vector_borrow_mut'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(12,6065,6101)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(1,1):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_return[0]($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t7);
    assume {:print "$track_return(1,1,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''} $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''' == $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:175:9+36
    $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''' := $Dereference($t0);
    assume {:print "$track_local(1,1,0):", $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''} $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''' == $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''';

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
L3:

    // return $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $ret0 := $t7;
    $ret1 := $t0;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
L4:

    // abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:176:5+1
    assume {:print "$at(12,6106,6107)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.spec.move:28:9+50
function  $1_string_spec_internal_check_utf8(v: Vec (int)): bool;
axiom (forall v: Vec (int) ::
(var $$res := $1_string_spec_internal_check_utf8(v);
$IsValid'bool'($$res)));

// struct string::String at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:13:5+70
datatype $1_string_String {
    $1_string_String($bytes: Vec (int))
}
function {:inline} $Update'$1_string_String'_bytes(s: $1_string_String, x: Vec (int)): $1_string_String {
    $1_string_String(x)
}
function $IsValid'$1_string_String'(s: $1_string_String): bool {
    $IsValid'vec'u8''(s->$bytes)
}
function {:inline} $IsEqual'$1_string_String'(s1: $1_string_String, s2: $1_string_String): bool {
    $IsEqual'vec'u8''(s1->$bytes, s2->$bytes)}

// fun string::length [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:43:5+81
procedure {:inline 1} $1_string_length(_$t0: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: int;
    var $t3: int;
    var $t0: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:43:5+1
    assume {:print "$at(14,1307,1308)"} true;
    assume {:print "$track_local(2,10,0):", $t0} $t0 == $t0;

    // $t1 := get_field<string::String>.bytes($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:24+11
    assume {:print "$at(14,1370,1381)"} true;
    $t1 := $t0->$bytes;

    // $t2 := vector::length<u8>($t1) on_abort goto L2 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:9+27
    call $t2 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(14,1355,1382)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(2,10):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:44:9+27
    assume {:print "$track_return(2,10,0):", $t2} $t2 == $t2;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:45:5+1
    assume {:print "$at(14,1387,1388)"} true;
L1:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:45:5+1
    assume {:print "$at(14,1387,1388)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:45:5+1
L2:

    // abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:45:5+1
    assume {:print "$at(14,1387,1388)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun string::utf8 [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:5+133
procedure {:inline 1} $1_string_utf8(_$t0: Vec (int)) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: $1_string_String;
    var $t0: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[bytes]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:5+1
    assume {:print "$at(14,573,574)"} true;
    assume {:print "$track_local(2,13,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: string::internal_check_utf8($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27
    assume {:print "$at(14,634,661)"} true;

    // assume WellFormed($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, string::spec_internal_check_utf8($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27
    assume $IsEqual'bool'($t1, $1_string_spec_internal_check_utf8($t0));

    // $t1 := opaque end: string::internal_check_utf8($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27

    // if ($t1) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    assume {:print "$at(14,626,677)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:46+13
L0:

    // $t2 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:46+13
    assume {:print "$at(14,663,676)"} true;
    $t2 := 1;
    assume $IsValid'u64'($t2);

    // trace_abort($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    assume {:print "$at(14,626,677)"} true;
    assume {:print "$track_abort(2,13):", $t2} $t2 == $t2;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:16+5
    assume {:print "$at(14,694,699)"} true;
L2:

    // $t3 := pack string::String($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:9+13
    assume {:print "$at(14,687,700)"} true;
    $t3 := $1_string_String($t0);

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:9+13
    assume {:print "$track_return(2,13,0):", $t3} $t3 == $t3;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
    assume {:print "$at(14,705,706)"} true;
L3:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
    assume {:print "$at(14,705,706)"} true;
    $ret0 := $t3;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
L4:

    // abort($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
    assume {:print "$at(14,705,706)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+77
function {:inline} $1_signer_$address_of(s: $signer): int {
    $1_signer_$borrow_address(s)
}

// fun signer::address_of [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+77
procedure {:inline 1} $1_signer_address_of(_$t0: $signer) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+1
    assume {:print "$at(13,395,396)"} true;
    assume {:print "$track_local(3,0,0):", $t0} $t0 == $t0;

    // $t1 := signer::borrow_address($t0) on_abort goto L2 with $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:13:10+17
    assume {:print "$at(13,449,466)"} true;
    call $t1 := $1_signer_borrow_address($t0);
    if ($abort_flag) {
        assume {:print "$at(13,449,466)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(3,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:13:9+18
    assume {:print "$track_return(3,0,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(13,471,472)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(13,471,472)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
L2:

    // abort($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(13,471,472)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun error::aborted [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:3+57
procedure {:inline 1} $1_error_aborted(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:3+1
    assume {:print "$at(9,3525,3526)"} true;
    assume {:print "$track_local(4,0,0):", $t0} $t0 == $t0;

    // $t1 := 7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:47+7
    $t1 := 7;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21
    assume {:print "$at(9,3559,3580)"} true;

    // assume WellFormed($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:37+21
    assume {:print "$track_return(4,0,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:59+1
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:82:59+1
    assume {:print "$at(9,3581,3582)"} true;
    $ret0 := $t3;
    return;

}

// fun error::already_exists [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+71
procedure {:inline 1} $1_error_already_exists(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+1
    assume {:print "$at(9,3585,3586)"} true;
    assume {:print "$track_local(4,1,0):", $t0} $t0 == $t0;

    // $t1 := 8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:54+14
    $t1 := 8;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$at(9,3626,3654)"} true;

    // assume WellFormed($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$track_return(4,1,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
    assume {:print "$at(9,3655,3656)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_argument [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+76
procedure {:inline 1} $1_error_invalid_argument(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+1
    assume {:print "$at(9,3082,3083)"} true;
    assume {:print "$track_local(4,4,0):", $t0} $t0 == $t0;

    // $t1 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:57+16
    $t1 := 1;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$at(9,3126,3156)"} true;

    // assume WellFormed($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$track_return(4,4,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
    assume {:print "$at(9,3157,3158)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_state [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+70
procedure {:inline 1} $1_error_invalid_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+1
    assume {:print "$at(9,3232,3233)"} true;
    assume {:print "$track_local(4,5,0):", $t0} $t0 == $t0;

    // $t1 := 3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:54+13
    $t1 := 3;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$at(9,3273,3300)"} true;

    // assume WellFormed($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$track_return(4,5,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
    assume {:print "$at(9,3301,3302)"} true;
    $ret0 := $t3;
    return;

}

// fun error::not_found [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+61
procedure {:inline 1} $1_error_not_found(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+1
    assume {:print "$at(9,3461,3462)"} true;
    assume {:print "$track_local(4,6,0):", $t0} $t0 == $t0;

    // $t1 := 6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:49+9
    $t1 := 6;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$at(9,3497,3520)"} true;

    // assume WellFormed($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$track_return(4,6,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
    assume {:print "$at(9,3521,3522)"} true;
    $ret0 := $t3;
    return;

}

// fun error::out_of_range [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+68
procedure {:inline 1} $1_error_out_of_range(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+1
    assume {:print "$at(9,3161,3162)"} true;
    assume {:print "$track_local(4,8,0):", $t0} $t0 == $t0;

    // $t1 := 2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:53+12
    $t1 := 2;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$at(9,3201,3227)"} true;

    // assume WellFormed($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$track_return(4,8,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
    assume {:print "$at(9,3228,3229)"} true;
    $ret0 := $t3;
    return;

}

// fun error::permission_denied [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+77
procedure {:inline 1} $1_error_permission_denied(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+1
    assume {:print "$at(9,3381,3382)"} true;
    assume {:print "$track_local(4,9,0):", $t0} $t0 == $t0;

    // $t1 := 5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:57+17
    $t1 := 5;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(9,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$at(9,3425,3456)"} true;

    // assume WellFormed($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$track_return(4,9,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
    assume {:print "$at(9,3457,3458)"} true;
    $ret0 := $t3;
    return;

}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.spec.move:59:10+40
function  $1_features_spec_is_enabled(feature: int): bool;
axiom (forall feature: int ::
(var $$res := $1_features_spec_is_enabled(feature);
$IsValid'bool'($$res)));

// struct features::Features at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:613:5+61
datatype $1_features_Features {
    $1_features_Features($features: Vec (bv8))
}
function {:inline} $Update'$1_features_Features'_features(s: $1_features_Features, x: Vec (bv8)): $1_features_Features {
    $1_features_Features(x)
}
function $IsValid'$1_features_Features'(s: $1_features_Features): bool {
    $IsValid'vec'bv8''(s->$features)
}
function {:inline} $IsEqual'$1_features_Features'(s1: $1_features_Features, s2: $1_features_Features): bool {
    $IsEqual'vec'bv8''(s1->$features, s2->$features)}
var $1_features_Features_$memory: $Memory $1_features_Features;

// fun features::concurrent_fungible_assets_enabled [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:409:5+126
procedure {:inline 1} $1_features_concurrent_fungible_assets_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 50 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:410:20+26
    assume {:print "$at(7,14950,14976)"} true;
    $t0 := 50;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:410:9+38

    // assume WellFormed($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:410:9+38
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:410:9+38
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:410:9+38

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:410:9+38
    assume {:print "$track_return(5,21,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:411:5+1
    assume {:print "$at(7,14982,14983)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:411:5+1
    assume {:print "$at(7,14982,14983)"} true;
    $ret0 := $t1;
    return;

}

// fun features::default_to_concurrent_fungible_balance_enabled [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:569:5+150
procedure {:inline 1} $1_features_default_to_concurrent_fungible_balance_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 68 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:570:20+38
    assume {:print "$at(7,20879,20917)"} true;
    $t0 := 68;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:570:9+50

    // assume WellFormed($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:570:9+50
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:570:9+50
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:570:9+50

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:570:9+50
    assume {:print "$track_return(5,26,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:571:5+1
    assume {:print "$at(7,20923,20924)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:571:5+1
    assume {:print "$at(7,20923,20924)"} true;
    $ret0 := $t1;
    return;

}

// fun features::dispatchable_fungible_asset_enabled [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:530:5+128
procedure {:inline 1} $1_features_dispatchable_fungible_asset_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 63 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:531:20+27
    assume {:print "$at(7,19347,19374)"} true;
    $t0 := 63;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:531:9+39

    // assume WellFormed($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:531:9+39
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:531:9+39
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:531:9+39

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:531:9+39
    assume {:print "$track_return(5,30,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:532:5+1
    assume {:print "$at(7,19380,19381)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:532:5+1
    assume {:print "$at(7,19380,19381)"} true;
    $ret0 := $t1;
    return;

}

// fun features::module_event_migration_enabled [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:468:5+118
procedure {:inline 1} $1_features_module_event_migration_enabled() returns ($ret0: bool)
{
    // declare local variables
    var $t0: int;
    var $t1: bool;
    var $temp_0'bool': bool;

    // bytecode translation starts here
    // $t0 := 57 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:469:20+22
    assume {:print "$at(7,17041,17063)"} true;
    $t0 := 57;
    assume $IsValid'u64'($t0);

    // $t1 := opaque begin: features::is_enabled($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:469:9+34

    // assume WellFormed($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:469:9+34
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, features::spec_is_enabled($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:469:9+34
    assume $IsEqual'bool'($t1, $1_features_spec_is_enabled($t0));

    // $t1 := opaque end: features::is_enabled($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:469:9+34

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:469:9+34
    assume {:print "$track_return(5,89,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:470:5+1
    assume {:print "$at(7,17069,17070)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/configs/features.move:470:5+1
    assume {:print "$at(7,17069,17070)"} true;
    $ret0 := $t1;
    return;

}

// struct type_info::TypeInfo at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:16:5+145
datatype $1_type_info_TypeInfo {
    $1_type_info_TypeInfo($account_address: int, $module_name: Vec (int), $struct_name: Vec (int))
}
function {:inline} $Update'$1_type_info_TypeInfo'_account_address(s: $1_type_info_TypeInfo, x: int): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(x, s->$module_name, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_module_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, x, s->$struct_name)
}
function {:inline} $Update'$1_type_info_TypeInfo'_struct_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(s->$account_address, s->$module_name, x)
}
function $IsValid'$1_type_info_TypeInfo'(s: $1_type_info_TypeInfo): bool {
    $IsValid'address'(s->$account_address)
      && $IsValid'vec'u8''(s->$module_name)
      && $IsValid'vec'u8''(s->$struct_name)
}
function {:inline} $IsEqual'$1_type_info_TypeInfo'(s1: $1_type_info_TypeInfo, s2: $1_type_info_TypeInfo): bool {
    $IsEqual'address'(s1->$account_address, s2->$account_address)
    && $IsEqual'vec'u8''(s1->$module_name, s2->$module_name)
    && $IsEqual'vec'u8''(s1->$struct_name, s2->$struct_name)}

// fun type_info::size_of_val<vector<aptos_discover::Q_set>> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:66:5+89
procedure {:inline 1} $1_type_info_size_of_val'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(_$t0: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t0: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $temp_0'u64': int;
    var $temp_0'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[val_ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:66:5+1
    assume {:print "$at(79,2009,2010)"} true;
    assume {:print "$track_local(7,4,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: bcs::serialized_size<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$at(79,2063,2092)"} true;

    // $t2 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
L4:

    // trace_abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$at(79,2063,2092)"} true;
    assume {:print "$track_abort(7,4):", $t3} $t3 == $t3;

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    goto L2;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
L3:

    // assume WellFormed($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$at(79,2063,2092)"} true;
    assume $IsValid'u64'($t1);

    // assume Eq<u64>($t1, Len<u8>(bcs::serialize<#0>($t0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume $IsEqual'u64'($t1, LenVec($1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t0)));

    // $t1 := opaque end: bcs::serialized_size<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$track_return(7,4,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
    assume {:print "$at(79,2097,2098)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
    assume {:print "$at(79,2097,2098)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
L2:

    // abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
    assume {:print "$at(79,2097,2098)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun type_info::size_of_val<vector<aptos_discover::User_answer>> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:66:5+89
procedure {:inline 1} $1_type_info_size_of_val'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(_$t0: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t0: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var $temp_0'u64': int;
    var $temp_0'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'': Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[val_ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:66:5+1
    assume {:print "$at(79,2009,2010)"} true;
    assume {:print "$track_local(7,4,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: bcs::serialized_size<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$at(79,2063,2092)"} true;

    // $t2 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
L4:

    // trace_abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$at(79,2063,2092)"} true;
    assume {:print "$track_abort(7,4):", $t3} $t3 == $t3;

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    goto L2;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
L3:

    // assume WellFormed($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$at(79,2063,2092)"} true;
    assume $IsValid'u64'($t1);

    // assume Eq<u64>($t1, Len<u8>(bcs::serialize<#0>($t0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume $IsEqual'u64'($t1, LenVec($1_bcs_serialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t0)));

    // $t1 := opaque end: bcs::serialized_size<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$track_return(7,4,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
    assume {:print "$at(79,2097,2098)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
    assume {:print "$at(79,2097,2098)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
L2:

    // abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
    assume {:print "$at(79,2097,2098)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun type_info::size_of_val<aptos_discover::Q_set> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:66:5+89
procedure {:inline 1} $1_type_info_size_of_val'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(_$t0: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t0: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[val_ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:66:5+1
    assume {:print "$at(79,2009,2010)"} true;
    assume {:print "$track_local(7,4,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: bcs::serialized_size<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$at(79,2063,2092)"} true;

    // $t2 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
L4:

    // trace_abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$at(79,2063,2092)"} true;
    assume {:print "$track_abort(7,4):", $t3} $t3 == $t3;

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    goto L2;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
L3:

    // assume WellFormed($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$at(79,2063,2092)"} true;
    assume $IsValid'u64'($t1);

    // assume Eq<u64>($t1, Len<u8>(bcs::serialize<#0>($t0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume $IsEqual'u64'($t1, LenVec($1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t0)));

    // $t1 := opaque end: bcs::serialized_size<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$track_return(7,4,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
    assume {:print "$at(79,2097,2098)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
    assume {:print "$at(79,2097,2098)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
L2:

    // abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
    assume {:print "$at(79,2097,2098)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun type_info::size_of_val<aptos_discover::User_answer> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:66:5+89
procedure {:inline 1} $1_type_info_size_of_val'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(_$t0: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t0: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer;
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[val_ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:66:5+1
    assume {:print "$at(79,2009,2010)"} true;
    assume {:print "$track_local(7,4,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: bcs::serialized_size<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$at(79,2063,2092)"} true;

    // $t2 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    havoc $t2;

    // if ($t2) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
L4:

    // trace_abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$at(79,2063,2092)"} true;
    assume {:print "$track_abort(7,4):", $t3} $t3 == $t3;

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    goto L2;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
L3:

    // assume WellFormed($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$at(79,2063,2092)"} true;
    assume $IsValid'u64'($t1);

    // assume Eq<u64>($t1, Len<u8>(bcs::serialize<#0>($t0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume $IsEqual'u64'($t1, LenVec($1_bcs_serialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t0)));

    // $t1 := opaque end: bcs::serialized_size<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:67:9+29
    assume {:print "$track_return(7,4,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
    assume {:print "$at(79,2097,2098)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
    assume {:print "$at(79,2097,2098)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
L2:

    // abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:68:5+1
    assume {:print "$at(79,2097,2098)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// struct guid::GUID at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:7:5+50
datatype $1_guid_GUID {
    $1_guid_GUID($id: $1_guid_ID)
}
function {:inline} $Update'$1_guid_GUID'_id(s: $1_guid_GUID, x: $1_guid_ID): $1_guid_GUID {
    $1_guid_GUID(x)
}
function $IsValid'$1_guid_GUID'(s: $1_guid_GUID): bool {
    $IsValid'$1_guid_ID'(s->$id)
}
function {:inline} $IsEqual'$1_guid_GUID'(s1: $1_guid_GUID, s2: $1_guid_GUID): bool {
    s1 == s2
}

// struct guid::ID at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:12:5+209
datatype $1_guid_ID {
    $1_guid_ID($creation_num: int, $addr: int)
}
function {:inline} $Update'$1_guid_ID'_creation_num(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(x, s->$addr)
}
function {:inline} $Update'$1_guid_ID'_addr(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(s->$creation_num, x)
}
function $IsValid'$1_guid_ID'(s: $1_guid_ID): bool {
    $IsValid'u64'(s->$creation_num)
      && $IsValid'address'(s->$addr)
}
function {:inline} $IsEqual'$1_guid_ID'(s1: $1_guid_ID, s2: $1_guid_ID): bool {
    s1 == s2
}

// fun guid::create [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:23:5+286
procedure {:inline 1} $1_guid_create(_$t0: int, _$t1: $Mutation (int)) returns ($ret0: $1_guid_GUID, $ret1: $Mutation (int))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_guid_ID;
    var $t8: $1_guid_GUID;
    var $t0: int;
    var $t1: $Mutation (int);
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:23:5+1
    assume {:print "$at(145,836,837)"} true;
    assume {:print "$track_local(13,0,0):", $t0} $t0 == $t0;

    // trace_local[creation_num_ref]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:23:5+1
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t3 := read_ref($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:24:28+17
    assume {:print "$at(145,940,957)"} true;
    $t3 := $Dereference($t1);

    // trace_local[creation_num]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:24:13+12
    assume {:print "$track_local(13,0,2):", $t3} $t3 == $t3;

    // $t4 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:25:44+1
    assume {:print "$at(145,1002,1003)"} true;
    $t4 := 1;
    assume $IsValid'u64'($t4);

    // $t5 := +($t3, $t4) on_abort goto L2 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:25:42+1
    call $t5 := $AddU64($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(145,1000,1001)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(13,0):", $t6} $t6 == $t6;
        goto L2;
    }

    // write_ref($t1, $t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:25:9+36
    $t1 := $UpdateMutation($t1, $t5);

    // $t7 := pack guid::ID($t3, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:27:17+70
    assume {:print "$at(145,1036,1106)"} true;
    $t7 := $1_guid_ID($t3, $t0);

    // $t8 := pack guid::GUID($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    assume {:print "$at(145,1013,1116)"} true;
    $t8 := $1_guid_GUID($t7);

    // trace_return[0]($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    assume {:print "$track_return(13,0,0):", $t8} $t8 == $t8;

    // trace_local[creation_num_ref]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(145,1121,1122)"} true;
L1:

    // return $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(145,1121,1122)"} true;
    $ret0 := $t8;
    $ret1 := $t1;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
L2:

    // abort($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(145,1121,1122)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u8'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u8'(bytes);
$IsValid'u8'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u64'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u64'(bytes);
$IsValid'u64'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u128'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u128'(bytes);
$IsValid'u128'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u256'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u256'(bytes);
$IsValid'u256'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'address'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'address'(bytes);
$IsValid'address'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'signer'(bytes: Vec (int)): $signer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'signer'(bytes);
$IsValid'signer'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u8''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u8''(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u64''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u64''(bytes);
$IsValid'vec'u64''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u128''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u128''(bytes);
$IsValid'vec'u128''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'address''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'address''(bytes);
$IsValid'vec'address''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_string_String''(bytes: Vec (int)): Vec ($1_string_String);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_string_String''(bytes);
$IsValid'vec'$1_string_String''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(bytes: Vec (int)): Vec ($1_function_info_FunctionInfo);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_function_info_FunctionInfo''(bytes);
$IsValid'vec'$1_function_info_FunctionInfo''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): Vec ($1_fungible_asset_FungibleStore);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'vec'$1_fungible_asset_FungibleStore''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(bytes: Vec (int)): Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(bytes);
$IsValid'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(bytes: Vec (int)): Vec ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(bytes);
$IsValid'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(bytes: Vec (int)): Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(bytes);
$IsValid'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(bytes: Vec (int)): Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(bytes);
$IsValid'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'#0''(bytes: Vec (int)): Vec (#0);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'#0''(bytes);
$IsValid'vec'#0''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'u64''(bytes: Vec (int)): $1_option_Option'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'u64''(bytes);
$IsValid'$1_option_Option'u64''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'u128''(bytes: Vec (int)): $1_option_Option'u128';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'u128''(bytes);
$IsValid'$1_option_Option'u128''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'address''(bytes: Vec (int)): $1_option_Option'address';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'address''(bytes);
$IsValid'$1_option_Option'address''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(bytes: Vec (int)): $1_option_Option'$1_function_info_FunctionInfo';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_function_info_FunctionInfo''(bytes);
$IsValid'$1_option_Option'$1_function_info_FunctionInfo''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(bytes: Vec (int)): $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(bytes);
$IsValid'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(bytes: Vec (int)): $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(bytes);
$IsValid'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_String'(bytes: Vec (int)): $1_string_String;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_String'(bytes);
$IsValid'$1_string_String'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_features_Features'(bytes: Vec (int)): $1_features_Features;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_features_Features'(bytes);
$IsValid'$1_features_Features'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes: Vec (int)): $1_type_info_TypeInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes);
$IsValid'$1_type_info_TypeInfo'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_GUID'(bytes: Vec (int)): $1_guid_GUID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_GUID'(bytes);
$IsValid'$1_guid_GUID'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_ID'(bytes: Vec (int)): $1_guid_ID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_ID'(bytes);
$IsValid'$1_guid_ID'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_CoinRegisterEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_KeyRotationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_object_TransferEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_object_TransferEvent''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_Account'(bytes: Vec (int)): $1_account_Account;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_Account'(bytes);
$IsValid'$1_account_Account'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_RotationCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_SignerCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes: Vec (int)): $1_account_SignerCapability;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes);
$IsValid'$1_account_SignerCapability'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(bytes: Vec (int)): $1_aggregator_v2_Aggregator'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u64''(bytes);
$IsValid'$1_aggregator_v2_Aggregator'u64''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(bytes: Vec (int)): $1_aggregator_v2_Aggregator'u128';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_v2_Aggregator'u128''(bytes);
$IsValid'$1_aggregator_v2_Aggregator'u128''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes: Vec (int)): $1_object_ConstructorRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ConstructorRef'(bytes);
$IsValid'$1_object_ConstructorRef'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_DeleteRef'(bytes: Vec (int)): $1_object_DeleteRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_DeleteRef'(bytes);
$IsValid'$1_object_DeleteRef'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_DeriveRef'(bytes: Vec (int)): $1_object_DeriveRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_DeriveRef'(bytes);
$IsValid'$1_object_DeriveRef'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ExtendRef'(bytes: Vec (int)): $1_object_ExtendRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ExtendRef'(bytes);
$IsValid'$1_object_ExtendRef'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): $1_object_Object'$1_fungible_asset_FungibleStore';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'$1_object_Object'$1_fungible_asset_FungibleStore''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(bytes: Vec (int)): $1_object_Object'$1_fungible_asset_Metadata';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Object'$1_fungible_asset_Metadata''(bytes);
$IsValid'$1_object_Object'$1_fungible_asset_Metadata''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes: Vec (int)): $1_object_ObjectCore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_ObjectCore'(bytes);
$IsValid'$1_object_ObjectCore'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TombStone'(bytes: Vec (int)): $1_object_TombStone;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TombStone'(bytes);
$IsValid'$1_object_TombStone'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Transfer'(bytes: Vec (int)): $1_object_Transfer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Transfer'(bytes);
$IsValid'$1_object_Transfer'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes: Vec (int)): $1_object_TransferEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferEvent'(bytes);
$IsValid'$1_object_TransferEvent'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_TransferRef'(bytes: Vec (int)): $1_object_TransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_TransferRef'(bytes);
$IsValid'$1_object_TransferRef'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_object_Untransferable'(bytes: Vec (int)): $1_object_Untransferable;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_object_Untransferable'(bytes);
$IsValid'$1_object_Untransferable'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_function_info_FunctionInfo'(bytes: Vec (int)): $1_function_info_FunctionInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_function_info_FunctionInfo'(bytes);
$IsValid'$1_function_info_FunctionInfo'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(bytes: Vec (int)): $1_fungible_asset_TransferRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_TransferRef'(bytes);
$IsValid'$1_fungible_asset_TransferRef'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(bytes: Vec (int)): $1_fungible_asset_Untransferable;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Untransferable'(bytes);
$IsValid'$1_fungible_asset_Untransferable'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(bytes: Vec (int)): $1_fungible_asset_BurnRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_BurnRef'(bytes);
$IsValid'$1_fungible_asset_BurnRef'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(bytes: Vec (int)): $1_fungible_asset_ConcurrentFungibleBalance;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentFungibleBalance'(bytes);
$IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(bytes: Vec (int)): $1_fungible_asset_ConcurrentSupply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_ConcurrentSupply'(bytes);
$IsValid'$1_fungible_asset_ConcurrentSupply'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Deposit'(bytes: Vec (int)): $1_fungible_asset_Deposit;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Deposit'(bytes);
$IsValid'$1_fungible_asset_Deposit'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(bytes: Vec (int)): $1_fungible_asset_DispatchFunctionStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_DispatchFunctionStore'(bytes);
$IsValid'$1_fungible_asset_DispatchFunctionStore'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(bytes: Vec (int)): $1_fungible_asset_FungibleAsset;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_FungibleAsset'(bytes);
$IsValid'$1_fungible_asset_FungibleAsset'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(bytes: Vec (int)): $1_fungible_asset_FungibleStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_FungibleStore'(bytes);
$IsValid'$1_fungible_asset_FungibleStore'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Metadata'(bytes: Vec (int)): $1_fungible_asset_Metadata;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Metadata'(bytes);
$IsValid'$1_fungible_asset_Metadata'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_MintRef'(bytes: Vec (int)): $1_fungible_asset_MintRef;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_MintRef'(bytes);
$IsValid'$1_fungible_asset_MintRef'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Supply'(bytes: Vec (int)): $1_fungible_asset_Supply;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Supply'(bytes);
$IsValid'$1_fungible_asset_Supply'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(bytes: Vec (int)): $1_fungible_asset_Withdraw;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fungible_asset_Withdraw'(bytes);
$IsValid'$1_fungible_asset_Withdraw'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(bytes: Vec (int)): $1_dispatchable_fungible_asset_TransferRefStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_dispatchable_fungible_asset_TransferRefStore'(bytes);
$IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(bytes: Vec (int)): $1_primary_fungible_store_DeriveRefPod;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_primary_fungible_store_DeriveRefPod'(bytes);
$IsValid'$1_primary_fungible_store_DeriveRefPod'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(bytes: Vec (int)): Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(bytes);
$IsValid'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(bytes: Vec (int)): Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(bytes);
$IsValid'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_with_length_TableWithLength'u64_vec'#0'''(bytes: Vec (int)): Table int (Vec (#0));
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_with_length_TableWithLength'u64_vec'#0'''(bytes);
$IsValid'$1_table_with_length_TableWithLength'u64_vec'#0'''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(bytes: Vec (int)): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(bytes);
$IsValid'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(bytes: Vec (int)): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(bytes);
$IsValid'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(bytes: Vec (int)): $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(bytes);
$IsValid'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(bytes: Vec (int)): $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(bytes);
$IsValid'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'(bytes: Vec (int)): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'(bytes);
$IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'(bytes: Vec (int)): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'(bytes);
$IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'(bytes: Vec (int)): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'(bytes);
$IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'(bytes: Vec (int)): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'(bytes);
$IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'(bytes: Vec (int)): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'(bytes);
$IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'(bytes: Vec (int)): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'(bytes);
$IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(bytes: Vec (int)): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(bytes);
$IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'(bytes: Vec (int)): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'(bytes);
$IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'(bytes: Vec (int)): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'(bytes);
$IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(bytes: Vec (int)): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(bytes);
$IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'#0'(bytes: Vec (int)): #0;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'#0'(bytes);
$IsValid'#0'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u8'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u8'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u64'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u64'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u128'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u128'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u256'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u256'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'address'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'address'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'signer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'signer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u8''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u8''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u128''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u128''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_string_String''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_string_String''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_function_info_FunctionInfo''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'u128''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'u128''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_function_info_FunctionInfo''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_String'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_String'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_features_Features'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_features_Features'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_GUID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_GUID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_ID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_ID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_object_TransferEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_Account'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_Account'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_v2_Aggregator'u128''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ConstructorRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_DeleteRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_DeleteRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_DeriveRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_DeriveRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ExtendRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ExtendRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_FungibleStore''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Object'$1_fungible_asset_Metadata''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_ObjectCore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TombStone'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TombStone'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Transfer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Transfer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_TransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_TransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_object_Untransferable'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_object_Untransferable'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_function_info_FunctionInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_function_info_FunctionInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_TransferRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Untransferable'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_BurnRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentFungibleBalance'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_ConcurrentSupply'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Deposit'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Deposit'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_DispatchFunctionStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_FungibleAsset'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_FungibleStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Metadata'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Metadata'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_MintRef'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_MintRef'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Supply'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Supply'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fungible_asset_Withdraw'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_dispatchable_fungible_asset_TransferRefStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_primary_fungible_store_DeriveRefPod'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_table_with_length_TableWithLength'u64_vec'#0'''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_table_with_length_TableWithLength'u64_vec'#0'''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'#0'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'#0'(bytes);
$IsValid'bool'($$res)));

// struct event::EventHandle<account::CoinRegisterEvent> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:34:5+224
datatype $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_counter(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: int): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_guid(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1: $1_event_EventHandle'$1_account_CoinRegisterEvent', s2: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<account::KeyRotationEvent> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:34:5+224
datatype $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_counter(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: int): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_guid(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1: $1_event_EventHandle'$1_account_KeyRotationEvent', s2: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<object::TransferEvent> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:34:5+224
datatype $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'($counter: int, $guid: $1_guid_GUID)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_counter(s: $1_event_EventHandle'$1_object_TransferEvent', x: int): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(x, s->$guid)
}
function {:inline} $Update'$1_event_EventHandle'$1_object_TransferEvent''_guid(s: $1_event_EventHandle'$1_object_TransferEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_object_TransferEvent' {
    $1_event_EventHandle'$1_object_TransferEvent'(s->$counter, x)
}
function $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    $IsValid'u64'(s->$counter)
      && $IsValid'$1_guid_GUID'(s->$guid)
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_object_TransferEvent''(s1: $1_event_EventHandle'$1_object_TransferEvent', s2: $1_event_EventHandle'$1_object_TransferEvent'): bool {
    s1 == s2
}

// fun event::new_event_handle<account::CoinRegisterEvent> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_account_CoinRegisterEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_account_CoinRegisterEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_account_CoinRegisterEvent'': $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+1
    assume {:print "$at(135,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:45:22+1
    assume {:print "$at(135,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$at(135,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$1_account_CoinRegisterEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
L1:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<account::KeyRotationEvent> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_account_KeyRotationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_account_KeyRotationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_account_KeyRotationEvent'': $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+1
    assume {:print "$at(135,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:45:22+1
    assume {:print "$at(135,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$at(135,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$1_account_KeyRotationEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
L1:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<object::TransferEvent> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_object_TransferEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_object_TransferEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_object_TransferEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_object_TransferEvent'': $1_event_EventHandle'$1_object_TransferEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:43:5+1
    assume {:print "$at(135,1543,1544)"} true;
    assume {:print "$track_local(15,5,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:45:22+1
    assume {:print "$at(135,1672,1673)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$at(135,1634,1702)"} true;
    $t2 := $1_event_EventHandle'$1_object_TransferEvent'($t1, $t0);

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:44:9+68
    assume {:print "$track_return(15,5,0):", $t2} $t2 == $t2;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
L1:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/event.move:48:5+1
    assume {:print "$at(135,1707,1708)"} true;
    $ret0 := $t2;
    return;

}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:580:10+77
function  $1_account_spec_create_resource_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_account_spec_create_resource_address(source, seed);
$IsValid'address'($$res)));

// struct account::Account at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:34:5+401
datatype $1_account_Account {
    $1_account_Account($authentication_key: Vec (int), $sequence_number: int, $guid_creation_num: int, $coin_register_events: $1_event_EventHandle'$1_account_CoinRegisterEvent', $key_rotation_events: $1_event_EventHandle'$1_account_KeyRotationEvent', $rotation_capability_offer: $1_account_CapabilityOffer'$1_account_RotationCapability', $signer_capability_offer: $1_account_CapabilityOffer'$1_account_SignerCapability')
}
function {:inline} $Update'$1_account_Account'_authentication_key(s: $1_account_Account, x: Vec (int)): $1_account_Account {
    $1_account_Account(x, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_sequence_number(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, x, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_guid_creation_num(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, x, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_coin_register_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_CoinRegisterEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, x, s->$key_rotation_events, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_key_rotation_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_KeyRotationEvent'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, x, s->$rotation_capability_offer, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_rotation_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_RotationCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, x, s->$signer_capability_offer)
}
function {:inline} $Update'$1_account_Account'_signer_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_SignerCapability'): $1_account_Account {
    $1_account_Account(s->$authentication_key, s->$sequence_number, s->$guid_creation_num, s->$coin_register_events, s->$key_rotation_events, s->$rotation_capability_offer, x)
}
function $IsValid'$1_account_Account'(s: $1_account_Account): bool {
    $IsValid'vec'u8''(s->$authentication_key)
      && $IsValid'u64'(s->$sequence_number)
      && $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s->$coin_register_events)
      && $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s->$key_rotation_events)
      && $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s->$rotation_capability_offer)
      && $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s->$signer_capability_offer)
}
function {:inline} $IsEqual'$1_account_Account'(s1: $1_account_Account, s2: $1_account_Account): bool {
    $IsEqual'vec'u8''(s1->$authentication_key, s2->$authentication_key)
    && $IsEqual'u64'(s1->$sequence_number, s2->$sequence_number)
    && $IsEqual'u64'(s1->$guid_creation_num, s2->$guid_creation_num)
    && $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1->$coin_register_events, s2->$coin_register_events)
    && $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1->$key_rotation_events, s2->$key_rotation_events)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1->$rotation_capability_offer, s2->$rotation_capability_offer)
    && $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1->$signer_capability_offer, s2->$signer_capability_offer)}
var $1_account_Account_$memory: $Memory $1_account_Account;

// struct account::CapabilityOffer<account::RotationCapability> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:53:5+68
datatype $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_RotationCapability''_for(s: $1_account_CapabilityOffer'$1_account_RotationCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1: $1_account_CapabilityOffer'$1_account_RotationCapability', s2: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CapabilityOffer<account::SignerCapability> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:53:5+68
datatype $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'($for: $1_option_Option'address')
}
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for(s: $1_account_CapabilityOffer'$1_account_SignerCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsValid'$1_option_Option'address''(s->$for)
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1: $1_account_CapabilityOffer'$1_account_SignerCapability', s2: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsEqual'$1_option_Option'address''(s1->$for, s2->$for)}

// struct account::CoinRegisterEvent at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:49:5+77
datatype $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent($type_info: $1_type_info_TypeInfo)
}
function {:inline} $Update'$1_account_CoinRegisterEvent'_type_info(s: $1_account_CoinRegisterEvent, x: $1_type_info_TypeInfo): $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent(x)
}
function $IsValid'$1_account_CoinRegisterEvent'(s: $1_account_CoinRegisterEvent): bool {
    $IsValid'$1_type_info_TypeInfo'(s->$type_info)
}
function {:inline} $IsEqual'$1_account_CoinRegisterEvent'(s1: $1_account_CoinRegisterEvent, s2: $1_account_CoinRegisterEvent): bool {
    $IsEqual'$1_type_info_TypeInfo'(s1->$type_info, s2->$type_info)}

// struct account::KeyRotationEvent at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:44:5+135
datatype $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent($old_authentication_key: Vec (int), $new_authentication_key: Vec (int))
}
function {:inline} $Update'$1_account_KeyRotationEvent'_old_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(x, s->$new_authentication_key)
}
function {:inline} $Update'$1_account_KeyRotationEvent'_new_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(s->$old_authentication_key, x)
}
function $IsValid'$1_account_KeyRotationEvent'(s: $1_account_KeyRotationEvent): bool {
    $IsValid'vec'u8''(s->$old_authentication_key)
      && $IsValid'vec'u8''(s->$new_authentication_key)
}
function {:inline} $IsEqual'$1_account_KeyRotationEvent'(s1: $1_account_KeyRotationEvent, s2: $1_account_KeyRotationEvent): bool {
    $IsEqual'vec'u8''(s1->$old_authentication_key, s2->$old_authentication_key)
    && $IsEqual'vec'u8''(s1->$new_authentication_key, s2->$new_authentication_key)}

// struct account::RotationCapability at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:55:5+62
datatype $1_account_RotationCapability {
    $1_account_RotationCapability($account: int)
}
function {:inline} $Update'$1_account_RotationCapability'_account(s: $1_account_RotationCapability, x: int): $1_account_RotationCapability {
    $1_account_RotationCapability(x)
}
function $IsValid'$1_account_RotationCapability'(s: $1_account_RotationCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_RotationCapability'(s1: $1_account_RotationCapability, s2: $1_account_RotationCapability): bool {
    s1 == s2
}

// struct account::SignerCapability at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:57:5+60
datatype $1_account_SignerCapability {
    $1_account_SignerCapability($account: int)
}
function {:inline} $Update'$1_account_SignerCapability'_account(s: $1_account_SignerCapability, x: int): $1_account_SignerCapability {
    $1_account_SignerCapability(x)
}
function $IsValid'$1_account_SignerCapability'(s: $1_account_SignerCapability): bool {
    $IsValid'address'(s->$account)
}
function {:inline} $IsEqual'$1_account_SignerCapability'(s1: $1_account_SignerCapability, s2: $1_account_SignerCapability): bool {
    s1 == s2
}

// fun account::create_account_unchecked [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:210:5+1182
procedure {:inline 1} $1_account_create_account_unchecked(_$t0: int) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t3: int;
    var $t4: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t5: $signer;
    var $t6: Vec (int);
    var $t7: $signer;
    var $t8: Vec (int);
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: $Mutation (int);
    var $t17: $1_guid_GUID;
    var $t18: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t19: $Mutation (int);
    var $t20: $1_guid_GUID;
    var $t21: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t22: int;
    var $t23: int;
    var $t24: $1_option_Option'address';
    var $t25: $1_account_CapabilityOffer'$1_account_RotationCapability';
    var $t26: $1_option_Option'address';
    var $t27: $1_account_CapabilityOffer'$1_account_SignerCapability';
    var $t28: $1_account_Account;
    var $t0: int;
    var $temp_0'$1_event_EventHandle'$1_account_CoinRegisterEvent'': $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $temp_0'$1_event_EventHandle'$1_account_KeyRotationEvent'': $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t6, bcs::$to_bytes<address>($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:161:9+45
    assume {:print "$at(82,8713,8758)"} true;
    assume ($t6 == $1_bcs_$to_bytes'address'($t0));

    // trace_local[new_address]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:210:5+1
    assume {:print "$at(81,10610,10611)"} true;
    assume {:print "$track_local(18,3,0):", $t0} $t0 == $t0;

    // $t7 := opaque begin: create_signer::create_signer($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:211:27+26
    assume {:print "$at(81,10697,10723)"} true;

    // assume WellFormed($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:211:27+26
    assume $IsValid'signer'($t7) && $1_signer_is_txn_signer($t7) && $1_signer_is_txn_signer_addr($t7->$addr);

    // assume Eq<address>(signer::$address_of($t7), $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:211:27+26
    assume $IsEqual'address'($1_signer_$address_of($t7), $t0);

    // $t7 := opaque end: create_signer::create_signer($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:211:27+26

    // trace_local[new_account]($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:211:13+11
    assume {:print "$track_local(18,3,5):", $t7} $t7 == $t7;

    // $t8 := bcs::to_bytes<address>($t0) on_abort goto L4 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:212:34+27
    assume {:print "$at(81,10758,10785)"} true;
    call $t8 := $1_bcs_to_bytes'address'($t0);
    if ($abort_flag) {
        assume {:print "$at(81,10758,10785)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[authentication_key]($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:212:13+18
    assume {:print "$track_local(18,3,1):", $t8} $t8 == $t8;

    // $t10 := vector::length<u8>($t8) on_abort goto L4 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:214:13+35
    assume {:print "$at(81,10816,10851)"} true;
    call $t10 := $1_vector_length'u8'($t8);
    if ($abort_flag) {
        assume {:print "$at(81,10816,10851)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t11 := 32 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:214:52+2
    $t11 := 32;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:214:49+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:213:9+140
    assume {:print "$at(81,10795,10935)"} true;
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:213:9+140
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:213:9+140
    assume {:print "$at(81,10795,10935)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:215:37+29
    assume {:print "$at(81,10895,10924)"} true;
L0:

    // $t13 := 4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:215:37+29
    assume {:print "$at(81,10895,10924)"} true;
    $t13 := 4;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L4 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:215:13+54
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(81,10871,10925)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_abort($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:213:9+140
    assume {:print "$at(81,10795,10935)"} true;
    assume {:print "$track_abort(18,3):", $t14} $t14 == $t14;

    // $t9 := move($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:213:9+140
    $t9 := $t14;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:213:9+140
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:218:33+1
    assume {:print "$at(81,10970,10971)"} true;
L2:

    // $t15 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:218:33+1
    assume {:print "$at(81,10970,10971)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // $t3 := $t15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:218:13+17
    $t3 := $t15;

    // trace_local[guid_creation_num]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:218:13+17
    assume {:print "$track_local(18,3,3):", $t3} $t3 == $t3;

    // $t16 := borrow_local($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:220:55+22
    assume {:print "$at(81,11028,11050)"} true;
    $t16 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t17 := guid::create($t0, $t16) on_abort goto L4 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:220:29+49
    call $t17,$t16 := $1_guid_create($t0, $t16);
    if ($abort_flag) {
        assume {:print "$at(81,11002,11051)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:220:29+49
    $t3 := $Dereference($t16);

    // trace_local[guid_creation_num]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:220:29+49
    assume {:print "$track_local(18,3,3):", $t3} $t3 == $t3;

    // $t18 := event::new_event_handle<account::CoinRegisterEvent>($t17) on_abort goto L4 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:221:36+57
    assume {:print "$at(81,11088,11145)"} true;
    call $t18 := $1_event_new_event_handle'$1_account_CoinRegisterEvent'($t17);
    if ($abort_flag) {
        assume {:print "$at(81,11088,11145)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[coin_register_events]($t18) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:221:13+20
    assume {:print "$track_local(18,3,2):", $t18} $t18 == $t18;

    // $t19 := borrow_local($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:223:59+22
    assume {:print "$at(81,11206,11228)"} true;
    $t19 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t20 := guid::create($t0, $t19) on_abort goto L4 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:223:33+49
    call $t20,$t19 := $1_guid_create($t0, $t19);
    if ($abort_flag) {
        assume {:print "$at(81,11180,11229)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:223:33+49
    $t3 := $Dereference($t19);

    // trace_local[guid_creation_num]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:223:33+49
    assume {:print "$track_local(18,3,3):", $t3} $t3 == $t3;

    // $t21 := event::new_event_handle<account::KeyRotationEvent>($t20) on_abort goto L4 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:224:35+60
    assume {:print "$at(81,11265,11325)"} true;
    call $t21 := $1_event_new_event_handle'$1_account_KeyRotationEvent'($t20);
    if ($abort_flag) {
        assume {:print "$at(81,11265,11325)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[key_rotation_events]($t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:224:13+19
    assume {:print "$track_local(18,3,4):", $t21} $t21 == $t21;

    // $t22 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:230:34+1
    assume {:print "$at(81,11462,11463)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := move($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:231:17+17
    assume {:print "$at(81,11481,11498)"} true;
    $t23 := $t3;

    // $t24 := opaque begin: option::none<address>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:234:67+14
    assume {:print "$at(81,11641,11655)"} true;

    // assume And(WellFormed($t24), Le(Len<address>(select option::Option.vec($t24)), 1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:234:67+14
    assume ($IsValid'$1_option_Option'address''($t24) && (LenVec($t24->$vec) <= 1));

    // assume Eq<option::Option<address>>($t24, option::spec_none<address>()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:234:67+14
    assume $IsEqual'$1_option_Option'address''($t24, $1_option_spec_none'address'());

    // $t24 := opaque end: option::none<address>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:234:67+14

    // $t25 := pack account::CapabilityOffer<account::RotationCapability>($t24) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:234:44+39
    $t25 := $1_account_CapabilityOffer'$1_account_RotationCapability'($t24);

    // $t26 := opaque begin: option::none<address>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:235:65+14
    assume {:print "$at(81,11723,11737)"} true;

    // assume And(WellFormed($t26), Le(Len<address>(select option::Option.vec($t26)), 1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:235:65+14
    assume ($IsValid'$1_option_Option'address''($t26) && (LenVec($t26->$vec) <= 1));

    // assume Eq<option::Option<address>>($t26, option::spec_none<address>()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:235:65+14
    assume $IsEqual'$1_option_Option'address''($t26, $1_option_spec_none'address'());

    // $t26 := opaque end: option::none<address>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:235:65+14

    // $t27 := pack account::CapabilityOffer<account::SignerCapability>($t26) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:235:42+39
    $t27 := $1_account_CapabilityOffer'$1_account_SignerCapability'($t26);

    // $t28 := pack account::Account($t8, $t22, $t23, $t18, $t21, $t25, $t27) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:228:13+371
    assume {:print "$at(81,11383,11754)"} true;
    $t28 := $1_account_Account($t8, $t22, $t23, $t18, $t21, $t25, $t27);

    // move_to<account::Account>($t28, $t7) on_abort goto L4 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:226:9+7
    assume {:print "$at(81,11336,11343)"} true;
    if ($ResourceExists($1_account_Account_$memory, $t7->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $t7->$addr, $t28);
    }
    if ($abort_flag) {
        assume {:print "$at(81,11336,11343)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,3):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_return[0]($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:239:9+11
    assume {:print "$at(81,11775,11786)"} true;
    assume {:print "$track_return(18,3,0):", $t7} $t7 == $t7;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:240:5+1
    assume {:print "$at(81,11791,11792)"} true;
L3:

    // return $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:240:5+1
    assume {:print "$at(81,11791,11792)"} true;
    $ret0 := $t7;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:240:5+1
L4:

    // abort($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:240:5+1
    assume {:print "$at(81,11791,11792)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun account::create_resource_account [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:724:5+1378
procedure {:inline 1} $1_account_create_resource_account(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $signer, $ret1: $1_account_SignerCapability)
{
    // declare local variables
    var $t2: int;
    var $t3: $signer;
    var $t4: $1_account_Account;
    var $t5: $Mutation ($1_account_Account);
    var $t6: $signer;
    var $t7: int;
    var $t8: $1_account_SignerCapability;
    var $t9: int;
    var $t10: int;
    var $t11: $1_account_Account;
    var $t12: Vec (int);
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_account_Account;
    var $t18: $1_account_CapabilityOffer'$1_account_SignerCapability';
    var $t19: $1_option_Option'address';
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: Vec (int);
    var $t29: Vec (int);
    var $t30: int;
    var $t31: $Mutation ($1_account_Account);
    var $t32: $1_option_Option'address';
    var $t33: $Mutation ($1_account_CapabilityOffer'$1_account_SignerCapability');
    var $t34: $Mutation ($1_option_Option'address');
    var $t35: $1_account_SignerCapability;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t9, signer::$address_of($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:583:9+45
    assume {:print "$at(82,29469,29514)"} true;
    assume ($t9 == $1_signer_$address_of($t0));

    // assume Identical($t10, account::spec_create_resource_address($t9, $t1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:584:9+68
    assume {:print "$at(82,29523,29591)"} true;
    assume ($t10 == $1_account_spec_create_resource_address($t9, $t1));

    // assume Identical($t11, global<account::Account>($t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:658:9+45
    assume {:print "$at(82,32540,32585)"} true;
    assume ($t11 == $ResourceValue($1_account_Account_$memory, $t10));

    // assume Identical($t12, bcs::$to_bytes<address>($t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:161:9+45
    assume {:print "$at(82,8713,8758)"} true;
    assume ($t12 == $1_bcs_$to_bytes'address'($t10));

    // trace_local[source]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:724:5+1
    assume {:print "$at(81,38746,38747)"} true;
    assume {:print "$track_local(18,7,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:724:5+1
    assume {:print "$track_local(18,7,1):", $t1} $t1 == $t1;

    // $t13 := signer::address_of($t0) on_abort goto L10 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:725:54+26
    assume {:print "$at(81,38916,38942)"} true;
    call $t13 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(81,38916,38942)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t15 := opaque begin: account::create_resource_address($t13, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:725:29+58

    // assume WellFormed($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:725:29+58
    assume $IsValid'address'($t15);

    // assume Eq<address>($t15, account::spec_create_resource_address($t13, $t1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:725:29+58
    assume $IsEqual'address'($t15, $1_account_spec_create_resource_address($t13, $t1));

    // $t15 := opaque end: account::create_resource_address($t13, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:725:29+58

    // trace_local[resource_addr]($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:725:13+13
    assume {:print "$track_local(18,7,7):", $t15} $t15 == $t15;

    // $t16 := account::exists_at($t15) on_abort goto L10 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:726:28+24
    assume {:print "$at(81,38978,39002)"} true;
    call $t16 := $1_account_exists_at($t15);
    if ($abort_flag) {
        assume {:print "$at(81,38978,39002)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // if ($t16) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:726:24+532
    if ($t16) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:727:50+13
    assume {:print "$at(81,39055,39068)"} true;
L1:

    // $t17 := get_global<account::Account>($t15) on_abort goto L10 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:727:27+13
    assume {:print "$at(81,39032,39045)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $ResourceValue($1_account_Account_$memory, $t15);
    }
    if ($abort_flag) {
        assume {:print "$at(81,39032,39045)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_local[account]($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:727:17+7
    assume {:print "$track_local(18,7,4):", $t17} $t17 == $t17;

    // $t18 := get_field<account::Account>.signer_capability_offer($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:729:34+31
    assume {:print "$at(81,39125,39156)"} true;
    $t18 := $t17->$signer_capability_offer;

    // $t19 := get_field<account::CapabilityOffer<account::SignerCapability>>.for($t18) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:729:33+36
    $t19 := $t18->$for;

    // $t20 := opaque begin: option::is_none<address>($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:729:17+53

    // assume WellFormed($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:729:17+53
    assume $IsValid'bool'($t20);

    // assume Eq<bool>($t20, option::spec_is_none<address>($t19)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:729:17+53
    assume $IsEqual'bool'($t20, $1_option_spec_is_none'address'($t19));

    // $t20 := opaque end: option::is_none<address>($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:729:17+53

    // if ($t20) goto L3 else goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
    assume {:print "$at(81,39083,39242)"} true;
    if ($t20) { goto L3; } else { goto L2; }

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
L3:

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
    assume {:print "$at(81,39083,39242)"} true;
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
L2:

    // $t21 := 15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:730:39+25
    assume {:print "$at(81,39201,39226)"} true;
    $t21 := 15;
    assume $IsValid'u64'($t21);

    // $t22 := error::already_exists($t21) on_abort goto L10 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:730:17+48
    call $t22 := $1_error_already_exists($t21);
    if ($abort_flag) {
        assume {:print "$at(81,39179,39227)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_abort($t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
    assume {:print "$at(81,39083,39242)"} true;
    assume {:print "$track_abort(18,7):", $t22} $t22 == $t22;

    // $t14 := move($t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
    $t14 := $t22;

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:728:13+159
    goto L10;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:733:17+7
    assume {:print "$at(81,39281,39288)"} true;
L4:

    // $t23 := get_field<account::Account>.sequence_number($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:733:17+23
    assume {:print "$at(81,39281,39304)"} true;
    $t23 := $t17->$sequence_number;

    // $t24 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:733:44+1
    $t24 := 0;
    assume $IsValid'u64'($t24);

    // $t25 := ==($t23, $t24) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:733:41+2
    $t25 := $IsEqual'u64'($t23, $t24);

    // if ($t25) goto L6 else goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:732:13+129
    assume {:print "$at(81,39256,39385)"} true;
    if ($t25) { goto L6; } else { goto L5; }

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:732:13+129
L6:

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:732:13+129
    assume {:print "$at(81,39256,39385)"} true;
    goto L7;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:734:38+21
    assume {:print "$at(81,39348,39369)"} true;
L5:

    // $t26 := 16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:734:38+21
    assume {:print "$at(81,39348,39369)"} true;
    $t26 := 16;
    assume $IsValid'u64'($t26);

    // $t27 := error::invalid_state($t26) on_abort goto L10 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:734:17+43
    call $t27 := $1_error_invalid_state($t26);
    if ($abort_flag) {
        assume {:print "$at(81,39327,39370)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_abort($t27) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:732:13+129
    assume {:print "$at(81,39256,39385)"} true;
    assume {:print "$track_abort(18,7):", $t27} $t27 == $t27;

    // $t14 := move($t27) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:732:13+129
    $t14 := $t27;

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:732:13+129
    goto L10;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:736:27+13
    assume {:print "$at(81,39413,39426)"} true;
L7:

    // $t3 := opaque begin: create_signer::create_signer($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:736:13+28
    assume {:print "$at(81,39399,39427)"} true;

    // assume WellFormed($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:736:13+28
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($t3->$addr);

    // assume Eq<address>(signer::$address_of($t3), $t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:736:13+28
    assume $IsEqual'address'($1_signer_$address_of($t3), $t15);

    // $t3 := opaque end: create_signer::create_signer($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:736:13+28

    // goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:726:24+532
    assume {:print "$at(81,38974,39506)"} true;
    goto L8;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:738:38+13
    assume {:print "$at(81,39482,39495)"} true;
L0:

    // assume Identical($t28, bcs::$to_bytes<address>($t15)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:161:9+45
    assume {:print "$at(82,8713,8758)"} true;
    assume ($t28 == $1_bcs_$to_bytes'address'($t15));

    // $t3 := account::create_account_unchecked($t15) on_abort goto L10 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:738:13+39
    assume {:print "$at(81,39457,39496)"} true;
    call $t3 := $1_account_create_account_unchecked($t15);
    if ($abort_flag) {
        assume {:print "$at(81,39457,39496)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:726:24+532
    assume {:print "$at(81,38974,39506)"} true;
L8:

    // trace_local[resource]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:726:13+8
    assume {:print "$at(81,38963,38971)"} true;
    assume {:print "$track_local(18,7,6):", $t3} $t3 == $t3;

    // $t29 := [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:744:55+13
    assume {:print "$at(81,39861,39874)"} true;
    $t29 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(0, 0, 0, 0), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0));
    assume $IsValid'vec'u8''($t29);

    // assume Identical($t30, signer::$address_of($t3)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:197:9+39
    assume {:print "$at(82,10157,10196)"} true;
    assume ($t30 == $1_signer_$address_of($t3));

    // account::rotate_authentication_key_internal($t3, $t29) on_abort goto L10 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:744:9+60
    assume {:print "$at(81,39815,39875)"} true;
    call $1_account_rotate_authentication_key_internal($t3, $t29);
    if ($abort_flag) {
        assume {:print "$at(81,39815,39875)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t31 := borrow_global<account::Account>($t15) on_abort goto L10 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:746:23+17
    assume {:print "$at(81,39900,39917)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t31 := $Mutation($Global($t15), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t15));
    }
    if ($abort_flag) {
        assume {:print "$at(81,39900,39917)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,7):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_local[account#3]($t31) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:746:13+7
    $temp_0'$1_account_Account' := $Dereference($t31);
    assume {:print "$track_local(18,7,5):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t32 := opaque begin: option::some<address>($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:747:47+27
    assume {:print "$at(81,39989,40016)"} true;

    // assume And(WellFormed($t32), Le(Len<address>(select option::Option.vec($t32)), 1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:747:47+27
    assume ($IsValid'$1_option_Option'address''($t32) && (LenVec($t32->$vec) <= 1));

    // assume Eq<option::Option<address>>($t32, option::spec_some<address>($t15)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:747:47+27
    assume $IsEqual'$1_option_Option'address''($t32, $1_option_spec_some'address'($t15));

    // $t32 := opaque end: option::some<address>($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:747:47+27

    // $t33 := borrow_field<account::Account>.signer_capability_offer($t31) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+31
    $t33 := $ChildMutation($t31, 6, $Dereference($t31)->$signer_capability_offer);

    // $t34 := borrow_field<account::CapabilityOffer<account::SignerCapability>>.for($t33) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+35
    $t34 := $ChildMutation($t33, 0, $Dereference($t33)->$for);

    // write_ref($t34, $t32) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+65
    $t34 := $UpdateMutation($t34, $t32);

    // write_back[Reference($t33).for (option::Option<address>)]($t34) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+65
    $t33 := $UpdateMutation($t33, $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for($Dereference($t33), $Dereference($t34)));

    // write_back[Reference($t31).signer_capability_offer (account::CapabilityOffer<account::SignerCapability>)]($t33) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+65
    $t31 := $UpdateMutation($t31, $Update'$1_account_Account'_signer_capability_offer($Dereference($t31), $Dereference($t33)));

    // pack_ref_deep($t31) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+65

    // write_back[account::Account@]($t31) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:747:9+65
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t31),
        $Dereference($t31));

    // $t35 := pack account::SignerCapability($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:748:26+43
    assume {:print "$at(81,40043,40086)"} true;
    $t35 := $1_account_SignerCapability($t15);

    // trace_local[signer_cap]($t35) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:748:13+10
    assume {:print "$track_local(18,7,8):", $t35} $t35 == $t35;

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:749:9+22
    assume {:print "$at(81,40096,40118)"} true;
    assume {:print "$track_return(18,7,0):", $t3} $t3 == $t3;

    // trace_return[1]($t35) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:749:9+22
    assume {:print "$track_return(18,7,1):", $t35} $t35 == $t35;

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:750:5+1
    assume {:print "$at(81,40123,40124)"} true;
L9:

    // return ($t3, $t35) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:750:5+1
    assume {:print "$at(81,40123,40124)"} true;
    $ret0 := $t3;
    $ret1 := $t35;
    return;

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:750:5+1
L10:

    // abort($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:750:5+1
    assume {:print "$at(81,40123,40124)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun account::create_signer_with_capability [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:829:5+156
procedure {:inline 1} $1_account_create_signer_with_capability(_$t0: $1_account_SignerCapability) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $signer;
    var $t0: $1_account_SignerCapability;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select account::SignerCapability.account<account::SignerCapability>($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:652:9+30
    assume {:print "$at(82,32362,32392)"} true;
    assume ($t1 == $t0->$account);

    // trace_local[capability]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:829:5+1
    assume {:print "$at(81,43292,43293)"} true;
    assume {:print "$track_local(18,9,0):", $t0} $t0 == $t0;

    // $t2 := get_field<account::SignerCapability>.account($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:830:20+19
    assume {:print "$at(81,43393,43412)"} true;
    $t2 := $t0->$account;

    // $t3 := opaque begin: create_signer::create_signer($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:831:9+20
    assume {:print "$at(81,43422,43442)"} true;

    // assume WellFormed($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:831:9+20
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($t3->$addr);

    // assume Eq<address>(signer::$address_of($t3), $t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:831:9+20
    assume $IsEqual'address'($1_signer_$address_of($t3), $t2);

    // $t3 := opaque end: create_signer::create_signer($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:831:9+20

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:831:9+20
    assume {:print "$track_return(18,9,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:832:5+1
    assume {:print "$at(81,43447,43448)"} true;
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:832:5+1
    assume {:print "$at(81,43447,43448)"} true;
    $ret0 := $t3;
    return;

}

// fun account::exists_at [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:243:5+79
procedure {:inline 1} $1_account_exists_at(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:243:5+1
    assume {:print "$at(81,11810,11811)"} true;
    assume {:print "$track_local(18,10,0):", $t0} $t0 == $t0;

    // $t1 := exists<account::Account>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:244:9+6
    assume {:print "$at(81,11862,11868)"} true;
    $t1 := $ResourceExists($1_account_Account_$memory, $t0);

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:244:9+21
    assume {:print "$track_return(18,10,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:245:5+1
    assume {:print "$at(81,11888,11889)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:245:5+1
    assume {:print "$at(81,11888,11889)"} true;
    $ret0 := $t1;
    return;

}

// fun account::rotate_authentication_key_internal [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:278:5+516
procedure {:inline 1} $1_account_rotate_authentication_key_internal(_$t0: $signer, _$t1: Vec (int)) returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_account_Account);
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_account_Account);
    var $t16: $Mutation (Vec (int));
    var $t0: $signer;
    var $t1: Vec (int);
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:197:9+39
    assume {:print "$at(82,10157,10196)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // trace_local[account]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:278:5+1
    assume {:print "$at(81,13114,13115)"} true;
    assume {:print "$track_local(18,31,0):", $t0} $t0 == $t0;

    // trace_local[new_auth_key]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:278:5+1
    assume {:print "$track_local(18,31,1):", $t1} $t1 == $t1;

    // $t5 := signer::address_of($t0) on_abort goto L7 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:279:20+27
    assume {:print "$at(81,13250,13277)"} true;
    call $t5 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(81,13250,13277)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,31):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[addr]($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:279:13+4
    assume {:print "$track_local(18,31,3):", $t5} $t5 == $t5;

    // $t7 := account::exists_at($t5) on_abort goto L7 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:280:17+15
    assume {:print "$at(81,13295,13310)"} true;
    call $t7 := $1_account_exists_at($t5);
    if ($abort_flag) {
        assume {:print "$at(81,13295,13310)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,31):", $t6} $t6 == $t6;
        goto L7;
    }

    // if ($t7) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:280:9+67
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:280:9+67
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:280:9+67
    assume {:print "$at(81,13287,13354)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:280:51+23
L0:

    // $t8 := 2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:280:51+23
    assume {:print "$at(81,13329,13352)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L7 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:280:34+41
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(81,13312,13353)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,31):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:280:9+67
    assume {:print "$at(81,13287,13354)"} true;
    assume {:print "$track_abort(18,31):", $t9} $t9 == $t9;

    // $t6 := move($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:280:9+67
    $t6 := $t9;

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:280:9+67
    goto L7;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:282:28+13
    assume {:print "$at(81,13400,13413)"} true;
L2:

    // $t10 := vector::length<u8>($t1) on_abort goto L7 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:282:13+29
    assume {:print "$at(81,13385,13414)"} true;
    call $t10 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(81,13385,13414)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,31):", $t6} $t6 == $t6;
        goto L7;
    }

    // $t11 := 32 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:282:46+2
    $t11 := 32;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:282:43+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:281:9+134
    assume {:print "$at(81,13364,13498)"} true;
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:281:9+134
L4:

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:281:9+134
    assume {:print "$at(81,13364,13498)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:283:37+29
    assume {:print "$at(81,13458,13487)"} true;
L3:

    // $t13 := 4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:283:37+29
    assume {:print "$at(81,13458,13487)"} true;
    $t13 := 4;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L7 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:283:13+54
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(81,13434,13488)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,31):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:281:9+134
    assume {:print "$at(81,13364,13498)"} true;
    assume {:print "$track_abort(18,31):", $t14} $t14 == $t14;

    // $t6 := move($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:281:9+134
    $t6 := $t14;

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:281:9+134
    goto L7;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:285:59+4
    assume {:print "$at(81,13558,13562)"} true;
L5:

    // $t15 := borrow_global<account::Account>($t5) on_abort goto L7 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:285:32+17
    assume {:print "$at(81,13531,13548)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t5));
    }
    if ($abort_flag) {
        assume {:print "$at(81,13531,13548)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,31):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[account_resource]($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:285:13+16
    $temp_0'$1_account_Account' := $Dereference($t15);
    assume {:print "$track_local(18,31,2):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t16 := borrow_field<account::Account>.authentication_key($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:286:9+35
    assume {:print "$at(81,13573,13608)"} true;
    $t16 := $ChildMutation($t15, 0, $Dereference($t15)->$authentication_key);

    // write_ref($t16, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:286:9+50
    $t16 := $UpdateMutation($t16, $t1);

    // write_back[Reference($t15).authentication_key (vector<u8>)]($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:286:9+50
    $t15 := $UpdateMutation($t15, $Update'$1_account_Account'_authentication_key($Dereference($t15), $Dereference($t16)));

    // pack_ref_deep($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:286:9+50

    // write_back[account::Account@]($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:286:9+50
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t15),
        $Dereference($t15));

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:287:5+1
    assume {:print "$at(81,13629,13630)"} true;
L6:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:287:5+1
    assume {:print "$at(81,13629,13630)"} true;
    return;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:287:5+1
L7:

    // abort($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.move:287:5+1
    assume {:print "$at(81,13629,13630)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// struct aggregator_v2::Aggregator<u64> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:52:5+111
datatype $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'($value: int, $max_value: int)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u64''_value(s: $1_aggregator_v2_Aggregator'u64', x: int): $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'(x, s->$max_value)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u64''_max_value(s: $1_aggregator_v2_Aggregator'u64', x: int): $1_aggregator_v2_Aggregator'u64' {
    $1_aggregator_v2_Aggregator'u64'(s->$value, x)
}
function $IsValid'$1_aggregator_v2_Aggregator'u64''(s: $1_aggregator_v2_Aggregator'u64'): bool {
    $IsValid'u64'(s->$value)
      && $IsValid'u64'(s->$max_value)
}
function {:inline} $IsEqual'$1_aggregator_v2_Aggregator'u64''(s1: $1_aggregator_v2_Aggregator'u64', s2: $1_aggregator_v2_Aggregator'u64'): bool {
    s1 == s2
}

// struct aggregator_v2::Aggregator<u128> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:52:5+111
datatype $1_aggregator_v2_Aggregator'u128' {
    $1_aggregator_v2_Aggregator'u128'($value: int, $max_value: int)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u128''_value(s: $1_aggregator_v2_Aggregator'u128', x: int): $1_aggregator_v2_Aggregator'u128' {
    $1_aggregator_v2_Aggregator'u128'(x, s->$max_value)
}
function {:inline} $Update'$1_aggregator_v2_Aggregator'u128''_max_value(s: $1_aggregator_v2_Aggregator'u128', x: int): $1_aggregator_v2_Aggregator'u128' {
    $1_aggregator_v2_Aggregator'u128'(s->$value, x)
}
function $IsValid'$1_aggregator_v2_Aggregator'u128''(s: $1_aggregator_v2_Aggregator'u128'): bool {
    $IsValid'u128'(s->$value)
      && $IsValid'u128'(s->$max_value)
}
function {:inline} $IsEqual'$1_aggregator_v2_Aggregator'u128''(s1: $1_aggregator_v2_Aggregator'u128', s2: $1_aggregator_v2_Aggregator'u128'): bool {
    s1 == s2
}

// fun aggregator_v2::add<u64> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:109:5+182
procedure {:inline 1} $1_aggregator_v2_add'u64'(_$t0: $Mutation ($1_aggregator_v2_Aggregator'u64'), _$t1: int) returns ($ret0: $Mutation ($1_aggregator_v2_Aggregator'u64'))
{
    // declare local variables
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t0: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t1: int;
    var $temp_0'$1_aggregator_v2_Aggregator'u64'': $1_aggregator_v2_Aggregator'u64';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[aggregator]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:109:5+1
    assume {:print "$at(89,5345,5346)"} true;
    $temp_0'$1_aggregator_v2_Aggregator'u64'' := $Dereference($t0);
    assume {:print "$track_local(21,0,0):", $temp_0'$1_aggregator_v2_Aggregator'u64''} $temp_0'$1_aggregator_v2_Aggregator'u64'' == $temp_0'$1_aggregator_v2_Aggregator'u64'';

    // trace_local[value]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:109:5+1
    assume {:print "$track_local(21,0,1):", $t1} $t1 == $t1;

    // $t2 := opaque begin: aggregator_v2::try_add<#0>($t0, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    assume {:print "$at(89,5450,5476)"} true;

    // $t3 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    havoc $t3;

    // if ($t3) goto L7 else goto L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    if ($t3) { goto L7; } else { goto L6; }

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
L7:

    // trace_abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    assume {:print "$at(89,5450,5476)"} true;
    assume {:print "$track_abort(21,0):", $t4} $t4 == $t4;

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    goto L5;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
L6:

    // $t0 := havoc[mut]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    assume {:print "$at(89,5450,5476)"} true;
    havoc $temp_0'$1_aggregator_v2_Aggregator'u64'';
    $t0 := $UpdateMutation($t0, $temp_0'$1_aggregator_v2_Aggregator'u64'');

    // assume WellFormed($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    assume $IsValid'$1_aggregator_v2_Aggregator'u64''($Dereference($t0));

    // assume WellFormed($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26
    assume $IsValid'bool'($t2);

    // $t2 := opaque end: aggregator_v2::try_add<#0>($t0, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:17+26

    // if ($t2) goto L1 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:9+78
    if ($t2) { goto L1; } else { goto L3; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:9+78
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:9+78
    assume {:print "$at(89,5442,5520)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:65+20
L0:

    // $t5 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:65+20
    assume {:print "$at(89,5498,5518)"} true;
    $t5 := 1;
    assume $IsValid'u64'($t5);

    // $t6 := error::out_of_range($t5) on_abort goto L5 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:45+41
    call $t6 := $1_error_out_of_range($t5);
    if ($abort_flag) {
        assume {:print "$at(89,5478,5519)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(21,0):", $t4} $t4 == $t4;
        goto L5;
    }

    // trace_abort($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:9+78
    assume {:print "$at(89,5442,5520)"} true;
    assume {:print "$track_abort(21,0):", $t6} $t6 == $t6;

    // $t4 := move($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:9+78
    $t4 := $t6;

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:9+78
    goto L5;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:87+1
L2:

    // trace_local[aggregator]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:87+1
    assume {:print "$at(89,5520,5521)"} true;
    $temp_0'$1_aggregator_v2_Aggregator'u64'' := $Dereference($t0);
    assume {:print "$track_local(21,0,0):", $temp_0'$1_aggregator_v2_Aggregator'u64''} $temp_0'$1_aggregator_v2_Aggregator'u64'' == $temp_0'$1_aggregator_v2_Aggregator'u64'';

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:110:87+1
    goto L4;

    // label L3 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L3:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L0 at <internal>:1:1+10
    goto L0;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:111:5+1
    assume {:print "$at(89,5526,5527)"} true;
L4:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:111:5+1
    assume {:print "$at(89,5526,5527)"} true;
    $ret0 := $t0;
    return;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:111:5+1
L5:

    // abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/aggregator_v2/aggregator_v2.move:111:5+1
    assume {:print "$at(89,5526,5527)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/transaction_context.spec.move:63:10+44
function  $1_transaction_context_spec_generate_unique_address(): int;
axiom (var $$res := $1_transaction_context_spec_generate_unique_address();
$IsValid'address'($$res));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:52:10+50
function  $1_object_spec_exists_at'$1_fungible_asset_FungibleStore'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$1_fungible_asset_FungibleStore'(object);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:52:10+50
function  $1_object_spec_exists_at'$1_fungible_asset_Metadata'(object: int): bool;
axiom (forall object: int ::
(var $$res := $1_object_spec_exists_at'$1_fungible_asset_Metadata'(object);
$IsValid'bool'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:548:10+75
function  $1_object_spec_create_object_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_object_spec_create_object_address(source, seed);
$IsValid'address'($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:550:10+92
function  $1_object_spec_create_user_derived_object_address(source: int, derive_from: int): int;
axiom (forall source: int, derive_from: int ::
(var $$res := $1_object_spec_create_user_derived_object_address(source, derive_from);
$IsValid'address'($$res)));

// struct object::ConstructorRef at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:133:5+167
datatype $1_object_ConstructorRef {
    $1_object_ConstructorRef($self: int, $can_delete: bool)
}
function {:inline} $Update'$1_object_ConstructorRef'_self(s: $1_object_ConstructorRef, x: int): $1_object_ConstructorRef {
    $1_object_ConstructorRef(x, s->$can_delete)
}
function {:inline} $Update'$1_object_ConstructorRef'_can_delete(s: $1_object_ConstructorRef, x: bool): $1_object_ConstructorRef {
    $1_object_ConstructorRef(s->$self, x)
}
function $IsValid'$1_object_ConstructorRef'(s: $1_object_ConstructorRef): bool {
    $IsValid'address'(s->$self)
      && $IsValid'bool'(s->$can_delete)
}
function {:inline} $IsEqual'$1_object_ConstructorRef'(s1: $1_object_ConstructorRef, s2: $1_object_ConstructorRef): bool {
    s1 == s2
}

// struct object::DeleteRef at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:140:5+63
datatype $1_object_DeleteRef {
    $1_object_DeleteRef($self: int)
}
function {:inline} $Update'$1_object_DeleteRef'_self(s: $1_object_DeleteRef, x: int): $1_object_DeleteRef {
    $1_object_DeleteRef(x)
}
function $IsValid'$1_object_DeleteRef'(s: $1_object_DeleteRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_DeleteRef'(s1: $1_object_DeleteRef, s2: $1_object_DeleteRef): bool {
    s1 == s2
}

// struct object::DeriveRef at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:162:5+63
datatype $1_object_DeriveRef {
    $1_object_DeriveRef($self: int)
}
function {:inline} $Update'$1_object_DeriveRef'_self(s: $1_object_DeriveRef, x: int): $1_object_DeriveRef {
    $1_object_DeriveRef(x)
}
function $IsValid'$1_object_DeriveRef'(s: $1_object_DeriveRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_DeriveRef'(s1: $1_object_DeriveRef, s2: $1_object_DeriveRef): bool {
    s1 == s2
}

// struct object::ExtendRef at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:145:5+63
datatype $1_object_ExtendRef {
    $1_object_ExtendRef($self: int)
}
function {:inline} $Update'$1_object_ExtendRef'_self(s: $1_object_ExtendRef, x: int): $1_object_ExtendRef {
    $1_object_ExtendRef(x)
}
function $IsValid'$1_object_ExtendRef'(s: $1_object_ExtendRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_ExtendRef'(s1: $1_object_ExtendRef, s2: $1_object_ExtendRef): bool {
    s1 == s2
}

// struct object::Object<fungible_asset::FungibleStore> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:128:5+78
datatype $1_object_Object'$1_fungible_asset_FungibleStore' {
    $1_object_Object'$1_fungible_asset_FungibleStore'($inner: int)
}
function {:inline} $Update'$1_object_Object'$1_fungible_asset_FungibleStore''_inner(s: $1_object_Object'$1_fungible_asset_FungibleStore', x: int): $1_object_Object'$1_fungible_asset_FungibleStore' {
    $1_object_Object'$1_fungible_asset_FungibleStore'(x)
}
function $IsValid'$1_object_Object'$1_fungible_asset_FungibleStore''(s: $1_object_Object'$1_fungible_asset_FungibleStore'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$1_fungible_asset_FungibleStore''(s1: $1_object_Object'$1_fungible_asset_FungibleStore', s2: $1_object_Object'$1_fungible_asset_FungibleStore'): bool {
    s1 == s2
}

// struct object::Object<fungible_asset::Metadata> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:128:5+78
datatype $1_object_Object'$1_fungible_asset_Metadata' {
    $1_object_Object'$1_fungible_asset_Metadata'($inner: int)
}
function {:inline} $Update'$1_object_Object'$1_fungible_asset_Metadata''_inner(s: $1_object_Object'$1_fungible_asset_Metadata', x: int): $1_object_Object'$1_fungible_asset_Metadata' {
    $1_object_Object'$1_fungible_asset_Metadata'(x)
}
function $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s: $1_object_Object'$1_fungible_asset_Metadata'): bool {
    $IsValid'address'(s->$inner)
}
function {:inline} $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''(s1: $1_object_Object'$1_fungible_asset_Metadata', s2: $1_object_Object'$1_fungible_asset_Metadata'): bool {
    s1 == s2
}

// struct object::ObjectCore at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:97:5+551
datatype $1_object_ObjectCore {
    $1_object_ObjectCore($guid_creation_num: int, $owner: int, $allow_ungated_transfer: bool, $transfer_events: $1_event_EventHandle'$1_object_TransferEvent')
}
function {:inline} $Update'$1_object_ObjectCore'_guid_creation_num(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(x, s->$owner, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_owner(s: $1_object_ObjectCore, x: int): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, x, s->$allow_ungated_transfer, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_allow_ungated_transfer(s: $1_object_ObjectCore, x: bool): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, x, s->$transfer_events)
}
function {:inline} $Update'$1_object_ObjectCore'_transfer_events(s: $1_object_ObjectCore, x: $1_event_EventHandle'$1_object_TransferEvent'): $1_object_ObjectCore {
    $1_object_ObjectCore(s->$guid_creation_num, s->$owner, s->$allow_ungated_transfer, x)
}
function $IsValid'$1_object_ObjectCore'(s: $1_object_ObjectCore): bool {
    $IsValid'u64'(s->$guid_creation_num)
      && $IsValid'address'(s->$owner)
      && $IsValid'bool'(s->$allow_ungated_transfer)
      && $IsValid'$1_event_EventHandle'$1_object_TransferEvent''(s->$transfer_events)
}
function {:inline} $IsEqual'$1_object_ObjectCore'(s1: $1_object_ObjectCore, s2: $1_object_ObjectCore): bool {
    s1 == s2
}
var $1_object_ObjectCore_$memory: $Memory $1_object_ObjectCore;

// struct object::TombStone at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:111:5+170
datatype $1_object_TombStone {
    $1_object_TombStone($original_owner: int)
}
function {:inline} $Update'$1_object_TombStone'_original_owner(s: $1_object_TombStone, x: int): $1_object_TombStone {
    $1_object_TombStone(x)
}
function $IsValid'$1_object_TombStone'(s: $1_object_TombStone): bool {
    $IsValid'address'(s->$original_owner)
}
function {:inline} $IsEqual'$1_object_TombStone'(s1: $1_object_TombStone, s2: $1_object_TombStone): bool {
    s1 == s2
}
var $1_object_TombStone_$memory: $Memory $1_object_TombStone;

// struct object::Transfer at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:175:5+108
datatype $1_object_Transfer {
    $1_object_Transfer($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_Transfer'_object(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_Transfer'_from(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_Transfer'_to(s: $1_object_Transfer, x: int): $1_object_Transfer {
    $1_object_Transfer(s->$object, s->$from, x)
}
function $IsValid'$1_object_Transfer'(s: $1_object_Transfer): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_Transfer'(s1: $1_object_Transfer, s2: $1_object_Transfer): bool {
    s1 == s2
}

// struct object::TransferEvent at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:167:5+113
datatype $1_object_TransferEvent {
    $1_object_TransferEvent($object: int, $from: int, $to: int)
}
function {:inline} $Update'$1_object_TransferEvent'_object(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(x, s->$from, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_from(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, x, s->$to)
}
function {:inline} $Update'$1_object_TransferEvent'_to(s: $1_object_TransferEvent, x: int): $1_object_TransferEvent {
    $1_object_TransferEvent(s->$object, s->$from, x)
}
function $IsValid'$1_object_TransferEvent'(s: $1_object_TransferEvent): bool {
    $IsValid'address'(s->$object)
      && $IsValid'address'(s->$from)
      && $IsValid'address'(s->$to)
}
function {:inline} $IsEqual'$1_object_TransferEvent'(s1: $1_object_TransferEvent, s2: $1_object_TransferEvent): bool {
    s1 == s2
}

// struct object::TransferRef at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:150:5+65
datatype $1_object_TransferRef {
    $1_object_TransferRef($self: int)
}
function {:inline} $Update'$1_object_TransferRef'_self(s: $1_object_TransferRef, x: int): $1_object_TransferRef {
    $1_object_TransferRef(x)
}
function $IsValid'$1_object_TransferRef'(s: $1_object_TransferRef): bool {
    $IsValid'address'(s->$self)
}
function {:inline} $IsEqual'$1_object_TransferRef'(s1: $1_object_TransferRef, s2: $1_object_TransferRef): bool {
    s1 == s2
}

// struct object::Untransferable at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:118:5+32
datatype $1_object_Untransferable {
    $1_object_Untransferable($dummy_field: bool)
}
function {:inline} $Update'$1_object_Untransferable'_dummy_field(s: $1_object_Untransferable, x: bool): $1_object_Untransferable {
    $1_object_Untransferable(x)
}
function $IsValid'$1_object_Untransferable'(s: $1_object_Untransferable): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_object_Untransferable'(s1: $1_object_Untransferable, s2: $1_object_Untransferable): bool {
    s1 == s2
}
var $1_object_Untransferable_$memory: $Memory $1_object_Untransferable;

// fun object::address_to_object<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:192:5+278
procedure {:inline 1} $1_object_address_to_object'$1_fungible_asset_FungibleStore'(_$t0: int) returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:192:5+1
    assume {:print "$at(155,8178,8179)"} true;
    assume {:print "$track_local(24,3,0):", $t0} $t0 == $t0;

    // $t1 := exists<object::ObjectCore>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:17+6
    assume {:print "$at(155,8261,8267)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:9+77
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:9+77
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:9+77
    assume {:print "$at(155,8253,8330)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:62+22
L0:

    // $t2 := 2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:62+22
    assume {:print "$at(155,8306,8328)"} true;
    $t2 := 2;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L7 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:45+40
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(155,8289,8329)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(24,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:9+77
    assume {:print "$at(155,8253,8330)"} true;
    assume {:print "$track_abort(24,3):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:9+77
    $t4 := $t3;

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:9+77
    goto L7;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:30+6
    assume {:print "$at(155,8361,8367)"} true;
L2:

    // $t5 := opaque begin: object::exists_at<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:17+20
    assume {:print "$at(155,8348,8368)"} true;

    // assume WellFormed($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:17+20
    assume $IsValid'bool'($t5);

    // assume Eq<bool>($t5, object::spec_exists_at<#0>($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:17+20
    assume $IsEqual'bool'($t5, $1_object_spec_exists_at'$1_fungible_asset_FungibleStore'($t0));

    // $t5 := opaque end: object::exists_at<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:17+20

    // if ($t5) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:9+73
    if ($t5) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:9+73
L4:

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:9+73
    assume {:print "$at(155,8340,8413)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:56+24
L3:

    // $t6 := 7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:56+24
    assume {:print "$at(155,8387,8411)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L7 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(155,8370,8412)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(24,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:9+73
    assume {:print "$at(155,8340,8413)"} true;
    assume {:print "$track_abort(24,3):", $t7} $t7 == $t7;

    // $t4 := move($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:9+73
    $t4 := $t7;

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:9+73
    goto L7;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:195:28+6
    assume {:print "$at(155,8442,8448)"} true;
L5:

    // $t8 := pack object::Object<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+27
    assume {:print "$at(155,8423,8450)"} true;
    $t8 := $1_object_Object'$1_fungible_asset_FungibleStore'($t0);

    // trace_return[0]($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+27
    assume {:print "$track_return(24,3,0):", $t8} $t8 == $t8;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:196:5+1
    assume {:print "$at(155,8455,8456)"} true;
L6:

    // return $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:196:5+1
    assume {:print "$at(155,8455,8456)"} true;
    $ret0 := $t8;
    return;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:196:5+1
L7:

    // abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:196:5+1
    assume {:print "$at(155,8455,8456)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::address_to_object<fungible_asset::Metadata> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:192:5+278
procedure {:inline 1} $1_object_address_to_object'$1_fungible_asset_Metadata'(_$t0: int) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:192:5+1
    assume {:print "$at(155,8178,8179)"} true;
    assume {:print "$track_local(24,3,0):", $t0} $t0 == $t0;

    // $t1 := exists<object::ObjectCore>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:17+6
    assume {:print "$at(155,8261,8267)"} true;
    $t1 := $ResourceExists($1_object_ObjectCore_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:9+77
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:9+77
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:9+77
    assume {:print "$at(155,8253,8330)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:62+22
L0:

    // $t2 := 2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:62+22
    assume {:print "$at(155,8306,8328)"} true;
    $t2 := 2;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L7 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:45+40
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(155,8289,8329)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(24,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:9+77
    assume {:print "$at(155,8253,8330)"} true;
    assume {:print "$track_abort(24,3):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:9+77
    $t4 := $t3;

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:193:9+77
    goto L7;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:30+6
    assume {:print "$at(155,8361,8367)"} true;
L2:

    // $t5 := opaque begin: object::exists_at<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:17+20
    assume {:print "$at(155,8348,8368)"} true;

    // assume WellFormed($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:17+20
    assume $IsValid'bool'($t5);

    // assume Eq<bool>($t5, object::spec_exists_at<#0>($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:17+20
    assume $IsEqual'bool'($t5, $1_object_spec_exists_at'$1_fungible_asset_Metadata'($t0));

    // $t5 := opaque end: object::exists_at<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:17+20

    // if ($t5) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:9+73
    if ($t5) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:9+73
L4:

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:9+73
    assume {:print "$at(155,8340,8413)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:56+24
L3:

    // $t6 := 7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:56+24
    assume {:print "$at(155,8387,8411)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L7 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:39+42
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(155,8370,8412)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(24,3):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:9+73
    assume {:print "$at(155,8340,8413)"} true;
    assume {:print "$track_abort(24,3):", $t7} $t7 == $t7;

    // $t4 := move($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:9+73
    $t4 := $t7;

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:194:9+73
    goto L7;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:195:28+6
    assume {:print "$at(155,8442,8448)"} true;
L5:

    // $t8 := pack object::Object<#0>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+27
    assume {:print "$at(155,8423,8450)"} true;
    $t8 := $1_object_Object'$1_fungible_asset_Metadata'($t0);

    // trace_return[0]($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:195:9+27
    assume {:print "$track_return(24,3,0):", $t8} $t8 == $t8;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:196:5+1
    assume {:print "$at(155,8455,8456)"} true;
L6:

    // return $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:196:5+1
    assume {:print "$at(155,8455,8456)"} true;
    $ret0 := $t8;
    return;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:196:5+1
L7:

    // abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:196:5+1
    assume {:print "$at(155,8455,8456)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::can_generate_delete_ref [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:382:5+93
procedure {:inline 1} $1_object_can_generate_delete_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:382:5+1
    assume {:print "$at(155,16834,16835)"} true;
    assume {:print "$track_local(24,5,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.can_delete($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:383:9+14
    assume {:print "$at(155,16907,16921)"} true;
    $t1 := $t0->$can_delete;

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:383:9+14
    assume {:print "$track_return(24,5,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:384:5+1
    assume {:print "$at(155,16926,16927)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:384:5+1
    assume {:print "$at(155,16926,16927)"} true;
    $ret0 := $t1;
    return;

}

// fun object::convert<fungible_asset::Metadata, fungible_asset::Metadata> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:246:5+115
procedure {:inline 1} $1_object_convert'$1_fungible_asset_Metadata_$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: int;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:246:5+1
    assume {:print "$at(155,10567,10568)"} true;
    assume {:print "$track_local(24,6,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:247:30+12
    assume {:print "$at(155,10663,10675)"} true;
    $t1 := $t0->$inner;

    // $t2 := object::address_to_object<#1>($t1) on_abort goto L2 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:247:9+34
    call $t2 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(155,10642,10676)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(24,6):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:247:9+34
    assume {:print "$track_return(24,6,0):", $t2} $t2 == $t2;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:248:5+1
    assume {:print "$at(155,10681,10682)"} true;
L1:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:248:5+1
    assume {:print "$at(155,10681,10682)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:248:5+1
L2:

    // abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:248:5+1
    assume {:print "$at(155,10681,10682)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::create_named_object [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:252:5+284
procedure {:inline 1} $1_object_create_named_object(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: $1_object_ConstructorRef;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:154:9+50
    assume {:print "$at(156,6577,6627)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, object::spec_create_object_address($t4, $t1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:155:9+65
    assume {:print "$at(156,6636,6701)"} true;
    assume ($t5 == $1_object_spec_create_object_address($t4, $t1));

    // trace_local[creator]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:252:5+1
    assume {:print "$at(155,10888,10889)"} true;
    assume {:print "$track_local(24,9,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:252:5+1
    assume {:print "$track_local(24,9,1):", $t1} $t1 == $t1;

    // $t6 := signer::address_of($t0) on_abort goto L2 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:253:31+27
    assume {:print "$at(155,11003,11030)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(155,11003,11030)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(24,9):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[creator_address]($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:253:13+15
    assume {:print "$track_local(24,9,2):", $t6} $t6 == $t6;

    // $t8 := opaque begin: object::create_object_address($t6, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:254:24+45
    assume {:print "$at(155,11055,11100)"} true;

    // assume WellFormed($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:254:24+45
    assume $IsValid'address'($t8);

    // assume Eq<address>($t8, object::spec_create_object_address($t6, $t1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:254:24+45
    assume $IsEqual'address'($t8, $1_object_spec_create_object_address($t6, $t1));

    // $t8 := opaque end: object::create_object_address($t6, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:254:24+45

    // trace_local[obj_addr]($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:254:13+8
    assume {:print "$track_local(24,9,3):", $t8} $t8 == $t8;

    // $t9 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:255:59+5
    assume {:print "$at(155,11160,11165)"} true;
    $t9 := false;
    assume $IsValid'bool'($t9);

    // $t10 := object::create_object_internal($t6, $t8, $t9) on_abort goto L2 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:255:9+56
    call $t10 := $1_object_create_object_internal($t6, $t8, $t9);
    if ($abort_flag) {
        assume {:print "$at(155,11110,11166)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(24,9):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:255:9+56
    assume {:print "$track_return(24,9,0):", $t10} $t10 == $t10;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:256:5+1
    assume {:print "$at(155,11171,11172)"} true;
L1:

    // return $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:256:5+1
    assume {:print "$at(155,11171,11172)"} true;
    $ret0 := $t10;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:256:5+1
L2:

    // abort($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:256:5+1
    assume {:print "$at(155,11171,11172)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun object::create_object [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:269:5+215
procedure {:inline 1} $1_object_create_object(_$t0: int) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_object_ConstructorRef;
    var $t0: int;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t2, transaction_context::spec_generate_unique_address()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:69:9+73
    assume {:print "$at(156,3206,3279)"} true;
    assume ($t2 == $1_transaction_context_spec_generate_unique_address());

    // trace_local[owner_address]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:269:5+1
    assume {:print "$at(155,11959,11960)"} true;
    assume {:print "$track_local(24,10,0):", $t0} $t0 == $t0;

    // $t3 := opaque begin: transaction_context::generate_auid_address() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:270:30+44
    assume {:print "$at(155,12055,12099)"} true;

    // $t4 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:270:30+44
    havoc $t4;

    // if ($t4) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:270:30+44
    if ($t4) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:270:30+44
L4:

    // trace_abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:270:30+44
    assume {:print "$at(155,12055,12099)"} true;
    assume {:print "$track_abort(24,10):", $t5} $t5 == $t5;

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:270:30+44
    goto L2;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:270:30+44
L3:

    // assume WellFormed($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:270:30+44
    assume {:print "$at(155,12055,12099)"} true;
    assume $IsValid'address'($t3);

    // assume Eq<address>($t3, transaction_context::spec_generate_unique_address()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:270:30+44
    assume $IsEqual'address'($t3, $1_transaction_context_spec_generate_unique_address());

    // $t3 := opaque end: transaction_context::generate_auid_address() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:270:30+44

    // trace_local[unique_address]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:270:13+14
    assume {:print "$track_local(24,10,1):", $t3} $t3 == $t3;

    // $t6 := true at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:271:63+4
    assume {:print "$at(155,12163,12167)"} true;
    $t6 := true;
    assume $IsValid'bool'($t6);

    // $t7 := object::create_object_internal($t0, $t3, $t6) on_abort goto L2 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:271:9+59
    call $t7 := $1_object_create_object_internal($t0, $t3, $t6);
    if ($abort_flag) {
        assume {:print "$at(155,12109,12168)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(24,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:271:9+59
    assume {:print "$track_return(24,10,0):", $t7} $t7 == $t7;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:272:5+1
    assume {:print "$at(155,12173,12174)"} true;
L1:

    // return $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:272:5+1
    assume {:print "$at(155,12173,12174)"} true;
    $ret0 := $t7;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:272:5+1
L2:

    // abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:272:5+1
    assume {:print "$at(155,12173,12174)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::create_object_internal [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:319:5+766
procedure {:inline 1} $1_object_create_object_internal(_$t0: int, _$t1: int, _$t2: bool) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t3: int;
    var $t4: $signer;
    var $t5: $1_guid_GUID;
    var $t6: bool;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $signer;
    var $t12: int;
    var $t13: $Mutation (int);
    var $t14: $1_guid_GUID;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_event_EventHandle'$1_object_TransferEvent';
    var $t18: $1_object_ObjectCore;
    var $t19: $1_object_ConstructorRef;
    var $t0: int;
    var $t1: int;
    var $t2: bool;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[creator_address]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:319:5+1
    assume {:print "$at(155,14426,14427)"} true;
    assume {:print "$track_local(24,15,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:319:5+1
    assume {:print "$track_local(24,15,1):", $t1} $t1 == $t1;

    // trace_local[can_delete]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:319:5+1
    assume {:print "$track_local(24,15,2):", $t2} $t2 == $t2;

    // $t6 := exists<object::ObjectCore>($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:324:18+6
    assume {:print "$at(155,14580,14586)"} true;
    $t6 := $ResourceExists($1_object_ObjectCore_$memory, $t1);

    // $t7 := !($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:324:17+1
    call $t7 := $Not($t6);

    // if ($t7) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:324:9+75
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:324:9+75
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:324:9+75
    assume {:print "$at(155,14571,14646)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:324:68+14
L0:

    // $t8 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:324:68+14
    assume {:print "$at(155,14630,14644)"} true;
    $t8 := 1;
    assume $IsValid'u64'($t8);

    // $t9 := error::already_exists($t8) on_abort goto L4 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:324:46+37
    call $t9 := $1_error_already_exists($t8);
    if ($abort_flag) {
        assume {:print "$at(155,14608,14645)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(24,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // trace_abort($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:324:9+75
    assume {:print "$at(155,14571,14646)"} true;
    assume {:print "$track_abort(24,15):", $t9} $t9 == $t9;

    // $t10 := move($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:324:9+75
    $t10 := $t9;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:324:9+75
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:326:43+6
    assume {:print "$at(155,14691,14697)"} true;
L2:

    // $t11 := opaque begin: create_signer::create_signer($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:326:29+21
    assume {:print "$at(155,14677,14698)"} true;

    // assume WellFormed($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:326:29+21
    assume $IsValid'signer'($t11) && $1_signer_is_txn_signer($t11) && $1_signer_is_txn_signer_addr($t11->$addr);

    // assume Eq<address>(signer::$address_of($t11), $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:326:29+21
    assume $IsEqual'address'($1_signer_$address_of($t11), $t1);

    // $t11 := opaque end: create_signer::create_signer($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:326:29+21

    // trace_local[object_signer]($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:326:13+13
    assume {:print "$track_local(24,15,4):", $t11} $t11 == $t11;

    // $t12 := 1125899906842624 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:327:33+22
    assume {:print "$at(155,14732,14754)"} true;
    $t12 := 1125899906842624;
    assume $IsValid'u64'($t12);

    // $t3 := $t12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:327:13+17
    $t3 := $t12;

    // trace_local[guid_creation_num]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:327:13+17
    assume {:print "$track_local(24,15,3):", $t3} $t3 == $t3;

    // $t13 := borrow_local($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:328:57+22
    assume {:print "$at(155,14812,14834)"} true;
    $t13 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t14 := guid::create($t1, $t13) on_abort goto L4 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:328:36+44
    call $t14,$t13 := $1_guid_create($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(155,14791,14835)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(24,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:328:36+44
    $t3 := $Dereference($t13);

    // trace_local[guid_creation_num]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:328:36+44
    assume {:print "$track_local(24,15,3):", $t3} $t3 == $t3;

    // trace_local[transfer_events_guid]($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:328:13+20
    assume {:print "$track_local(24,15,5):", $t14} $t14 == $t14;

    // $t15 := move($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:333:17+17
    assume {:print "$at(155,14924,14941)"} true;
    $t15 := $t3;

    // $t16 := true at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:335:41+4
    assume {:print "$at(155,15023,15027)"} true;
    $t16 := true;
    assume $IsValid'bool'($t16);

    // $t17 := event::new_event_handle<object::TransferEvent>($t14) on_abort goto L4 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:336:34+45
    assume {:print "$at(155,15062,15107)"} true;
    call $t17 := $1_event_new_event_handle'$1_object_TransferEvent'($t14);
    if ($abort_flag) {
        assume {:print "$at(155,15062,15107)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(24,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // $t18 := pack object::ObjectCore($t15, $t0, $t16, $t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:332:13+227
    assume {:print "$at(155,14895,15122)"} true;
    $t18 := $1_object_ObjectCore($t15, $t0, $t16, $t17);

    // move_to<object::ObjectCore>($t18, $t11) on_abort goto L4 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:330:9+7
    assume {:print "$at(155,14846,14853)"} true;
    if ($ResourceExists($1_object_ObjectCore_$memory, $t11->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $t11->$addr, $t18);
    }
    if ($abort_flag) {
        assume {:print "$at(155,14846,14853)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(24,15):", $t10} $t10 == $t10;
        goto L4;
    }

    // $t19 := pack object::ConstructorRef($t1, $t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:339:9+43
    assume {:print "$at(155,15143,15186)"} true;
    $t19 := $1_object_ConstructorRef($t1, $t2);

    // trace_return[0]($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:339:9+43
    assume {:print "$track_return(24,15,0):", $t19} $t19 == $t19;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:340:5+1
    assume {:print "$at(155,15191,15192)"} true;
L3:

    // return $t19 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:340:5+1
    assume {:print "$at(155,15191,15192)"} true;
    $ret0 := $t19;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:340:5+1
L4:

    // abort($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:340:5+1
    assume {:print "$at(155,15191,15192)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun object::object_address<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:241:5+91
procedure {:inline 1} $1_object_object_address'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:241:5+1
    assume {:print "$at(155,10430,10431)"} true;
    assume {:print "$track_local(24,37,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:242:9+12
    assume {:print "$at(155,10503,10515)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:242:9+12
    assume {:print "$track_return(24,37,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:243:5+1
    assume {:print "$at(155,10520,10521)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:243:5+1
    assume {:print "$at(155,10520,10521)"} true;
    $ret0 := $t1;
    return;

}

// fun object::object_address<fungible_asset::Metadata> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:241:5+91
procedure {:inline 1} $1_object_object_address'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:241:5+1
    assume {:print "$at(155,10430,10431)"} true;
    assume {:print "$track_local(24,37,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:242:9+12
    assume {:print "$at(155,10503,10515)"} true;
    $t1 := $t0->$inner;

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:242:9+12
    assume {:print "$track_return(24,37,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:243:5+1
    assume {:print "$at(155,10520,10521)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:243:5+1
    assume {:print "$at(155,10520,10521)"} true;
    $ret0 := $t1;
    return;

}

// fun object::create_user_derived_object [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:260:5+277
procedure {:inline 1} $1_object_create_user_derived_object(_$t0: int, _$t1: $1_object_DeriveRef) returns ($ret0: $1_object_ConstructorRef)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_object_ConstructorRef;
    var $t8: int;
    var $t0: int;
    var $t1: $1_object_DeriveRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeriveRef': $1_object_DeriveRef;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, object::spec_create_user_derived_object_address($t0, select object::DeriveRef.self<object::DeriveRef>($t1))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:177:9+89
    assume {:print "$at(156,7509,7598)"} true;
    assume ($t3 == $1_object_spec_create_user_derived_object_address($t0, $t1->$self));

    // trace_local[creator_address]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:260:5+1
    assume {:print "$at(155,11358,11359)"} true;
    assume {:print "$track_local(24,18,0):", $t0} $t0 == $t0;

    // trace_local[derive_ref]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:260:5+1
    assume {:print "$track_local(24,18,1):", $t1} $t1 == $t1;

    // $t4 := get_field<object::DeriveRef>.self($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:261:76+15
    assume {:print "$at(155,11547,11562)"} true;
    $t4 := $t1->$self;

    // $t5 := opaque begin: object::create_user_derived_object_address($t0, $t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:261:24+68

    // assume WellFormed($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:261:24+68
    assume $IsValid'address'($t5);

    // assume Eq<address>($t5, object::spec_create_user_derived_object_address($t0, $t4)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:261:24+68
    assume $IsEqual'address'($t5, $1_object_spec_create_user_derived_object_address($t0, $t4));

    // $t5 := opaque end: object::create_user_derived_object_address($t0, $t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:261:24+68

    // trace_local[obj_addr]($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:261:13+8
    assume {:print "$track_local(24,18,2):", $t5} $t5 == $t5;

    // $t6 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:262:59+5
    assume {:print "$at(155,11623,11628)"} true;
    $t6 := false;
    assume $IsValid'bool'($t6);

    // $t7 := object::create_object_internal($t0, $t5, $t6) on_abort goto L2 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:262:9+56
    call $t7 := $1_object_create_object_internal($t0, $t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(155,11573,11629)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(24,18):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_return[0]($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:262:9+56
    assume {:print "$track_return(24,18,0):", $t7} $t7 == $t7;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:263:5+1
    assume {:print "$at(155,11634,11635)"} true;
L1:

    // return $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:263:5+1
    assume {:print "$at(155,11634,11635)"} true;
    $ret0 := $t7;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:263:5+1
L2:

    // abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:263:5+1
    assume {:print "$at(155,11634,11635)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun object::disable_ungated_transfer [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:446:5+191
procedure {:inline 1} $1_object_disable_ungated_transfer(_$t0: $1_object_TransferRef) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_object_ObjectCore);
    var $t2: int;
    var $t3: $Mutation ($1_object_ObjectCore);
    var $t4: int;
    var $t5: bool;
    var $t6: $Mutation (bool);
    var $t0: $1_object_TransferRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:446:5+1
    assume {:print "$at(155,18859,18860)"} true;
    assume {:print "$track_local(24,22,0):", $t0} $t0 == $t0;

    // $t2 := get_field<object::TransferRef>.self($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:447:52+8
    assume {:print "$at(155,18987,18995)"} true;
    $t2 := $t0->$self;

    // $t3 := borrow_global<object::ObjectCore>($t2) on_abort goto L2 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:447:22+17
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $Mutation($Global($t2), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t2));
    }
    if ($abort_flag) {
        assume {:print "$at(155,18957,18974)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(24,22):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[object]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:447:13+6
    $temp_0'$1_object_ObjectCore' := $Dereference($t3);
    assume {:print "$track_local(24,22,1):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t5 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:448:41+5
    assume {:print "$at(155,19038,19043)"} true;
    $t5 := false;
    assume $IsValid'bool'($t5);

    // $t6 := borrow_field<object::ObjectCore>.allow_ungated_transfer($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:448:9+29
    $t6 := $ChildMutation($t3, 2, $Dereference($t3)->$allow_ungated_transfer);

    // write_ref($t6, $t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:448:9+37
    $t6 := $UpdateMutation($t6, $t5);

    // write_back[Reference($t3).allow_ungated_transfer (bool)]($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:448:9+37
    $t3 := $UpdateMutation($t3, $Update'$1_object_ObjectCore'_allow_ungated_transfer($Dereference($t3), $Dereference($t6)));

    // write_back[object::ObjectCore@]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:448:9+37
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t3),
        $Dereference($t3));

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:449:5+1
    assume {:print "$at(155,19049,19050)"} true;
L1:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:449:5+1
    assume {:print "$at(155,19049,19050)"} true;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:449:5+1
L2:

    // abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:449:5+1
    assume {:print "$at(155,19049,19050)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::generate_delete_ref [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:345:5+183
procedure {:inline 1} $1_object_generate_delete_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_DeleteRef)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_object_DeleteRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeleteRef': $1_object_DeleteRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:345:5+1
    assume {:print "$at(155,15316,15317)"} true;
    assume {:print "$track_local(24,25,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.can_delete($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:346:17+14
    assume {:print "$at(155,15398,15412)"} true;
    $t1 := $t0->$can_delete;

    // if ($t1) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:346:9+65
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:346:9+65
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:346:9+65
    assume {:print "$at(155,15390,15455)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:346:9+65
L0:

    // $t2 := 5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:346:58+14
    assume {:print "$at(155,15439,15453)"} true;
    $t2 := 5;
    assume $IsValid'u64'($t2);

    // $t3 := error::permission_denied($t2) on_abort goto L4 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:346:33+40
    call $t3 := $1_error_permission_denied($t2);
    if ($abort_flag) {
        assume {:print "$at(155,15414,15454)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(24,25):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:346:9+65
    assume {:print "$at(155,15390,15455)"} true;
    assume {:print "$track_abort(24,25):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:346:9+65
    $t4 := $t3;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:346:9+65
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:347:27+3
    assume {:print "$at(155,15483,15486)"} true;
L2:

    // $t5 := get_field<object::ConstructorRef>.self($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:347:27+8
    assume {:print "$at(155,15483,15491)"} true;
    $t5 := $t0->$self;

    // $t6 := pack object::DeleteRef($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:347:9+28
    $t6 := $1_object_DeleteRef($t5);

    // trace_return[0]($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:347:9+28
    assume {:print "$track_return(24,25,0):", $t6} $t6 == $t6;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:348:5+1
    assume {:print "$at(155,15498,15499)"} true;
L3:

    // return $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:348:5+1
    assume {:print "$at(155,15498,15499)"} true;
    $ret0 := $t6;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:348:5+1
L4:

    // abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:348:5+1
    assume {:print "$at(155,15498,15499)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun object::generate_derive_ref [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:362:5+108
procedure {:inline 1} $1_object_generate_derive_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_DeriveRef)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_DeriveRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeriveRef': $1_object_DeriveRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:362:5+1
    assume {:print "$at(155,16138,16139)"} true;
    assume {:print "$track_local(24,26,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:363:27+8
    assume {:print "$at(155,16230,16238)"} true;
    $t1 := $t0->$self;

    // $t2 := pack object::DeriveRef($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:363:9+28
    $t2 := $1_object_DeriveRef($t1);

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:363:9+28
    assume {:print "$track_return(24,26,0):", $t2} $t2 == $t2;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:364:5+1
    assume {:print "$at(155,16245,16246)"} true;
L1:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:364:5+1
    assume {:print "$at(155,16245,16246)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_extend_ref [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:351:5+108
procedure {:inline 1} $1_object_generate_extend_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_ExtendRef)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_ExtendRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_ExtendRef': $1_object_ExtendRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:351:5+1
    assume {:print "$at(155,15603,15604)"} true;
    assume {:print "$track_local(24,27,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:352:27+8
    assume {:print "$at(155,15695,15703)"} true;
    $t1 := $t0->$self;

    // $t2 := pack object::ExtendRef($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:352:9+28
    $t2 := $1_object_ExtendRef($t1);

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:352:9+28
    assume {:print "$track_return(24,27,0):", $t2} $t2 == $t2;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:353:5+1
    assume {:print "$at(155,15710,15711)"} true;
L1:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:353:5+1
    assume {:print "$at(155,15710,15711)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_signer [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:367:5+96
procedure {:inline 1} $1_object_generate_signer(_$t0: $1_object_ConstructorRef) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: $signer;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:367:5+1
    assume {:print "$at(155,16299,16300)"} true;
    assume {:print "$track_local(24,29,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:368:23+8
    assume {:print "$at(155,16380,16388)"} true;
    $t1 := $t0->$self;

    // $t2 := opaque begin: create_signer::create_signer($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:368:9+23

    // assume WellFormed($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:368:9+23
    assume $IsValid'signer'($t2) && $1_signer_is_txn_signer($t2) && $1_signer_is_txn_signer_addr($t2->$addr);

    // assume Eq<address>(signer::$address_of($t2), $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:368:9+23
    assume $IsEqual'address'($1_signer_$address_of($t2), $t1);

    // $t2 := opaque end: create_signer::create_signer($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:368:9+23

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:368:9+23
    assume {:print "$track_return(24,29,0):", $t2} $t2 == $t2;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:369:5+1
    assume {:print "$at(155,16394,16395)"} true;
L1:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:369:5+1
    assume {:print "$at(155,16394,16395)"} true;
    $ret0 := $t2;
    return;

}

// fun object::generate_transfer_ref [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:356:5+219
procedure {:inline 1} $1_object_generate_transfer_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_TransferRef)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_TransferRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:356:5+1
    assume {:print "$at(155,15798,15799)"} true;
    assume {:print "$track_local(24,31,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:357:41+8
    assume {:print "$at(155,15908,15916)"} true;
    $t1 := $t0->$self;

    // $t2 := exists<object::Untransferable>($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:357:18+6
    $t2 := $ResourceExists($1_object_Untransferable_$memory, $t1);

    // $t3 := !($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:357:17+1
    call $t3 := $Not($t2);

    // if ($t3) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:357:9+95
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:357:9+95
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:357:9+95
    assume {:print "$at(155,15876,15971)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:357:9+95
L0:

    // $t4 := 9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:357:77+25
    assume {:print "$at(155,15944,15969)"} true;
    $t4 := 9;
    assume $IsValid'u64'($t4);

    // $t5 := error::permission_denied($t4) on_abort goto L4 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:357:52+51
    call $t5 := $1_error_permission_denied($t4);
    if ($abort_flag) {
        assume {:print "$at(155,15919,15970)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(24,31):", $t6} $t6 == $t6;
        goto L4;
    }

    // trace_abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:357:9+95
    assume {:print "$at(155,15876,15971)"} true;
    assume {:print "$track_abort(24,31):", $t5} $t5 == $t5;

    // $t6 := move($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:357:9+95
    $t6 := $t5;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:357:9+95
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:358:29+3
    assume {:print "$at(155,16001,16004)"} true;
L2:

    // $t7 := get_field<object::ConstructorRef>.self($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:358:29+8
    assume {:print "$at(155,16001,16009)"} true;
    $t7 := $t0->$self;

    // $t8 := pack object::TransferRef($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:358:9+30
    $t8 := $1_object_TransferRef($t7);

    // trace_return[0]($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:358:9+30
    assume {:print "$track_return(24,31,0):", $t8} $t8 == $t8;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:5+1
    assume {:print "$at(155,16016,16017)"} true;
L3:

    // return $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:5+1
    assume {:print "$at(155,16016,16017)"} true;
    $ret0 := $t8;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:5+1
L4:

    // abort($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:359:5+1
    assume {:print "$at(155,16016,16017)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun object::is_burnt<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:187:5+100
procedure {:inline 1} $1_object_is_burnt'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[object]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:187:5+1
    assume {:print "$at(155,7997,7998)"} true;
    assume {:print "$track_local(24,32,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::Object<#0>>.inner($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:188:27+12
    assume {:print "$at(155,8078,8090)"} true;
    $t1 := $t0->$inner;

    // $t2 := exists<object::TombStone>($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:188:9+6
    $t2 := $ResourceExists($1_object_TombStone_$memory, $t1);

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:188:9+31
    assume {:print "$track_return(24,32,0):", $t2} $t2 == $t2;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:189:5+1
    assume {:print "$at(155,8096,8097)"} true;
L1:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:189:5+1
    assume {:print "$at(155,8096,8097)"} true;
    $ret0 := $t2;
    return;

}

// fun object::object_from_constructor_ref<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:377:5+126
procedure {:inline 1} $1_object_object_from_constructor_ref'$1_fungible_asset_FungibleStore'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:377:5+1
    assume {:print "$at(155,16620,16621)"} true;
    assume {:print "$track_local(24,39,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:378:30+8
    assume {:print "$at(155,16731,16739)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:378:9+30
    call $t2 := $1_object_address_to_object'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(155,16710,16740)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(24,39):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:378:9+30
    assume {:print "$track_return(24,39,0):", $t2} $t2 == $t2;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:379:5+1
    assume {:print "$at(155,16745,16746)"} true;
L1:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:379:5+1
    assume {:print "$at(155,16745,16746)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:379:5+1
L2:

    // abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:379:5+1
    assume {:print "$at(155,16745,16746)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::object_from_constructor_ref<fungible_asset::Metadata> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:377:5+126
procedure {:inline 1} $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: int;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:377:5+1
    assume {:print "$at(155,16620,16621)"} true;
    assume {:print "$track_local(24,39,0):", $t0} $t0 == $t0;

    // $t1 := get_field<object::ConstructorRef>.self($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:378:30+8
    assume {:print "$at(155,16731,16739)"} true;
    $t1 := $t0->$self;

    // $t2 := object::address_to_object<#0>($t1) on_abort goto L2 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:378:9+30
    call $t2 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(155,16710,16740)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(24,39):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:378:9+30
    assume {:print "$track_return(24,39,0):", $t2} $t2 == $t2;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:379:5+1
    assume {:print "$at(155,16745,16746)"} true;
L1:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:379:5+1
    assume {:print "$at(155,16745,16746)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:379:5+1
L2:

    // abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:379:5+1
    assume {:print "$at(155,16745,16746)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun object::owns<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:662:5+892
procedure {:inline 1} $1_object_owns'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore', _$t1: int) returns ($ret0: bool)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_object_ObjectCore;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: bool;
    var $t12: bool;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: $1_object_ObjectCore;
    var $t17: int;
    var $t18: int;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: bool;
    var $t25: bool;
    var $t26: $1_object_ObjectCore;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: bool;
    var $t31: bool;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t1: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t5, select object::Object.inner<object::Object<#0>>($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:536:9+37
    assume {:print "$at(156,21461,21498)"} true;
    assume ($t5 == $t0->$inner);

    // assume Identical($t6, global<object::ObjectCore>($t5)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:537:9+53
    assume {:print "$at(156,21507,21560)"} true;
    assume ($t6 == $ResourceValue($1_object_ObjectCore_$memory, $t5));

    // assume Identical($t7, select object::ObjectCore.owner<object::ObjectCore>($t6)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:538:9+37
    assume {:print "$at(156,21569,21606)"} true;
    assume ($t7 == $t6->$owner);

    // trace_local[object]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:662:5+1
    assume {:print "$at(155,27649,27650)"} true;
    assume {:print "$track_local(24,42,0):", $t0} $t0 == $t0;

    // trace_local[owner]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:662:5+1
    assume {:print "$track_local(24,42,1):", $t1} $t1 == $t1;

    // $t8 := object::object_address<#0>($t0) on_abort goto L16 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:663:31+23
    assume {:print "$at(155,27766,27789)"} true;
    call $t8 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(155,27766,27789)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(24,42):", $t9} $t9 == $t9;
        goto L16;
    }

    // trace_local[current_address]($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:663:13+15
    assume {:print "$track_local(24,42,3):", $t8} $t8 == $t8;

    // $t10 := ==($t8, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:664:29+2
    assume {:print "$at(155,27819,27821)"} true;
    $t10 := $IsEqual'address'($t8, $t1);

    // if ($t10) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:664:9+65
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:665:20+4
    assume {:print "$at(155,27850,27854)"} true;
L1:

    // $t11 := true at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:665:20+4
    assume {:print "$at(155,27850,27854)"} true;
    $t11 := true;
    assume $IsValid'bool'($t11);

    // trace_return[0]($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:665:13+11
    assume {:print "$track_return(24,42,0):", $t11} $t11 == $t11;

    // $t12 := move($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:665:13+11
    $t12 := $t11;

    // goto L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:665:13+11
    goto L15;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:669:32+15
    assume {:print "$at(155,27915,27930)"} true;
L0:

    // $t13 := exists<object::ObjectCore>($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:669:13+6
    assume {:print "$at(155,27896,27902)"} true;
    $t13 := $ResourceExists($1_object_ObjectCore_$memory, $t8);

    // if ($t13) goto L3 else goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:668:9+121
    assume {:print "$at(155,27875,27996)"} true;
    if ($t13) { goto L3; } else { goto L2; }

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:668:9+121
L3:

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:668:9+121
    assume {:print "$at(155,27875,27996)"} true;
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:670:30+22
    assume {:print "$at(155,27962,27984)"} true;
L2:

    // $t14 := 2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:670:30+22
    assume {:print "$at(155,27962,27984)"} true;
    $t14 := 2;
    assume $IsValid'u64'($t14);

    // $t15 := error::not_found($t14) on_abort goto L16 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:670:13+40
    call $t15 := $1_error_not_found($t14);
    if ($abort_flag) {
        assume {:print "$at(155,27945,27985)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(24,42):", $t9} $t9 == $t9;
        goto L16;
    }

    // trace_abort($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:668:9+121
    assume {:print "$at(155,27875,27996)"} true;
    assume {:print "$track_abort(24,42):", $t15} $t15 == $t15;

    // $t9 := move($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:668:9+121
    $t9 := $t15;

    // goto L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:668:9+121
    goto L16;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:673:48+15
    assume {:print "$at(155,28046,28061)"} true;
L4:

    // $t16 := get_global<object::ObjectCore>($t8) on_abort goto L16 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:673:22+13
    assume {:print "$at(155,28020,28033)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t8)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $ResourceValue($1_object_ObjectCore_$memory, $t8);
    }
    if ($abort_flag) {
        assume {:print "$at(155,28020,28033)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(24,42):", $t9} $t9 == $t9;
        goto L16;
    }

    // $t17 := get_field<object::ObjectCore>.owner($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:674:31+12
    assume {:print "$at(155,28094,28106)"} true;
    $t17 := $t16->$owner;

    // trace_local[current_address#2]($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:674:13+15
    assume {:print "$track_local(24,42,4):", $t17} $t17 == $t17;

    // $t18 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:676:21+1
    assume {:print "$at(155,28129,28130)"} true;
    $t18 := 0;
    assume $IsValid'u8'($t18);

    // trace_local[count]($t18) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:676:13+5
    assume {:print "$track_local(24,42,2):", $t18} $t18 == $t18;

    // label L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume {:print "$at(155,28147,28152)"} true;
L13:

    // $t2 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume {:print "$at(155,28147,28152)"} true;
    havoc $t2;

    // assume WellFormed($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume $IsValid'u8'($t2);

    // $t4 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    havoc $t4;

    // assume WellFormed($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume $IsValid'address'($t4);

    // $t19 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    havoc $t19;

    // assume WellFormed($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume $IsValid'bool'($t19);

    // $t20 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    havoc $t20;

    // assume WellFormed($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume $IsValid'u8'($t20);

    // $t21 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    havoc $t21;

    // assume WellFormed($t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume $IsValid'u8'($t21);

    // $t22 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    havoc $t22;

    // assume WellFormed($t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume $IsValid'u8'($t22);

    // $t23 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    havoc $t23;

    // assume WellFormed($t23) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume $IsValid'bool'($t23);

    // $t24 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    havoc $t24;

    // assume WellFormed($t24) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume $IsValid'bool'($t24);

    // $t25 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    havoc $t25;

    // assume WellFormed($t25) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume $IsValid'bool'($t25);

    // $t26 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    havoc $t26;

    // assume WellFormed($t26) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume $IsValid'$1_object_ObjectCore'($t26);

    // $t27 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    havoc $t27;

    // assume WellFormed($t27) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume $IsValid'address'($t27);

    // trace_local[count]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume {:print "$info(): enter loop, variable(s) count, current_address#2 havocked and reassigned"} true;
    assume {:print "$track_local(24,42,2):", $t2} $t2 == $t2;

    // trace_local[current_address#2]($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume {:print "$track_local(24,42,4):", $t4} $t4 == $t4;

    // assume Not(AbortFlag()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:16+5
    assume !$abort_flag;

    // $t19 := !=($t1, $t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:22+2
    $t19 := !$IsEqual'address'($t1, $t4);

    // if ($t19) goto L6 else goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:9+381
    if ($t19) { goto L6; } else { goto L5; }

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:677:9+381
L6:

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:678:21+5
    assume {:print "$at(155,28195,28200)"} true;
L7:

    // $t20 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:678:29+1
    assume {:print "$at(155,28203,28204)"} true;
    $t20 := 1;
    assume $IsValid'u8'($t20);

    // $t21 := +($t2, $t20) on_abort goto L16 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:678:27+1
    call $t21 := $AddU8($t2, $t20);
    if ($abort_flag) {
        assume {:print "$at(155,28201,28202)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(24,42):", $t9} $t9 == $t9;
        goto L16;
    }

    // trace_local[count]($t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:678:13+5
    assume {:print "$track_local(24,42,2):", $t21} $t21 == $t21;

    // $t22 := 8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:679:29+22
    assume {:print "$at(155,28234,28256)"} true;
    $t22 := 8;
    assume $IsValid'u8'($t22);

    // $t23 := <($t21, $t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:679:27+1
    call $t23 := $Lt($t21, $t22);

    // if ($t23) goto L9 else goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:679:13+78
    if ($t23) { goto L9; } else { goto L8; }

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:679:13+78
L9:

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:679:13+78
    assume {:print "$at(155,28218,28296)"} true;
    goto L10;

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:679:73+16
L8:

    // $t28 := 6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:679:73+16
    assume {:print "$at(155,28278,28294)"} true;
    $t28 := 6;
    assume $IsValid'u64'($t28);

    // $t29 := error::out_of_range($t28) on_abort goto L16 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:679:53+37
    call $t29 := $1_error_out_of_range($t28);
    if ($abort_flag) {
        assume {:print "$at(155,28258,28295)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(24,42):", $t9} $t9 == $t9;
        goto L16;
    }

    // trace_abort($t29) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:679:13+78
    assume {:print "$at(155,28218,28296)"} true;
    assume {:print "$track_abort(24,42):", $t29} $t29 == $t29;

    // $t9 := move($t29) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:679:13+78
    $t9 := $t29;

    // goto L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:679:13+78
    goto L16;

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:680:37+15
    assume {:print "$at(155,28334,28349)"} true;
L10:

    // $t24 := exists<object::ObjectCore>($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:680:18+6
    assume {:print "$at(155,28315,28321)"} true;
    $t24 := $ResourceExists($1_object_ObjectCore_$memory, $t4);

    // $t25 := !($t24) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:680:17+1
    call $t25 := $Not($t24);

    // if ($t25) goto L12 else goto L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:680:13+86
    if ($t25) { goto L12; } else { goto L11; }

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:681:24+5
    assume {:print "$at(155,28377,28382)"} true;
L12:

    // $t30 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:681:24+5
    assume {:print "$at(155,28377,28382)"} true;
    $t30 := false;
    assume $IsValid'bool'($t30);

    // trace_return[0]($t30) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:681:17+12
    assume {:print "$track_return(24,42,0):", $t30} $t30 == $t30;

    // $t12 := move($t30) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:681:17+12
    $t12 := $t30;

    // goto L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:681:17+12
    goto L15;

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:684:52+15
    assume {:print "$at(155,28450,28465)"} true;
L11:

    // $t26 := get_global<object::ObjectCore>($t4) on_abort goto L16 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:684:26+13
    assume {:print "$at(155,28424,28437)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t26 := $ResourceValue($1_object_ObjectCore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(155,28424,28437)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(24,42):", $t9} $t9 == $t9;
        goto L16;
    }

    // $t27 := get_field<object::ObjectCore>.owner($t26) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:685:31+12
    assume {:print "$at(155,28498,28510)"} true;
    $t27 := $t26->$owner;

    // trace_local[current_address#2]($t27) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:685:13+15
    assume {:print "$track_local(24,42,4):", $t27} $t27 == $t27;

    // goto L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:685:43+1
    goto L14;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:687:9+4
    assume {:print "$at(155,28531,28535)"} true;
L5:

    // $t31 := true at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:687:9+4
    assume {:print "$at(155,28531,28535)"} true;
    $t31 := true;
    assume $IsValid'bool'($t31);

    // trace_return[0]($t31) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:687:9+4
    assume {:print "$track_return(24,42,0):", $t31} $t31 == $t31;

    // $t12 := move($t31) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:687:9+4
    $t12 := $t31;

    // goto L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:687:9+4
    goto L15;

    // label L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:687:9+4
    // Loop invariant checking block for the loop started with header: L13
L14:

    // stop() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:687:9+4
    assume {:print "$at(155,28531,28535)"} true;
    assume false;
    return;

    // label L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:688:5+1
    assume {:print "$at(155,28540,28541)"} true;
L15:

    // return $t12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:688:5+1
    assume {:print "$at(155,28540,28541)"} true;
    $ret0 := $t12;
    return;

    // label L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:688:5+1
L16:

    // abort($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:688:5+1
    assume {:print "$at(155,28540,28541)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun object::set_untransferable [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:452:5+290
procedure {:inline 1} $1_object_set_untransferable(_$t0: $1_object_ConstructorRef) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_object_ObjectCore);
    var $t2: $signer;
    var $t3: int;
    var $t4: $Mutation ($1_object_ObjectCore);
    var $t5: int;
    var $t6: bool;
    var $t7: $Mutation (bool);
    var $t8: $signer;
    var $t9: bool;
    var $t10: $1_object_Untransferable;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:452:5+1
    assume {:print "$at(155,19093,19094)"} true;
    assume {:print "$track_local(24,44,0):", $t0} $t0 == $t0;

    // $t3 := get_field<object::ConstructorRef>.self($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:453:52+8
    assume {:print "$at(155,19218,19226)"} true;
    $t3 := $t0->$self;

    // $t4 := borrow_global<object::ObjectCore>($t3) on_abort goto L2 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:453:22+17
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $Mutation($Global($t3), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t3));
    }
    if ($abort_flag) {
        assume {:print "$at(155,19188,19205)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(24,44):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[object]($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:453:13+6
    $temp_0'$1_object_ObjectCore' := $Dereference($t4);
    assume {:print "$track_local(24,44,1):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t6 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:454:41+5
    assume {:print "$at(155,19269,19274)"} true;
    $t6 := false;
    assume $IsValid'bool'($t6);

    // $t7 := borrow_field<object::ObjectCore>.allow_ungated_transfer($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:454:9+29
    $t7 := $ChildMutation($t4, 2, $Dereference($t4)->$allow_ungated_transfer);

    // write_ref($t7, $t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:454:9+37
    $t7 := $UpdateMutation($t7, $t6);

    // write_back[Reference($t4).allow_ungated_transfer (bool)]($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:454:9+37
    $t4 := $UpdateMutation($t4, $Update'$1_object_ObjectCore'_allow_ungated_transfer($Dereference($t4), $Dereference($t7)));

    // write_back[object::ObjectCore@]($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:454:9+37
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t4),
        $Dereference($t4));

    // $t8 := object::generate_signer($t0) on_abort goto L2 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:455:29+20
    assume {:print "$at(155,19304,19324)"} true;
    call $t8 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(155,19304,19324)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(24,44):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[object_signer]($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:455:13+13
    assume {:print "$track_local(24,44,2):", $t8} $t8 == $t8;

    // $t9 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:456:33+17
    assume {:print "$at(155,19358,19375)"} true;
    $t9 := false;
    assume $IsValid'bool'($t9);

    // $t10 := pack object::Untransferable($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:456:33+17
    $t10 := $1_object_Untransferable($t9);

    // move_to<object::Untransferable>($t10, $t8) on_abort goto L2 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:456:9+7
    if ($ResourceExists($1_object_Untransferable_$memory, $t8->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_object_Untransferable_$memory := $ResourceUpdate($1_object_Untransferable_$memory, $t8->$addr, $t10);
    }
    if ($abort_flag) {
        assume {:print "$at(155,19334,19341)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(24,44):", $t5} $t5 == $t5;
        goto L2;
    }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:457:5+1
    assume {:print "$at(155,19382,19383)"} true;
L1:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:457:5+1
    assume {:print "$at(155,19382,19383)"} true;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:457:5+1
L2:

    // abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:457:5+1
    assume {:print "$at(155,19382,19383)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun object::unburn<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:625:5+553
procedure {:inline 1} $1_object_unburn'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore') returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_object_ObjectCore);
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_TombStone;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $1_object_TombStone;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: $Mutation ($1_object_ObjectCore);
    var $t21: int;
    var $t22: bool;
    var $t23: bool;
    var $t24: int;
    var $t25: $1_object_Transfer;
    var $t26: $Mutation ($1_event_EventHandle'$1_object_TransferEvent');
    var $t27: int;
    var $t28: $1_object_TransferEvent;
    var $t29: $Mutation (int);
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_ObjectCore': $1_object_ObjectCore;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t7, select object::Object.inner<object::Object<#0>>($t1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:488:9+34
    assume {:print "$at(156,19227,19261)"} true;
    assume ($t7 == $t1->$inner);

    // assume Identical($t8, global<object::TombStone>($t7)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:491:9+58
    assume {:print "$at(156,19362,19420)"} true;
    assume ($t8 == $ResourceValue($1_object_TombStone_$memory, $t7));

    // trace_local[original_owner]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:625:5+1
    assume {:print "$at(155,26117,26118)"} true;
    assume {:print "$track_local(24,50,0):", $t0} $t0 == $t0;

    // trace_local[object]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:625:5+1
    assume {:print "$track_local(24,50,1):", $t1} $t1 == $t1;

    // $t9 := get_field<object::Object<#0>>.inner($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:629:27+12
    assume {:print "$at(155,26275,26287)"} true;
    $t9 := $t1->$inner;

    // trace_local[object_addr]($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:629:13+11
    assume {:print "$track_local(24,50,3):", $t9} $t9 == $t9;

    // $t10 := exists<object::TombStone>($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:630:17+6
    assume {:print "$at(155,26305,26311)"} true;
    $t10 := $ResourceExists($1_object_TombStone_$memory, $t9);

    // if ($t10) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:630:9+83
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:630:9+83
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:630:9+83
    assume {:print "$at(155,26297,26380)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:630:9+83
L0:

    // $t11 := 8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:630:73+17
    assume {:print "$at(155,26361,26378)"} true;
    $t11 := 8;
    assume $IsValid'u64'($t11);

    // $t12 := error::invalid_argument($t11) on_abort goto L12 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:630:49+42
    call $t12 := $1_error_invalid_argument($t11);
    if ($abort_flag) {
        assume {:print "$at(155,26337,26379)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,50):", $t13} $t13 == $t13;
        goto L12;
    }

    // trace_abort($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:630:9+83
    assume {:print "$at(155,26297,26380)"} true;
    assume {:print "$track_abort(24,50):", $t12} $t12 == $t12;

    // $t13 := move($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:630:9+83
    $t13 := $t12;

    // goto L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:630:9+83
    goto L12;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:632:86+11
    assume {:print "$at(155,26468,26479)"} true;
L2:

    // $t14 := move_from<object::TombStone>($t9) on_abort goto L12 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:632:65+9
    assume {:print "$at(155,26447,26456)"} true;
    if (!$ResourceExists($1_object_TombStone_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $ResourceValue($1_object_TombStone_$memory, $t9);
        $1_object_TombStone_$memory := $ResourceRemove($1_object_TombStone_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(155,26447,26456)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,50):", $t13} $t13 == $t13;
        goto L12;
    }

    // $t15 := unpack object::TombStone($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:632:13+49
    $t15 := $t14->$original_owner;

    // trace_local[original_owner_addr]($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:632:41+19
    assume {:print "$track_local(24,50,5):", $t15} $t15 == $t15;

    // $t16 := signer::address_of($t0) on_abort goto L12 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:633:40+34
    assume {:print "$at(155,26521,26555)"} true;
    call $t16 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(155,26521,26555)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,50):", $t13} $t13 == $t13;
        goto L12;
    }

    // $t17 := ==($t15, $t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:633:37+2
    $t17 := $IsEqual'address'($t15, $t16);

    // if ($t17) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:633:9+111
    if ($t17) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:633:9+111
L4:

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:633:9+111
    assume {:print "$at(155,26490,26601)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:633:101+17
L3:

    // $t18 := 4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:633:101+17
    assume {:print "$at(155,26582,26599)"} true;
    $t18 := 4;
    assume $IsValid'u64'($t18);

    // $t19 := error::permission_denied($t18) on_abort goto L12 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:633:76+43
    call $t19 := $1_error_permission_denied($t18);
    if ($abort_flag) {
        assume {:print "$at(155,26557,26600)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,50):", $t13} $t13 == $t13;
        goto L12;
    }

    // trace_abort($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:633:9+111
    assume {:print "$at(155,26490,26601)"} true;
    assume {:print "$track_abort(24,50):", $t19} $t19 == $t19;

    // $t13 := move($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:633:9+111
    $t13 := $t19;

    // goto L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:633:9+111
    goto L12;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:634:28+11
    assume {:print "$at(155,26630,26641)"} true;
L5:

    // trace_local[to#565]($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:544:52+2
    assume {:print "$at(155,22724,22726)"} true;
    assume {:print "$track_local(24,50,6):", $t15} $t15 == $t15;

    // trace_local[object#564]($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:544:35+6
    assume {:print "$track_local(24,50,2):", $t9} $t9 == $t9;

    // $t20 := borrow_global<object::ObjectCore>($t9) on_abort goto L12 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:545:27+17
    assume {:print "$at(155,22785,22802)"} true;
    if (!$ResourceExists($1_object_ObjectCore_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_object_ObjectCore_$memory, $t9));
    }
    if ($abort_flag) {
        assume {:print "$at(155,22785,22802)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,50):", $t13} $t13 == $t13;
        goto L12;
    }

    // trace_local[object_core#566]($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:545:13+11
    $temp_0'$1_object_ObjectCore' := $Dereference($t20);
    assume {:print "$track_local(24,50,4):", $temp_0'$1_object_ObjectCore'} $temp_0'$1_object_ObjectCore' == $temp_0'$1_object_ObjectCore';

    // $t21 := get_field<object::ObjectCore>.owner($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:546:13+17
    assume {:print "$at(155,22836,22853)"} true;
    $t21 := $Dereference($t20)->$owner;

    // $t22 := !=($t21, $t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:546:31+2
    $t22 := !$IsEqual'address'($t21, $t15);

    // if ($t22) goto L7 else goto L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:546:9+613
    if ($t22) { goto L7; } else { goto L6; }

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:547:17+47
    assume {:print "$at(155,22879,22926)"} true;
L7:

    // $t23 := features::module_event_migration_enabled() on_abort goto L12 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:547:17+47
    assume {:print "$at(155,22879,22926)"} true;
    call $t23 := $1_features_module_event_migration_enabled();
    if ($abort_flag) {
        assume {:print "$at(155,22879,22926)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(24,50):", $t13} $t13 == $t13;
        goto L12;
    }

    // if ($t23) goto L9 else goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:547:13+279
    if ($t23) { goto L9; } else { goto L8; }

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:550:25+6
    assume {:print "$at(155,23014,23020)"} true;
L9:

    // $t24 := get_field<object::ObjectCore>.owner($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:551:31+17
    assume {:print "$at(155,23052,23069)"} true;
    $t24 := $Dereference($t20)->$owner;

    // $t25 := pack object::Transfer($t9, $t24, $t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:549:21+141
    assume {:print "$at(155,22979,23120)"} true;
    $t25 := $1_object_Transfer($t9, $t24, $t15);

    // opaque begin: event::emit<object::Transfer>($t25) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:548:17+193
    assume {:print "$at(155,22946,23139)"} true;

    // opaque end: event::emit<object::Transfer>($t25) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:548:17+193

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:557:22+11
    assume {:print "$at(155,23208,23219)"} true;
L8:

    // $t26 := borrow_field<object::ObjectCore>.transfer_events($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:557:17+32
    assume {:print "$at(155,23203,23235)"} true;
    $t26 := $ChildMutation($t20, 3, $Dereference($t20)->$transfer_events);

    // $t27 := get_field<object::ObjectCore>.owner($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:560:27+17
    assume {:print "$at(155,23323,23340)"} true;
    $t27 := $Dereference($t20)->$owner;

    // $t28 := pack object::TransferEvent($t9, $t27, $t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:558:17+130
    assume {:print "$at(155,23253,23383)"} true;
    $t28 := $1_object_TransferEvent($t9, $t27, $t15);

    // opaque begin: event::emit_event<object::TransferEvent>($t26, $t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:556:13+230
    assume {:print "$at(155,23168,23398)"} true;

    // opaque end: event::emit_event<object::TransferEvent>($t26, $t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:556:13+230

    // write_back[Reference($t20).transfer_events (event::EventHandle<object::TransferEvent>)]($t26) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:556:13+230
    $t20 := $UpdateMutation($t20, $Update'$1_object_ObjectCore'_transfer_events($Dereference($t20), $Dereference($t26)));

    // $t29 := borrow_field<object::ObjectCore>.owner($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:564:13+17
    assume {:print "$at(155,23412,23429)"} true;
    $t29 := $ChildMutation($t20, 1, $Dereference($t20)->$owner);

    // write_ref($t29, $t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:564:13+22
    $t29 := $UpdateMutation($t29, $t15);

    // write_back[Reference($t20).owner (address)]($t29) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:564:13+22
    $t20 := $UpdateMutation($t20, $Update'$1_object_ObjectCore'_owner($Dereference($t20), $Dereference($t29)));

    // write_back[object::ObjectCore@]($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:564:13+22
    $1_object_ObjectCore_$memory := $ResourceUpdate($1_object_ObjectCore_$memory, $GlobalLocationAddress($t20),
        $Dereference($t20));

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:564:35+1
    goto L10;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:546:9+613
    assume {:print "$at(155,22832,23445)"} true;
L6:

    // drop($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:546:9+613
    assume {:print "$at(155,22832,23445)"} true;

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:634:61+1
    assume {:print "$at(155,26663,26664)"} true;
L10:

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:635:5+1
    assume {:print "$at(155,26669,26670)"} true;
L11:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:635:5+1
    assume {:print "$at(155,26669,26670)"} true;
    return;

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:635:5+1
L12:

    // abort($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.move:635:5+1
    assume {:print "$at(155,26669,26670)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// struct function_info::FunctionInfo at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:19:5+142
datatype $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo($module_address: int, $module_name: $1_string_String, $function_name: $1_string_String)
}
function {:inline} $Update'$1_function_info_FunctionInfo'_module_address(s: $1_function_info_FunctionInfo, x: int): $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo(x, s->$module_name, s->$function_name)
}
function {:inline} $Update'$1_function_info_FunctionInfo'_module_name(s: $1_function_info_FunctionInfo, x: $1_string_String): $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo(s->$module_address, x, s->$function_name)
}
function {:inline} $Update'$1_function_info_FunctionInfo'_function_name(s: $1_function_info_FunctionInfo, x: $1_string_String): $1_function_info_FunctionInfo {
    $1_function_info_FunctionInfo(s->$module_address, s->$module_name, x)
}
function $IsValid'$1_function_info_FunctionInfo'(s: $1_function_info_FunctionInfo): bool {
    $IsValid'address'(s->$module_address)
      && $IsValid'$1_string_String'(s->$module_name)
      && $IsValid'$1_string_String'(s->$function_name)
}
function {:inline} $IsEqual'$1_function_info_FunctionInfo'(s1: $1_function_info_FunctionInfo, s2: $1_function_info_FunctionInfo): bool {
    $IsEqual'address'(s1->$module_address, s2->$module_address)
    && $IsEqual'$1_string_String'(s1->$module_name, s2->$module_name)
    && $IsEqual'$1_string_String'(s1->$function_name, s2->$function_name)}

// fun function_info::load_module_from_function [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:89:5+100
procedure {:inline 1} $1_function_info_load_module_from_function(_$t0: $1_function_info_FunctionInfo) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t0: $1_function_info_FunctionInfo;
    var $temp_0'$1_function_info_FunctionInfo': $1_function_info_FunctionInfo;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[f]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:89:5+1
    assume {:print "$at(137,3414,3415)"} true;
    assume {:print "$track_local(26,4,0):", $t0} $t0 == $t0;

    // opaque begin: function_info::load_function_impl($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
    assume {:print "$at(137,3487,3508)"} true;

    // $t1 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
    havoc $t1;

    // if ($t1) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
    if ($t1) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
L4:

    // trace_abort($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
    assume {:print "$at(137,3487,3508)"} true;
    assume {:print "$track_abort(26,4):", $t2} $t2 == $t2;

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
    goto L2;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
L3:

    // opaque end: function_info::load_function_impl($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:90:9+21
    assume {:print "$at(137,3487,3508)"} true;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:91:5+1
    assume {:print "$at(137,3513,3514)"} true;
L1:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:91:5+1
    assume {:print "$at(137,3513,3514)"} true;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:91:5+1
L2:

    // abort($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/function_info.move:91:5+1
    assume {:print "$at(137,3513,3514)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// struct fungible_asset::TransferRef at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:183:5+77
datatype $1_fungible_asset_TransferRef {
    $1_fungible_asset_TransferRef($metadata: $1_object_Object'$1_fungible_asset_Metadata')
}
function {:inline} $Update'$1_fungible_asset_TransferRef'_metadata(s: $1_fungible_asset_TransferRef, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_TransferRef {
    $1_fungible_asset_TransferRef(x)
}
function $IsValid'$1_fungible_asset_TransferRef'(s: $1_fungible_asset_TransferRef): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
}
function {:inline} $IsEqual'$1_fungible_asset_TransferRef'(s1: $1_fungible_asset_TransferRef, s2: $1_fungible_asset_TransferRef): bool {
    s1 == s2
}

// struct fungible_asset::Untransferable at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:137:5+32
datatype $1_fungible_asset_Untransferable {
    $1_fungible_asset_Untransferable($dummy_field: bool)
}
function {:inline} $Update'$1_fungible_asset_Untransferable'_dummy_field(s: $1_fungible_asset_Untransferable, x: bool): $1_fungible_asset_Untransferable {
    $1_fungible_asset_Untransferable(x)
}
function $IsValid'$1_fungible_asset_Untransferable'(s: $1_fungible_asset_Untransferable): bool {
    $IsValid'bool'(s->$dummy_field)
}
function {:inline} $IsEqual'$1_fungible_asset_Untransferable'(s1: $1_fungible_asset_Untransferable, s2: $1_fungible_asset_Untransferable): bool {
    s1 == s2
}
var $1_fungible_asset_Untransferable_$memory: $Memory $1_fungible_asset_Untransferable;

// struct fungible_asset::BurnRef at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:188:5+73
datatype $1_fungible_asset_BurnRef {
    $1_fungible_asset_BurnRef($metadata: $1_object_Object'$1_fungible_asset_Metadata')
}
function {:inline} $Update'$1_fungible_asset_BurnRef'_metadata(s: $1_fungible_asset_BurnRef, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_BurnRef {
    $1_fungible_asset_BurnRef(x)
}
function $IsValid'$1_fungible_asset_BurnRef'(s: $1_fungible_asset_BurnRef): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
}
function {:inline} $IsEqual'$1_fungible_asset_BurnRef'(s1: $1_fungible_asset_BurnRef, s2: $1_fungible_asset_BurnRef): bool {
    s1 == s2
}

// struct fungible_asset::ConcurrentFungibleBalance at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:164:5+132
datatype $1_fungible_asset_ConcurrentFungibleBalance {
    $1_fungible_asset_ConcurrentFungibleBalance($balance: $1_aggregator_v2_Aggregator'u64')
}
function {:inline} $Update'$1_fungible_asset_ConcurrentFungibleBalance'_balance(s: $1_fungible_asset_ConcurrentFungibleBalance, x: $1_aggregator_v2_Aggregator'u64'): $1_fungible_asset_ConcurrentFungibleBalance {
    $1_fungible_asset_ConcurrentFungibleBalance(x)
}
function $IsValid'$1_fungible_asset_ConcurrentFungibleBalance'(s: $1_fungible_asset_ConcurrentFungibleBalance): bool {
    $IsValid'$1_aggregator_v2_Aggregator'u64''(s->$balance)
}
function {:inline} $IsEqual'$1_fungible_asset_ConcurrentFungibleBalance'(s1: $1_fungible_asset_ConcurrentFungibleBalance, s2: $1_fungible_asset_ConcurrentFungibleBalance): bool {
    s1 == s2
}
var $1_fungible_asset_ConcurrentFungibleBalance_$memory: $Memory $1_fungible_asset_ConcurrentFungibleBalance;

// struct fungible_asset::ConcurrentSupply at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:111:5+74
datatype $1_fungible_asset_ConcurrentSupply {
    $1_fungible_asset_ConcurrentSupply($current: $1_aggregator_v2_Aggregator'u128')
}
function {:inline} $Update'$1_fungible_asset_ConcurrentSupply'_current(s: $1_fungible_asset_ConcurrentSupply, x: $1_aggregator_v2_Aggregator'u128'): $1_fungible_asset_ConcurrentSupply {
    $1_fungible_asset_ConcurrentSupply(x)
}
function $IsValid'$1_fungible_asset_ConcurrentSupply'(s: $1_fungible_asset_ConcurrentSupply): bool {
    $IsValid'$1_aggregator_v2_Aggregator'u128''(s->$current)
}
function {:inline} $IsEqual'$1_fungible_asset_ConcurrentSupply'(s1: $1_fungible_asset_ConcurrentSupply, s2: $1_fungible_asset_ConcurrentSupply): bool {
    s1 == s2
}
var $1_fungible_asset_ConcurrentSupply_$memory: $Memory $1_fungible_asset_ConcurrentSupply;

// struct fungible_asset::Deposit at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:199:5+83
datatype $1_fungible_asset_Deposit {
    $1_fungible_asset_Deposit($store: int, $amount: int)
}
function {:inline} $Update'$1_fungible_asset_Deposit'_store(s: $1_fungible_asset_Deposit, x: int): $1_fungible_asset_Deposit {
    $1_fungible_asset_Deposit(x, s->$amount)
}
function {:inline} $Update'$1_fungible_asset_Deposit'_amount(s: $1_fungible_asset_Deposit, x: int): $1_fungible_asset_Deposit {
    $1_fungible_asset_Deposit(s->$store, x)
}
function $IsValid'$1_fungible_asset_Deposit'(s: $1_fungible_asset_Deposit): bool {
    $IsValid'address'(s->$store)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_fungible_asset_Deposit'(s1: $1_fungible_asset_Deposit, s2: $1_fungible_asset_Deposit): bool {
    s1 == s2
}

// struct fungible_asset::DispatchFunctionStore at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:151:5+185
datatype $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore($withdraw_function: $1_option_Option'$1_function_info_FunctionInfo', $deposit_function: $1_option_Option'$1_function_info_FunctionInfo', $derived_balance_function: $1_option_Option'$1_function_info_FunctionInfo')
}
function {:inline} $Update'$1_fungible_asset_DispatchFunctionStore'_withdraw_function(s: $1_fungible_asset_DispatchFunctionStore, x: $1_option_Option'$1_function_info_FunctionInfo'): $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore(x, s->$deposit_function, s->$derived_balance_function)
}
function {:inline} $Update'$1_fungible_asset_DispatchFunctionStore'_deposit_function(s: $1_fungible_asset_DispatchFunctionStore, x: $1_option_Option'$1_function_info_FunctionInfo'): $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore(s->$withdraw_function, x, s->$derived_balance_function)
}
function {:inline} $Update'$1_fungible_asset_DispatchFunctionStore'_derived_balance_function(s: $1_fungible_asset_DispatchFunctionStore, x: $1_option_Option'$1_function_info_FunctionInfo'): $1_fungible_asset_DispatchFunctionStore {
    $1_fungible_asset_DispatchFunctionStore(s->$withdraw_function, s->$deposit_function, x)
}
function $IsValid'$1_fungible_asset_DispatchFunctionStore'(s: $1_fungible_asset_DispatchFunctionStore): bool {
    $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s->$withdraw_function)
      && $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s->$deposit_function)
      && $IsValid'$1_option_Option'$1_function_info_FunctionInfo''(s->$derived_balance_function)
}
function {:inline} $IsEqual'$1_fungible_asset_DispatchFunctionStore'(s1: $1_fungible_asset_DispatchFunctionStore, s2: $1_fungible_asset_DispatchFunctionStore): bool {
    $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1->$withdraw_function, s2->$withdraw_function)
    && $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1->$deposit_function, s2->$deposit_function)
    && $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''(s1->$derived_balance_function, s2->$derived_balance_function)}
var $1_fungible_asset_DispatchFunctionStore_$memory: $Memory $1_fungible_asset_DispatchFunctionStore;

// struct fungible_asset::FungibleAsset at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:171:5+85
datatype $1_fungible_asset_FungibleAsset {
    $1_fungible_asset_FungibleAsset($metadata: $1_object_Object'$1_fungible_asset_Metadata', $amount: int)
}
function {:inline} $Update'$1_fungible_asset_FungibleAsset'_metadata(s: $1_fungible_asset_FungibleAsset, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_FungibleAsset {
    $1_fungible_asset_FungibleAsset(x, s->$amount)
}
function {:inline} $Update'$1_fungible_asset_FungibleAsset'_amount(s: $1_fungible_asset_FungibleAsset, x: int): $1_fungible_asset_FungibleAsset {
    $1_fungible_asset_FungibleAsset(s->$metadata, x)
}
function $IsValid'$1_fungible_asset_FungibleAsset'(s: $1_fungible_asset_FungibleAsset): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_fungible_asset_FungibleAsset'(s1: $1_fungible_asset_FungibleAsset, s2: $1_fungible_asset_FungibleAsset): bool {
    s1 == s2
}

// struct fungible_asset::FungibleStore at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:141:5+324
datatype $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore($metadata: $1_object_Object'$1_fungible_asset_Metadata', $balance: int, $frozen: bool)
}
function {:inline} $Update'$1_fungible_asset_FungibleStore'_metadata(s: $1_fungible_asset_FungibleStore, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore(x, s->$balance, s->$frozen)
}
function {:inline} $Update'$1_fungible_asset_FungibleStore'_balance(s: $1_fungible_asset_FungibleStore, x: int): $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore(s->$metadata, x, s->$frozen)
}
function {:inline} $Update'$1_fungible_asset_FungibleStore'_frozen(s: $1_fungible_asset_FungibleStore, x: bool): $1_fungible_asset_FungibleStore {
    $1_fungible_asset_FungibleStore(s->$metadata, s->$balance, x)
}
function $IsValid'$1_fungible_asset_FungibleStore'(s: $1_fungible_asset_FungibleStore): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
      && $IsValid'u64'(s->$balance)
      && $IsValid'bool'(s->$frozen)
}
function {:inline} $IsEqual'$1_fungible_asset_FungibleStore'(s1: $1_fungible_asset_FungibleStore, s2: $1_fungible_asset_FungibleStore): bool {
    s1 == s2
}
var $1_fungible_asset_FungibleStore_$memory: $Memory $1_fungible_asset_FungibleStore;

// struct fungible_asset::Metadata at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:117:5+797
datatype $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $icon_uri: $1_string_String, $project_uri: $1_string_String)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_name(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(x, s->$symbol, s->$decimals, s->$icon_uri, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_symbol(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, x, s->$decimals, s->$icon_uri, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_decimals(s: $1_fungible_asset_Metadata, x: int): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, s->$symbol, x, s->$icon_uri, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_icon_uri(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, s->$symbol, s->$decimals, x, s->$project_uri)
}
function {:inline} $Update'$1_fungible_asset_Metadata'_project_uri(s: $1_fungible_asset_Metadata, x: $1_string_String): $1_fungible_asset_Metadata {
    $1_fungible_asset_Metadata(s->$name, s->$symbol, s->$decimals, s->$icon_uri, x)
}
function $IsValid'$1_fungible_asset_Metadata'(s: $1_fungible_asset_Metadata): bool {
    $IsValid'$1_string_String'(s->$name)
      && $IsValid'$1_string_String'(s->$symbol)
      && $IsValid'u8'(s->$decimals)
      && $IsValid'$1_string_String'(s->$icon_uri)
      && $IsValid'$1_string_String'(s->$project_uri)
}
function {:inline} $IsEqual'$1_fungible_asset_Metadata'(s1: $1_fungible_asset_Metadata, s2: $1_fungible_asset_Metadata): bool {
    $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'$1_string_String'(s1->$symbol, s2->$symbol)
    && $IsEqual'u8'(s1->$decimals, s2->$decimals)
    && $IsEqual'$1_string_String'(s1->$icon_uri, s2->$icon_uri)
    && $IsEqual'$1_string_String'(s1->$project_uri, s2->$project_uri)}
var $1_fungible_asset_Metadata_$memory: $Memory $1_fungible_asset_Metadata;

// struct fungible_asset::MintRef at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:177:5+73
datatype $1_fungible_asset_MintRef {
    $1_fungible_asset_MintRef($metadata: $1_object_Object'$1_fungible_asset_Metadata')
}
function {:inline} $Update'$1_fungible_asset_MintRef'_metadata(s: $1_fungible_asset_MintRef, x: $1_object_Object'$1_fungible_asset_Metadata'): $1_fungible_asset_MintRef {
    $1_fungible_asset_MintRef(x)
}
function $IsValid'$1_fungible_asset_MintRef'(s: $1_fungible_asset_MintRef): bool {
    $IsValid'$1_object_Object'$1_fungible_asset_Metadata''(s->$metadata)
}
function {:inline} $IsEqual'$1_fungible_asset_MintRef'(s1: $1_fungible_asset_MintRef, s2: $1_fungible_asset_MintRef): bool {
    s1 == s2
}

// struct fungible_asset::Supply at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:104:5+133
datatype $1_fungible_asset_Supply {
    $1_fungible_asset_Supply($current: int, $maximum: $1_option_Option'u128')
}
function {:inline} $Update'$1_fungible_asset_Supply'_current(s: $1_fungible_asset_Supply, x: int): $1_fungible_asset_Supply {
    $1_fungible_asset_Supply(x, s->$maximum)
}
function {:inline} $Update'$1_fungible_asset_Supply'_maximum(s: $1_fungible_asset_Supply, x: $1_option_Option'u128'): $1_fungible_asset_Supply {
    $1_fungible_asset_Supply(s->$current, x)
}
function $IsValid'$1_fungible_asset_Supply'(s: $1_fungible_asset_Supply): bool {
    $IsValid'u128'(s->$current)
      && $IsValid'$1_option_Option'u128''(s->$maximum)
}
function {:inline} $IsEqual'$1_fungible_asset_Supply'(s1: $1_fungible_asset_Supply, s2: $1_fungible_asset_Supply): bool {
    $IsEqual'u128'(s1->$current, s2->$current)
    && $IsEqual'$1_option_Option'u128''(s1->$maximum, s2->$maximum)}
var $1_fungible_asset_Supply_$memory: $Memory $1_fungible_asset_Supply;

// struct fungible_asset::Withdraw at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:206:5+84
datatype $1_fungible_asset_Withdraw {
    $1_fungible_asset_Withdraw($store: int, $amount: int)
}
function {:inline} $Update'$1_fungible_asset_Withdraw'_store(s: $1_fungible_asset_Withdraw, x: int): $1_fungible_asset_Withdraw {
    $1_fungible_asset_Withdraw(x, s->$amount)
}
function {:inline} $Update'$1_fungible_asset_Withdraw'_amount(s: $1_fungible_asset_Withdraw, x: int): $1_fungible_asset_Withdraw {
    $1_fungible_asset_Withdraw(s->$store, x)
}
function $IsValid'$1_fungible_asset_Withdraw'(s: $1_fungible_asset_Withdraw): bool {
    $IsValid'address'(s->$store)
      && $IsValid'u64'(s->$amount)
}
function {:inline} $IsEqual'$1_fungible_asset_Withdraw'(s1: $1_fungible_asset_Withdraw, s2: $1_fungible_asset_Withdraw): bool {
    s1 == s2
}

// fun fungible_asset::generate_transfer_ref [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:460:5+207
procedure {:inline 1} $1_fungible_asset_generate_transfer_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_fungible_asset_TransferRef)
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_fungible_asset_TransferRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:460:5+1
    assume {:print "$at(139,19324,19325)"} true;
    assume {:print "$track_local(27,25,0):", $t0} $t0 == $t0;

    // $t1 := object::object_from_constructor_ref<fungible_asset::Metadata>($t0) on_abort goto L2 with $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:461:24+62
    assume {:print "$at(139,19429,19491)"} true;
    call $t1 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,19429,19491)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(27,25):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack fungible_asset::TransferRef($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:462:9+24
    assume {:print "$at(139,19501,19525)"} true;
    $t3 := $1_fungible_asset_TransferRef($t1);

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:462:9+24
    assume {:print "$track_return(27,25,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:463:5+1
    assume {:print "$at(139,19530,19531)"} true;
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:463:5+1
    assume {:print "$at(139,19530,19531)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:463:5+1
L2:

    // abort($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:463:5+1
    assume {:print "$at(139,19530,19531)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::is_untransferable<fungible_asset::Metadata> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:293:5+137
procedure {:inline 1} $1_fungible_asset_is_untransferable'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:293:5+1
    assume {:print "$at(139,12331,12332)"} true;
    assume {:print "$track_local(27,34,0):", $t0} $t0 == $t0;

    // $t1 := object::object_address<#0>($t0) on_abort goto L2 with $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:294:32+33
    assume {:print "$at(139,12428,12461)"} true;
    call $t1 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,12428,12461)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(27,34):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := exists<fungible_asset::Untransferable>($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:294:9+6
    $t3 := $ResourceExists($1_fungible_asset_Untransferable_$memory, $t1);

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:294:9+57
    assume {:print "$track_return(27,34,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:295:5+1
    assume {:print "$at(139,12467,12468)"} true;
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:295:5+1
    assume {:print "$at(139,12467,12468)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:295:5+1
L2:

    // abort($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:295:5+1
    assume {:print "$at(139,12467,12468)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::add_fungibility [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1830
procedure {:inline 1} $1_fungible_asset_add_fungibility(_$t0: $1_object_ConstructorRef, _$t1: $1_option_Option'u128', _$t2: $1_string_String, _$t3: $1_string_String, _$t4: int, _$t5: $1_string_String, _$t6: $1_string_String) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t7: $signer;
    var $t8: $1_aggregator_v2_Aggregator'u128';
    var $t9: $signer;
    var $t10: $signer;
    var $t11: bool;
    var $t12: bool;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: $signer;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: bool;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: bool;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: bool;
    var $t40: int;
    var $t41: int;
    var $t42: $1_fungible_asset_Metadata;
    var $t43: bool;
    var $t44: $1_option_Option'u128';
    var $t45: bool;
    var $t46: bool;
    var $t47: $Mutation ($1_option_Option'u128');
    var $t48: int;
    var $t49: $1_option_Option'u128';
    var $t50: bool;
    var $t51: bool;
    var $t52: $1_fungible_asset_ConcurrentSupply;
    var $t53: int;
    var $t54: $1_option_Option'u128';
    var $t55: $1_fungible_asset_Supply;
    var $t56: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: $1_object_ConstructorRef;
    var $t1: $1_option_Option'u128';
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: int;
    var $t5: $1_string_String;
    var $t6: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_option_Option'u128'': $1_option_Option'u128';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$at(139,9964,9965)"} true;
    assume {:print "$track_local(27,0,0):", $t0} $t0 == $t0;

    // trace_local[maximum_supply]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$track_local(27,0,1):", $t1} $t1 == $t1;

    // trace_local[name]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$track_local(27,0,2):", $t2} $t2 == $t2;

    // trace_local[symbol]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$track_local(27,0,3):", $t3} $t3 == $t3;

    // trace_local[decimals]($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$track_local(27,0,4):", $t4} $t4 == $t4;

    // trace_local[icon_uri]($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$track_local(27,0,5):", $t5} $t5 == $t5;

    // trace_local[project_uri]($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:237:5+1
    assume {:print "$track_local(27,0,6):", $t6} $t6 == $t6;

    // $t12 := object::can_generate_delete_ref($t0) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:18+48
    assume {:print "$at(139,10238,10286)"} true;
    call $t12 := $1_object_can_generate_delete_ref($t0);
    if ($abort_flag) {
        assume {:print "$at(139,10238,10286)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // $t14 := !($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:17+1
    call $t14 := $Not($t12);

    // if ($t14) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
    assume {:print "$at(139,10229,10334)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
L0:

    // $t15 := 18 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:92+20
    assume {:print "$at(139,10312,10332)"} true;
    $t15 := 18;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:68+45
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(139,10288,10333)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_abort($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
    assume {:print "$at(139,10229,10334)"} true;
    assume {:print "$track_abort(27,0):", $t16} $t16 == $t16;

    // $t13 := move($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
    $t13 := $t16;

    // goto L25 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:246:9+105
    goto L25;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:247:63+15
    assume {:print "$at(139,10398,10413)"} true;
L2:

    // $t17 := object::generate_signer($t0) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:247:39+40
    assume {:print "$at(139,10374,10414)"} true;
    call $t17 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(139,10374,10414)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_local[metadata_object_signer]($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:247:13+22
    assume {:print "$track_local(27,0,10):", $t17} $t17 == $t17;

    // $t18 := string::length($t2) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:17+21
    assume {:print "$at(139,10432,10453)"} true;
    call $t18 := $1_string_length($t2);
    if ($abort_flag) {
        assume {:print "$at(139,10432,10453)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // $t19 := 32 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:42+15
    $t19 := 32;
    assume $IsValid'u64'($t19);

    // $t20 := <=($t18, $t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:39+2
    call $t20 := $Le($t18, $t19);

    // if ($t20) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
    if ($t20) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
L4:

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
    assume {:print "$at(139,10424,10510)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
L3:

    // $t21 := 15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:79+14
    assume {:print "$at(139,10494,10508)"} true;
    $t21 := 15;
    assume $IsValid'u64'($t21);

    // $t22 := error::out_of_range($t21) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:59+35
    call $t22 := $1_error_out_of_range($t21);
    if ($abort_flag) {
        assume {:print "$at(139,10474,10509)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_abort($t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
    assume {:print "$at(139,10424,10510)"} true;
    assume {:print "$track_abort(27,0):", $t22} $t22 == $t22;

    // $t13 := move($t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
    $t13 := $t22;

    // goto L25 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:248:9+86
    goto L25;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:32+7
    assume {:print "$at(139,10543,10550)"} true;
L5:

    // $t23 := string::length($t3) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:17+23
    assume {:print "$at(139,10528,10551)"} true;
    call $t23 := $1_string_length($t3);
    if ($abort_flag) {
        assume {:print "$at(139,10528,10551)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // $t24 := 10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:44+17
    $t24 := 10;
    assume $IsValid'u64'($t24);

    // $t25 := <=($t23, $t24) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:41+2
    call $t25 := $Le($t23, $t24);

    // if ($t25) goto L7 else goto L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
    if ($t25) { goto L7; } else { goto L6; }

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
L7:

    // goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
    assume {:print "$at(139,10520,10612)"} true;
    goto L8;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
L6:

    // $t26 := 16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:83+16
    assume {:print "$at(139,10594,10610)"} true;
    $t26 := 16;
    assume $IsValid'u64'($t26);

    // $t27 := error::out_of_range($t26) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:63+37
    call $t27 := $1_error_out_of_range($t26);
    if ($abort_flag) {
        assume {:print "$at(139,10574,10611)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_abort($t27) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
    assume {:print "$at(139,10520,10612)"} true;
    assume {:print "$track_abort(27,0):", $t27} $t27 == $t27;

    // $t13 := move($t27) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
    $t13 := $t27;

    // goto L25 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:249:9+92
    goto L25;

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:17+8
    assume {:print "$at(139,10630,10638)"} true;
L8:

    // $t28 := 32 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:29+12
    assume {:print "$at(139,10642,10654)"} true;
    $t28 := 32;
    assume $IsValid'u8'($t28);

    // $t29 := <=($t4, $t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:26+2
    call $t29 := $Le($t4, $t28);

    // if ($t29) goto L10 else goto L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
    if ($t29) { goto L10; } else { goto L9; }

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
L10:

    // goto L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
    assume {:print "$at(139,10622,10697)"} true;
    goto L11;

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
L9:

    // $t30 := 17 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:63+19
    assume {:print "$at(139,10676,10695)"} true;
    $t30 := 17;
    assume $IsValid'u64'($t30);

    // $t31 := error::out_of_range($t30) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:43+40
    call $t31 := $1_error_out_of_range($t30);
    if ($abort_flag) {
        assume {:print "$at(139,10656,10696)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_abort($t31) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
    assume {:print "$at(139,10622,10697)"} true;
    assume {:print "$track_abort(27,0):", $t31} $t31 == $t31;

    // $t13 := move($t31) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
    $t13 := $t31;

    // goto L25 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:250:9+75
    goto L25;

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:32+9
    assume {:print "$at(139,10730,10739)"} true;
L11:

    // $t32 := string::length($t5) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:17+25
    assume {:print "$at(139,10715,10740)"} true;
    call $t32 := $1_string_length($t5);
    if ($abort_flag) {
        assume {:print "$at(139,10715,10740)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // $t33 := 512 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:46+14
    $t33 := 512;
    assume $IsValid'u64'($t33);

    // $t34 := <=($t32, $t33) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:43+2
    call $t34 := $Le($t32, $t33);

    // if ($t34) goto L13 else goto L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
    if ($t34) { goto L13; } else { goto L12; }

    // label L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
L13:

    // goto L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
    assume {:print "$at(139,10707,10795)"} true;
    goto L14;

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
L12:

    // $t35 := 19 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:82+13
    assume {:print "$at(139,10780,10793)"} true;
    $t35 := 19;
    assume $IsValid'u64'($t35);

    // $t36 := error::out_of_range($t35) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:62+34
    call $t36 := $1_error_out_of_range($t35);
    if ($abort_flag) {
        assume {:print "$at(139,10760,10794)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_abort($t36) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
    assume {:print "$at(139,10707,10795)"} true;
    assume {:print "$track_abort(27,0):", $t36} $t36 == $t36;

    // $t13 := move($t36) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
    $t13 := $t36;

    // goto L25 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:251:9+88
    goto L25;

    // label L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:32+12
    assume {:print "$at(139,10828,10840)"} true;
L14:

    // $t37 := string::length($t6) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:17+28
    assume {:print "$at(139,10813,10841)"} true;
    call $t37 := $1_string_length($t6);
    if ($abort_flag) {
        assume {:print "$at(139,10813,10841)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // $t38 := 512 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:49+14
    $t38 := 512;
    assume $IsValid'u64'($t38);

    // $t39 := <=($t37, $t38) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:46+2
    call $t39 := $Le($t37, $t38);

    // if ($t39) goto L16 else goto L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
    if ($t39) { goto L16; } else { goto L15; }

    // label L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
L16:

    // goto L17 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
    assume {:print "$at(139,10805,10896)"} true;
    goto L17;

    // label L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
L15:

    // $t40 := 19 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:85+13
    assume {:print "$at(139,10881,10894)"} true;
    $t40 := 19;
    assume $IsValid'u64'($t40);

    // $t41 := error::out_of_range($t40) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:65+34
    call $t41 := $1_error_out_of_range($t40);
    if ($abort_flag) {
        assume {:print "$at(139,10861,10895)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_abort($t41) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
    assume {:print "$at(139,10805,10896)"} true;
    assume {:print "$track_abort(27,0):", $t41} $t41 == $t41;

    // $t13 := move($t41) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
    $t13 := $t41;

    // goto L25 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:252:9+91
    goto L25;

    // label L17 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:253:17+22
    assume {:print "$at(139,10914,10936)"} true;
L17:

    // $t42 := pack fungible_asset::Metadata($t2, $t3, $t4, $t5, $t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:254:13+151
    assume {:print "$at(139,10950,11101)"} true;
    $t42 := $1_fungible_asset_Metadata($t2, $t3, $t4, $t5, $t6);

    // move_to<fungible_asset::Metadata>($t42, $t17) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:253:9+7
    assume {:print "$at(139,10906,10913)"} true;
    if ($ResourceExists($1_fungible_asset_Metadata_$memory, $t17->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_Metadata_$memory := $ResourceUpdate($1_fungible_asset_Metadata_$memory, $t17->$addr, $t42);
    }
    if ($abort_flag) {
        assume {:print "$at(139,10906,10913)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // $t43 := features::concurrent_fungible_assets_enabled() on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:219:9+46
    assume {:print "$at(139,9113,9159)"} true;
    call $t43 := $1_features_concurrent_fungible_assets_enabled();
    if ($abort_flag) {
        assume {:print "$at(139,9113,9159)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // if ($t43) goto L19 else goto L18 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:263:9+593
    assume {:print "$at(139,11122,11715)"} true;
    if ($t43) { goto L19; } else { goto L18; }

    // label L19 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:45+15
    assume {:print "$at(139,11213,11228)"} true;
L19:

    // $t44 := copy($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:45+15
    assume {:print "$at(139,11213,11228)"} true;
    $t44 := $t1;

    // $t45 := opaque begin: option::is_none<u128>($t44) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:29+32

    // assume WellFormed($t45) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:29+32
    assume $IsValid'bool'($t45);

    // assume Eq<bool>($t45, option::spec_is_none<u128>($t44)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:29+32
    assume $IsEqual'bool'($t45, $1_option_spec_is_none'u128'($t44));

    // $t45 := opaque end: option::is_none<u128>($t44) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:29+32

    // trace_local[unlimited]($t45) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:264:17+9
    assume {:print "$track_local(27,0,11):", $t45} $t45 == $t45;

    // if ($t45) goto L21 else goto L20 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:266:26+215
    assume {:print "$at(139,11319,11534)"} true;
    if ($t45) { goto L21; } else { goto L20; }

    // label L21 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    assume {:print "$at(139,11356,11400)"} true;
L21:

    // $t8 := opaque begin: aggregator_v2::create_unbounded_aggregator<u128>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    assume {:print "$at(139,11356,11400)"} true;

    // $t46 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    havoc $t46;

    // if ($t46) goto L27 else goto L26 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    if ($t46) { goto L27; } else { goto L26; }

    // label L27 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
L27:

    // trace_abort($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    assume {:print "$at(139,11356,11400)"} true;
    assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;

    // goto L25 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    goto L25;

    // label L26 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
L26:

    // assume WellFormed($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44
    assume {:print "$at(139,11356,11400)"} true;
    assume $IsValid'$1_aggregator_v2_Aggregator'u128''($t8);

    // $t8 := opaque end: aggregator_v2::create_unbounded_aggregator<u128>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:267:21+44

    // goto L22 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:266:26+215
    assume {:print "$at(139,11319,11534)"} true;
    goto L22;

    // label L20 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:70+19
    assume {:print "$at(139,11495,11514)"} true;
L20:

    // $t47 := borrow_local($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:70+19
    assume {:print "$at(139,11495,11514)"} true;
    $t47 := $Mutation($Local(1), EmptyVec(), $t1);

    // $t48 := opaque begin: option::extract<u128>($t47) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36

    // $t49 := read_ref($t47) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    $t49 := $Dereference($t47);

    // assume Identical($t50, option::spec_is_none<u128>($t47)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume ($t50 == $1_option_spec_is_none'u128'($Dereference($t47)));

    // if ($t50) goto L29 else goto L32 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    if ($t50) { goto L29; } else { goto L32; }

    // label L29 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
L29:

    // assume And(option::spec_is_none<u128>($t47), Eq(262145, $t13)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume {:print "$at(139,11479,11515)"} true;
    assume ($1_option_spec_is_none'u128'($Dereference($t47)) && $IsEqual'num'(262145, $t13));

    // trace_abort($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume {:print "$at(139,11479,11515)"} true;
    assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;

    // goto L25 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    goto L25;

    // label L28 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
L28:

    // $t47 := havoc[mut]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume {:print "$at(139,11479,11515)"} true;
    havoc $temp_0'$1_option_Option'u128'';
    $t47 := $UpdateMutation($t47, $temp_0'$1_option_Option'u128'');

    // assume And(WellFormed($t47), Le(Len<u128>(select option::Option.vec($t47)), 1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume ($IsValid'$1_option_Option'u128''($Dereference($t47)) && (LenVec($Dereference($t47)->$vec) <= 1));

    // assume WellFormed($t48) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume $IsValid'u128'($t48);

    // assume Eq<u128>($t48, option::spec_borrow<u128>($t49)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume $IsEqual'u128'($t48, $1_option_spec_borrow'u128'($t49));

    // assume option::spec_is_none<u128>($t47) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume $1_option_spec_is_none'u128'($Dereference($t47));

    // $t48 := opaque end: option::extract<u128>($t47) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36

    // pack_ref_deep($t47) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36

    // write_back[LocalRoot($t1)@]($t47) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    $t1 := $Dereference($t47);

    // trace_local[maximum_supply]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:54+36
    assume {:print "$track_local(27,0,1):", $t1} $t1 == $t1;

    // $t8 := opaque begin: aggregator_v2::create_aggregator<u128>($t48) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70

    // $t51 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
    havoc $t51;

    // if ($t51) goto L31 else goto L30 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
    if ($t51) { goto L31; } else { goto L30; }

    // label L31 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
L31:

    // trace_abort($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
    assume {:print "$at(139,11446,11516)"} true;
    assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;

    // goto L25 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
    goto L25;

    // label L30 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
L30:

    // assume WellFormed($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70
    assume {:print "$at(139,11446,11516)"} true;
    assume $IsValid'$1_aggregator_v2_Aggregator'u128''($t8);

    // $t8 := opaque end: aggregator_v2::create_aggregator<u128>($t48) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:269:21+70

    // label L22 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:265:21+22
    assume {:print "$at(139,11251,11273)"} true;
L22:

    // $t52 := pack fungible_asset::ConcurrentSupply($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:265:45+274
    assume {:print "$at(139,11275,11549)"} true;
    $t52 := $1_fungible_asset_ConcurrentSupply($t8);

    // move_to<fungible_asset::ConcurrentSupply>($t52, $t17) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:265:13+7
    if ($ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t17->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_ConcurrentSupply_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentSupply_$memory, $t17->$addr, $t52);
    }
    if ($abort_flag) {
        assume {:print "$at(139,11243,11250)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // goto L23 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:271:15+1
    assume {:print "$at(139,11550,11551)"} true;
    goto L23;

    // label L18 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:273:21+22
    assume {:print "$at(139,11589,11611)"} true;
L18:

    // $t53 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:274:26+1
    assume {:print "$at(139,11647,11648)"} true;
    $t53 := 0;
    assume $IsValid'u128'($t53);

    // $t54 := move($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:275:26+14
    assume {:print "$at(139,11675,11689)"} true;
    $t54 := $t1;

    // $t55 := pack fungible_asset::Supply($t53, $t54) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:273:45+90
    assume {:print "$at(139,11613,11703)"} true;
    $t55 := $1_fungible_asset_Supply($t53, $t54);

    // move_to<fungible_asset::Supply>($t55, $t17) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:273:13+7
    if ($ResourceExists($1_fungible_asset_Supply_$memory, $t17->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $t17->$addr, $t55);
    }
    if ($abort_flag) {
        assume {:print "$at(139,11581,11588)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // label L23 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:279:55+15
    assume {:print "$at(139,11772,11787)"} true;
L23:

    // $t56 := object::object_from_constructor_ref<fungible_asset::Metadata>($t0) on_abort goto L25 with $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:279:9+62
    assume {:print "$at(139,11726,11788)"} true;
    call $t56 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,11726,11788)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(27,0):", $t13} $t13 == $t13;
        goto L25;
    }

    // trace_return[0]($t56) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:279:9+62
    assume {:print "$track_return(27,0,0):", $t56} $t56 == $t56;

    // label L24 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:280:5+1
    assume {:print "$at(139,11793,11794)"} true;
L24:

    // return $t56 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:280:5+1
    assume {:print "$at(139,11793,11794)"} true;
    $ret0 := $t56;
    return;

    // label L25 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:280:5+1
L25:

    // abort($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:280:5+1
    assume {:print "$at(139,11793,11794)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

    // label L32 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L32:

    // drop($t47) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L28 at <internal>:1:1+10
    goto L28;

}

// fun fungible_asset::balance<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:580:5+639
procedure {:inline 1} $1_fungible_asset_balance'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: int)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: $1_fungible_asset_FungibleStore;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: bool;
    var $t19: $1_fungible_asset_ConcurrentFungibleBalance;
    var $t20: $1_aggregator_v2_Aggregator'u64';
    var $t21: bool;
    var $t22: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:580:5+1
    assume {:print "$at(139,23999,24000)"} true;
    assume {:print "$track_local(27,4,0):", $t0} $t0 == $t0;

    // $t7 := object::object_address<#0>($t0) on_abort goto L13 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:581:26+30
    assume {:print "$at(139,24126,24156)"} true;
    call $t7 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,24126,24156)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,4):", $t8} $t8 == $t8;
        goto L13;
    }

    // trace_local[store_addr]($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:581:13+10
    assume {:print "$track_local(27,4,4):", $t7} $t7 == $t7;

    // $t9 := exists<fungible_asset::FungibleStore>($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:553:9+6
    assume {:print "$at(139,23149,23155)"} true;
    $t9 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t7);

    // if ($t9) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:582:9+466
    assume {:print "$at(139,24166,24632)"} true;
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:583:55+6
    assume {:print "$at(139,24259,24265)"} true;
L1:

    // $t10 := object::object_address<#0>($t0) on_abort goto L13 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1126:26+29
    assume {:print "$at(139,46656,46685)"} true;
    call $t10 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,46656,46685)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,4):", $t8} $t8 == $t8;
        goto L13;
    }

    // trace_local[store_addr#212]($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1126:13+10
    assume {:print "$track_local(27,4,5):", $t10} $t10 == $t10;

    // $t11 := exists<fungible_asset::FungibleStore>($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:17+6
    assume {:print "$at(139,46703,46709)"} true;
    $t11 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t10);

    // if ($t11) goto L3 else goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
L3:

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    assume {:print "$at(139,46695,46782)"} true;
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:69+25
L2:

    // $t12 := 23 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:69+25
    assume {:print "$at(139,46755,46780)"} true;
    $t12 := 23;
    assume $IsValid'u64'($t12);

    // $t13 := error::not_found($t12) on_abort goto L13 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:52+43
    call $t13 := $1_error_not_found($t12);
    if ($abort_flag) {
        assume {:print "$at(139,46738,46781)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,4):", $t8} $t8 == $t8;
        goto L13;
    }

    // trace_abort($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    assume {:print "$at(139,46695,46782)"} true;
    assume {:print "$track_abort(27,4):", $t13} $t13 == $t13;

    // $t8 := move($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    $t8 := $t13;

    // goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    goto L13;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1128:38+10
    assume {:print "$at(139,46821,46831)"} true;
L4:

    // $t14 := get_global<fungible_asset::FungibleStore>($t10) on_abort goto L13 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1128:9+13
    assume {:print "$at(139,46792,46805)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t10);
    }
    if ($abort_flag) {
        assume {:print "$at(139,46792,46805)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,4):", $t8} $t8 == $t8;
        goto L13;
    }

    // $t15 := get_field<fungible_asset::FungibleStore>.balance($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:583:33+37
    assume {:print "$at(139,24237,24274)"} true;
    $t15 := $t14->$balance;

    // trace_local[store_balance]($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:583:17+13
    assume {:print "$track_local(27,4,6):", $t15} $t15 == $t15;

    // $t16 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:34+1
    assume {:print "$at(139,24309,24310)"} true;
    $t16 := 0;
    assume $IsValid'u64'($t16);

    // $t17 := ==($t15, $t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:31+2
    $t17 := $IsEqual'u64'($t15, $t16);

    // if ($t17) goto L6 else goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:17+75
    if ($t17) { goto L6; } else { goto L5; }

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:81+10
L6:

    // $t1 := exists<fungible_asset::ConcurrentFungibleBalance>($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:559:9+6
    assume {:print "$at(139,23404,23410)"} true;
    $t1 := $ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t7);

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:17+75
    assume {:print "$at(139,24292,24367)"} true;
    goto L7;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:17+75
L5:

    // $t18 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:17+75
    assume {:print "$at(139,24292,24367)"} true;
    $t18 := false;
    assume $IsValid'bool'($t18);

    // $t1 := $t18 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:17+75
    $t1 := $t18;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:17+75
L7:

    // if ($t1) goto L9 else goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:13+303
    assume {:print "$at(139,24288,24591)"} true;
    if ($t1) { goto L9; } else { goto L8; }

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:585:81+10
    assume {:print "$at(139,24451,24461)"} true;
L9:

    // $t19 := get_global<fungible_asset::ConcurrentFungibleBalance>($t7) on_abort goto L13 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:585:40+13
    assume {:print "$at(139,24410,24423)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t19 := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t7);
    }
    if ($abort_flag) {
        assume {:print "$at(139,24410,24423)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,4):", $t8} $t8 == $t8;
        goto L13;
    }

    // $t20 := get_field<fungible_asset::ConcurrentFungibleBalance>.balance($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:37+25
    assume {:print "$at(139,24500,24525)"} true;
    $t20 := $t19->$balance;

    // $t2 := opaque begin: aggregator_v2::read<u64>($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46

    // $t21 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
    havoc $t21;

    // if ($t21) goto L15 else goto L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
    if ($t21) { goto L15; } else { goto L14; }

    // label L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
L15:

    // trace_abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
    assume {:print "$at(139,24480,24526)"} true;
    assume {:print "$track_abort(27,4):", $t8} $t8 == $t8;

    // goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
    goto L13;

    // label L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
L14:

    // assume WellFormed($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46
    assume {:print "$at(139,24480,24526)"} true;
    assume $IsValid'u64'($t2);

    // $t2 := opaque end: aggregator_v2::read<u64>($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:586:17+46

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:13+303
    assume {:print "$at(139,24288,24591)"} true;
    goto L10;

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:588:17+13
    assume {:print "$at(139,24564,24577)"} true;
L8:

    // $t2 := $t15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:13+303
    assume {:print "$at(139,24288,24591)"} true;
    $t2 := $t15;

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:584:13+303
L10:

    // $t3 := $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:582:9+466
    assume {:print "$at(139,24166,24632)"} true;
    $t3 := $t2;

    // goto L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:582:9+466
    goto L11;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:591:13+1
    assume {:print "$at(139,24621,24622)"} true;
L0:

    // $t22 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:591:13+1
    assume {:print "$at(139,24621,24622)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t3 := $t22 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:582:9+466
    assume {:print "$at(139,24166,24632)"} true;
    $t3 := $t22;

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:582:9+466
L11:

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:582:9+466
    assume {:print "$at(139,24166,24632)"} true;
    assume {:print "$track_return(27,4,0):", $t3} $t3 == $t3;

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:593:5+1
    assume {:print "$at(139,24637,24638)"} true;
L12:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:593:5+1
    assume {:print "$at(139,24637,24638)"} true;
    $ret0 := $t3;
    return;

    // label L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:593:5+1
L13:

    // abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:593:5+1
    assume {:print "$at(139,24637,24638)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun fungible_asset::create_store<fungible_asset::Metadata> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:731:5+765
procedure {:inline 1} $1_fungible_asset_create_store'$1_fungible_asset_Metadata'(_$t0: $1_object_ConstructorRef, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: $signer;
    var $t3: $signer;
    var $t4: $signer;
    var $t5: int;
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: int;
    var $t8: bool;
    var $t9: $1_fungible_asset_FungibleStore;
    var $t10: bool;
    var $t11: bool;
    var $t12: $1_aggregator_v2_Aggregator'u64';
    var $t13: bool;
    var $t14: $1_fungible_asset_ConcurrentFungibleBalance;
    var $t15: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: $1_object_ConstructorRef;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:731:5+1
    assume {:print "$at(139,30619,30620)"} true;
    assume {:print "$track_local(27,9,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:731:5+1
    assume {:print "$track_local(27,9,1):", $t1} $t1 == $t1;

    // $t4 := object::generate_signer($t0) on_abort goto L6 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:735:26+40
    assume {:print "$at(139,30779,30819)"} true;
    call $t4 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(139,30779,30819)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_local[store_obj]($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:735:13+9
    assume {:print "$track_local(27,9,3):", $t4} $t4 == $t4;

    // $t6 := object::convert<#0, fungible_asset::Metadata>($t1) on_abort goto L6 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:737:23+25
    assume {:print "$at(139,30886,30911)"} true;
    call $t6 := $1_object_convert'$1_fungible_asset_Metadata_$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(139,30886,30911)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t7 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:738:22+1
    assume {:print "$at(139,30934,30935)"} true;
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // $t8 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:739:21+5
    assume {:print "$at(139,30957,30962)"} true;
    $t8 := false;
    assume $IsValid'bool'($t8);

    // $t9 := pack fungible_asset::FungibleStore($t6, $t7, $t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:736:28+125
    assume {:print "$at(139,30848,30973)"} true;
    $t9 := $1_fungible_asset_FungibleStore($t6, $t7, $t8);

    // move_to<fungible_asset::FungibleStore>($t9, $t4) on_abort goto L6 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:736:9+7
    if ($ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_FungibleStore_$memory := $ResourceUpdate($1_fungible_asset_FungibleStore_$memory, $t4->$addr, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(139,30829,30836)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // $t10 := fungible_asset::is_untransferable<#0>($t1) on_abort goto L6 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:742:13+27
    assume {:print "$at(139,30989,31016)"} true;
    call $t10 := $1_fungible_asset_is_untransferable'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(139,30989,31016)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // if ($t10) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:742:9+101
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:743:40+15
    assume {:print "$at(139,31059,31074)"} true;
L1:

    // object::set_untransferable($t0) on_abort goto L6 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:743:13+43
    assume {:print "$at(139,31032,31075)"} true;
    call $1_object_set_untransferable($t0);
    if ($abort_flag) {
        assume {:print "$at(139,31032,31075)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:227:9+58
    assume {:print "$at(139,9372,9430)"} true;
L0:

    // $t11 := features::default_to_concurrent_fungible_balance_enabled() on_abort goto L6 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:227:9+58
    assume {:print "$at(139,9372,9430)"} true;
    call $t11 := $1_features_default_to_concurrent_fungible_balance_enabled();
    if ($abort_flag) {
        assume {:print "$at(139,9372,9430)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // if ($t11) goto L3 else goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:746:9+203
    assume {:print "$at(139,31097,31300)"} true;
    if ($t11) { goto L3; } else { goto L2; }

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:747:21+9
    assume {:print "$at(139,31165,31174)"} true;
L3:

    // $t12 := opaque begin: aggregator_v2::create_unbounded_aggregator<u64>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
    assume {:print "$at(139,31229,31273)"} true;

    // $t13 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
    havoc $t13;

    // if ($t13) goto L8 else goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
    if ($t13) { goto L8; } else { goto L7; }

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
L8:

    // trace_abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
    assume {:print "$at(139,31229,31273)"} true;
    assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;

    // goto L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
    goto L6;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
L7:

    // assume WellFormed($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44
    assume {:print "$at(139,31229,31273)"} true;
    assume $IsValid'$1_aggregator_v2_Aggregator'u64''($t12);

    // $t12 := opaque end: aggregator_v2::create_unbounded_aggregator<u64>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:748:26+44

    // $t14 := pack fungible_asset::ConcurrentFungibleBalance($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:747:32+112
    assume {:print "$at(139,31176,31288)"} true;
    $t14 := $1_fungible_asset_ConcurrentFungibleBalance($t12);

    // move_to<fungible_asset::ConcurrentFungibleBalance>($t14, $t4) on_abort goto L6 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:747:13+7
    if ($ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t4->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_fungible_asset_ConcurrentFungibleBalance_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t4->$addr, $t14);
    }
    if ($abort_flag) {
        assume {:print "$at(139,31157,31164)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:749:15+1
    assume {:print "$at(139,31289,31290)"} true;
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:746:9+203
    assume {:print "$at(139,31097,31300)"} true;
L2:

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:752:60+15
    assume {:print "$at(139,31362,31377)"} true;
L4:

    // $t15 := object::object_from_constructor_ref<fungible_asset::FungibleStore>($t0) on_abort goto L6 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:752:9+67
    assume {:print "$at(139,31311,31378)"} true;
    call $t15 := $1_object_object_from_constructor_ref'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,31311,31378)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,9):", $t5} $t5 == $t5;
        goto L6;
    }

    // trace_return[0]($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:752:9+67
    assume {:print "$track_return(27,9,0):", $t15} $t15 == $t15;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:753:5+1
    assume {:print "$at(139,31383,31384)"} true;
L5:

    // return $t15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:753:5+1
    assume {:print "$at(139,31383,31384)"} true;
    $ret0 := $t15;
    return;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:753:5+1
L6:

    // abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:753:5+1
    assume {:print "$at(139,31383,31384)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::deposit_dispatch_function<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:634:5+458
procedure {:inline 1} $1_fungible_asset_deposit_dispatch_function'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_option_Option'$1_function_info_FunctionInfo')
{
    // declare local variables
    var $t1: $1_option_Option'$1_function_info_FunctionInfo';
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: $1_fungible_asset_FungibleStore;
    var $t10: $1_object_Object'$1_fungible_asset_Metadata';
    var $t11: int;
    var $t12: bool;
    var $t13: $1_fungible_asset_DispatchFunctionStore;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:634:5+1
    assume {:print "$at(139,26470,26471)"} true;
    assume {:print "$track_local(27,13,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<#0>($t0) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1126:26+29
    assume {:print "$at(139,46656,46685)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,46656,46685)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,13):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[store_addr#217]($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1126:13+10
    assume {:print "$track_local(27,13,3):", $t4} $t4 == $t4;

    // $t6 := exists<fungible_asset::FungibleStore>($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:17+6
    assume {:print "$at(139,46703,46709)"} true;
    $t6 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4);

    // if ($t6) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    assume {:print "$at(139,46695,46782)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:69+25
L0:

    // $t7 := 23 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:69+25
    assume {:print "$at(139,46755,46780)"} true;
    $t7 := 23;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:52+43
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(139,46738,46781)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,13):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    assume {:print "$at(139,46695,46782)"} true;
    assume {:print "$track_abort(27,13):", $t8} $t8 == $t8;

    // $t5 := move($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    $t5 := $t8;

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    goto L7;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1128:38+10
    assume {:print "$at(139,46821,46831)"} true;
L2:

    // $t9 := get_global<fungible_asset::FungibleStore>($t4) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1128:9+13
    assume {:print "$at(139,46792,46805)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(139,46792,46805)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,13):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<fungible_asset::FungibleStore>.metadata($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:636:52+18
    assume {:print "$at(139,26708,26726)"} true;
    $t10 := $t9->$metadata;

    // $t11 := object::object_address<fungible_asset::Metadata>($t10) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:636:29+42
    call $t11 := $1_object_object_address'$1_fungible_asset_Metadata'($t10);
    if ($abort_flag) {
        assume {:print "$at(139,26685,26727)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,13):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:636:13+13
    assume {:print "$track_local(27,13,2):", $t11} $t11 == $t11;

    // $t12 := exists<fungible_asset::DispatchFunctionStore>($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:637:12+6
    assume {:print "$at(139,26740,26746)"} true;
    $t12 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t11);

    // if ($t12) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:637:9+185
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:638:50+13
    assume {:print "$at(139,26837,26850)"} true;
L4:

    // $t13 := get_global<fungible_asset::DispatchFunctionStore>($t11) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:638:13+13
    assume {:print "$at(139,26800,26813)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t11);
    }
    if ($abort_flag) {
        assume {:print "$at(139,26800,26813)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,13):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t1 := get_field<fungible_asset::DispatchFunctionStore>.deposit_function($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:638:13+68
    $t1 := $t13->$deposit_function;

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:637:9+185
    assume {:print "$at(139,26737,26922)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:640:13+14
    assume {:print "$at(139,26898,26912)"} true;
L3:

    // $t1 := opaque begin: option::none<function_info::FunctionInfo>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:640:13+14
    assume {:print "$at(139,26898,26912)"} true;

    // assume And(WellFormed($t1), Le(Len<function_info::FunctionInfo>(select option::Option.vec($t1)), 1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:640:13+14
    assume ($IsValid'$1_option_Option'$1_function_info_FunctionInfo''($t1) && (LenVec($t1->$vec) <= 1));

    // assume Eq<option::Option<function_info::FunctionInfo>>($t1, option::spec_none<function_info::FunctionInfo>()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:640:13+14
    assume $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($t1, $1_option_spec_none'$1_function_info_FunctionInfo'());

    // $t1 := opaque end: option::none<function_info::FunctionInfo>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:640:13+14

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:637:9+185
    assume {:print "$at(139,26737,26922)"} true;
L5:

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:637:9+185
    assume {:print "$at(139,26737,26922)"} true;
    assume {:print "$track_return(27,13,0):", $t1} $t1 == $t1;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:642:5+1
    assume {:print "$at(139,26927,26928)"} true;
L6:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:642:5+1
    assume {:print "$at(139,26927,26928)"} true;
    $ret0 := $t1;
    return;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:642:5+1
L7:

    // abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:642:5+1
    assume {:print "$at(139,26927,26928)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::deposit_internal [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1012:5+886
procedure {:inline 1} $1_fungible_asset_deposit_internal(_$t0: int, _$t1: $1_fungible_asset_FungibleAsset) returns ()
{
    // declare local variables
    var $t2: bool;
    var $t3: int;
    var $t4: $1_object_Object'$1_fungible_asset_Metadata';
    var $t5: $Mutation ($1_fungible_asset_FungibleStore);
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: $Mutation ($1_fungible_asset_FungibleStore);
    var $t13: $1_object_Object'$1_fungible_asset_Metadata';
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: bool;
    var $t19: int;
    var $t20: int;
    var $t21: bool;
    var $t22: bool;
    var $t23: $Mutation ($1_fungible_asset_ConcurrentFungibleBalance);
    var $t24: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t25: int;
    var $t26: int;
    var $t27: $Mutation (int);
    var $t28: $1_fungible_asset_Deposit;
    var $t0: int;
    var $t1: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store_addr]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1012:5+1
    assume {:print "$at(139,41736,41737)"} true;
    assume {:print "$track_local(27,14,0):", $t0} $t0 == $t0;

    // trace_local[fa]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1012:5+1
    assume {:print "$track_local(27,14,1):", $t1} $t1 == $t1;

    // ($t6, $t7) := unpack fungible_asset::FungibleAsset($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1013:13+34
    assume {:print "$at(139,41876,41910)"} true;
    $t6 := $t1->$metadata;
    $t7 := $t1->$amount;

    // trace_local[amount]($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1013:39+6
    assume {:print "$track_local(27,14,3):", $t7} $t7 == $t7;

    // trace_local[metadata]($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1013:29+8
    assume {:print "$track_local(27,14,4):", $t6} $t6 == $t6;

    // $t8 := exists<fungible_asset::FungibleStore>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1014:17+6
    assume {:print "$at(139,41933,41939)"} true;
    $t8 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0);

    // if ($t8) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1014:9+87
    if ($t8) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1014:9+87
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1014:9+87
    assume {:print "$at(139,41925,42012)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1014:69+25
L0:

    // $t9 := 23 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1014:69+25
    assume {:print "$at(139,41985,42010)"} true;
    $t9 := 23;
    assume $IsValid'u64'($t9);

    // $t10 := error::not_found($t9) on_abort goto L15 with $t11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1014:52+43
    call $t10 := $1_error_not_found($t9);
    if ($abort_flag) {
        assume {:print "$at(139,41968,42011)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(27,14):", $t11} $t11 == $t11;
        goto L15;
    }

    // trace_abort($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1014:9+87
    assume {:print "$at(139,41925,42012)"} true;
    assume {:print "$track_abort(27,14):", $t10} $t10 == $t10;

    // $t11 := move($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1014:9+87
    $t11 := $t10;

    // goto L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1014:9+87
    goto L15;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1015:54+10
    assume {:print "$at(139,42067,42077)"} true;
L2:

    // $t12 := borrow_global<fungible_asset::FungibleStore>($t0) on_abort goto L15 with $t11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1015:21+17
    assume {:print "$at(139,42034,42051)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(139,42034,42051)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(27,14):", $t11} $t11 == $t11;
        goto L15;
    }

    // trace_local[store]($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1015:13+5
    $temp_0'$1_fungible_asset_FungibleStore' := $Dereference($t12);
    assume {:print "$track_local(27,14,5):", $temp_0'$1_fungible_asset_FungibleStore'} $temp_0'$1_fungible_asset_FungibleStore' == $temp_0'$1_fungible_asset_FungibleStore';

    // $t13 := get_field<fungible_asset::FungibleStore>.metadata($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1016:29+14
    assume {:print "$at(139,42108,42122)"} true;
    $t13 := $Dereference($t12)->$metadata;

    // $t14 := ==($t6, $t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1016:26+2
    $t14 := $IsEqual'$1_object_Object'$1_fungible_asset_Metadata''($t6, $t13);

    // if ($t14) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1016:9+96
    if ($t14) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1016:9+96
L4:

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1016:9+96
    assume {:print "$at(139,42088,42184)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1016:9+96
L3:

    // drop($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1016:9+96
    assume {:print "$at(139,42088,42184)"} true;

    // $t15 := 11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1016:69+34
    $t15 := 11;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L15 with $t11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1016:45+59
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(139,42124,42183)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(27,14):", $t11} $t11 == $t11;
        goto L15;
    }

    // trace_abort($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1016:9+96
    assume {:print "$at(139,42088,42184)"} true;
    assume {:print "$track_abort(27,14):", $t16} $t16 == $t16;

    // $t11 := move($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1016:9+96
    $t11 := $t16;

    // goto L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1016:9+96
    goto L15;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1018:13+6
    assume {:print "$at(139,42199,42205)"} true;
L5:

    // $t17 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1018:23+1
    assume {:print "$at(139,42209,42210)"} true;
    $t17 := 0;
    assume $IsValid'u64'($t17);

    // $t18 := ==($t7, $t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1018:20+2
    $t18 := $IsEqual'u64'($t7, $t17);

    // if ($t18) goto L7 else goto L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1018:9+23
    if ($t18) { goto L7; } else { goto L6; }

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1018:26+6
L7:

    // drop($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1018:26+6
    assume {:print "$at(139,42212,42218)"} true;

    // goto L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1018:26+6
    goto L14;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1020:13+5
    assume {:print "$at(139,42233,42238)"} true;
L6:

    // $t19 := get_field<fungible_asset::FungibleStore>.balance($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1020:13+13
    assume {:print "$at(139,42233,42246)"} true;
    $t19 := $Dereference($t12)->$balance;

    // $t20 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1020:30+1
    $t20 := 0;
    assume $IsValid'u64'($t20);

    // $t21 := ==($t19, $t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1020:27+2
    $t21 := $IsEqual'u64'($t19, $t20);

    // if ($t21) goto L9 else goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1020:13+75
    if ($t21) { goto L9; } else { goto L8; }

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1020:77+10
L9:

    // $t2 := exists<fungible_asset::ConcurrentFungibleBalance>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:559:9+6
    assume {:print "$at(139,23404,23410)"} true;
    $t2 := $ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0);

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1020:13+75
    assume {:print "$at(139,42233,42308)"} true;
    goto L10;

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1020:13+75
L8:

    // $t22 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1020:13+75
    assume {:print "$at(139,42233,42308)"} true;
    $t22 := false;
    assume $IsValid'bool'($t22);

    // $t2 := $t22 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1020:13+75
    $t2 := $t22;

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1020:13+75
L10:

    // if ($t2) goto L12 else goto L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1020:9+325
    assume {:print "$at(139,42229,42554)"} true;
    if ($t2) { goto L12; } else { goto L11; }

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1021:13+79
    assume {:print "$at(139,42324,42403)"} true;
L12:

    // drop($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1021:13+79
    assume {:print "$at(139,42324,42403)"} true;

    // $t23 := borrow_global<fungible_asset::ConcurrentFungibleBalance>($t0) on_abort goto L15 with $t11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1021:36+17
    if (!$ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t23 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(139,42347,42364)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(27,14):", $t11} $t11 == $t11;
        goto L15;
    }

    // $t24 := borrow_field<fungible_asset::ConcurrentFungibleBalance>.balance($t23) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1022:32+29
    assume {:print "$at(139,42436,42465)"} true;
    $t24 := $ChildMutation($t23, 0, $Dereference($t23)->$balance);

    // aggregator_v2::add<u64>($t24, $t7) on_abort goto L15 with $t11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1022:13+57
    call $t24 := $1_aggregator_v2_add'u64'($t24, $t7);
    if ($abort_flag) {
        assume {:print "$at(139,42417,42474)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(27,14):", $t11} $t11 == $t11;
        goto L15;
    }

    // write_back[Reference($t23).balance (aggregator_v2::Aggregator<u64>)]($t24) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1022:13+57
    $t23 := $UpdateMutation($t23, $Update'$1_fungible_asset_ConcurrentFungibleBalance'_balance($Dereference($t23), $Dereference($t24)));

    // write_back[fungible_asset::ConcurrentFungibleBalance@]($t23) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1022:13+57
    $1_fungible_asset_ConcurrentFungibleBalance_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentFungibleBalance_$memory, $GlobalLocationAddress($t23),
        $Dereference($t23));

    // goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1022:70+1
    goto L13;

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:29+5
    assume {:print "$at(139,42521,42526)"} true;
L11:

    // $t25 := get_field<fungible_asset::FungibleStore>.balance($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:29+13
    assume {:print "$at(139,42521,42534)"} true;
    $t25 := $Dereference($t12)->$balance;

    // $t26 := +($t25, $t7) on_abort goto L15 with $t11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:43+1
    call $t26 := $AddU64($t25, $t7);
    if ($abort_flag) {
        assume {:print "$at(139,42535,42536)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(27,14):", $t11} $t11 == $t11;
        goto L15;
    }

    // $t27 := borrow_field<fungible_asset::FungibleStore>.balance($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:13+13
    $t27 := $ChildMutation($t12, 1, $Dereference($t12)->$balance);

    // write_ref($t27, $t26) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:13+38
    $t27 := $UpdateMutation($t27, $t26);

    // write_back[Reference($t12).balance (u64)]($t27) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:13+38
    $t12 := $UpdateMutation($t12, $Update'$1_fungible_asset_FungibleStore'_balance($Dereference($t12), $Dereference($t27)));

    // write_back[fungible_asset::FungibleStore@]($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1024:13+38
    $1_fungible_asset_FungibleStore_$memory := $ResourceUpdate($1_fungible_asset_FungibleStore_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // label L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1027:38+10
    assume {:print "$at(139,42594,42604)"} true;
L13:

    // $t28 := pack fungible_asset::Deposit($t0, $t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1027:21+37
    assume {:print "$at(139,42577,42614)"} true;
    $t28 := $1_fungible_asset_Deposit($t0, $t7);

    // opaque begin: event::emit<fungible_asset::Deposit>($t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1027:9+50

    // opaque end: event::emit<fungible_asset::Deposit>($t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1027:9+50

    // label L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1028:5+1
    assume {:print "$at(139,42621,42622)"} true;
L14:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1028:5+1
    assume {:print "$at(139,42621,42622)"} true;
    return;

    // label L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1028:5+1
L15:

    // abort($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1028:5+1
    assume {:print "$at(139,42621,42622)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun fungible_asset::deposit_sanity_check<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:807:5+474
procedure {:inline 1} $1_fungible_asset_deposit_sanity_check'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore', _$t1: bool) returns ()
{
    // declare local variables
    var $t2: bool;
    var $t3: $1_fungible_asset_FungibleStore;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: $1_fungible_asset_FungibleStore;
    var $t11: bool;
    var $t12: bool;
    var $t13: $1_object_Object'$1_fungible_asset_Metadata';
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: bool;
    var $t19: int;
    var $t20: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t1: bool;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:807:5+1
    assume {:print "$at(139,33806,33807)"} true;
    assume {:print "$track_local(27,15,0):", $t0} $t0 == $t0;

    // trace_local[abort_on_dispatch]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:807:5+1
    assume {:print "$track_local(27,15,1):", $t1} $t1 == $t1;

    // $t5 := object::object_address<#0>($t0) on_abort goto L13 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1126:26+29
    assume {:print "$at(139,46656,46685)"} true;
    call $t5 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,46656,46685)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(27,15):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_local[store_addr#220]($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1126:13+10
    assume {:print "$track_local(27,15,4):", $t5} $t5 == $t5;

    // $t7 := exists<fungible_asset::FungibleStore>($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:17+6
    assume {:print "$at(139,46703,46709)"} true;
    $t7 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t5);

    // if ($t7) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    assume {:print "$at(139,46695,46782)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:69+25
L0:

    // $t8 := 23 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:69+25
    assume {:print "$at(139,46755,46780)"} true;
    $t8 := 23;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L13 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:52+43
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(139,46738,46781)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(27,15):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_abort($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    assume {:print "$at(139,46695,46782)"} true;
    assume {:print "$track_abort(27,15):", $t9} $t9 == $t9;

    // $t6 := move($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    $t6 := $t9;

    // goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    goto L13;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1128:38+10
    assume {:print "$at(139,46821,46831)"} true;
L2:

    // $t10 := get_global<fungible_asset::FungibleStore>($t5) on_abort goto L13 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1128:9+13
    assume {:print "$at(139,46792,46805)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t5);
    }
    if ($abort_flag) {
        assume {:print "$at(139,46792,46805)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(27,15):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_local[fa_store]($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:811:13+8
    assume {:print "$at(139,33971,33979)"} true;
    assume {:print "$track_local(27,15,3):", $t10} $t10 == $t10;

    // $t11 := !($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+1
    assume {:print "$at(139,34042,34043)"} true;
    call $t11 := $Not($t1);

    // if ($t11) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+71
    if ($t11) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+71
L4:

    // $t12 := true at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+71
    assume {:print "$at(139,34042,34113)"} true;
    $t12 := true;
    assume $IsValid'bool'($t12);

    // $t2 := $t12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+71
    $t2 := $t12;

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+71
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:66+8
L3:

    // $t13 := get_field<fungible_asset::FungibleStore>.metadata($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:66+17
    assume {:print "$at(139,34095,34112)"} true;
    $t13 := $t10->$metadata;

    // $t14 := fungible_asset::has_deposit_dispatch_function($t13) on_abort goto L13 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:36+48
    call $t14 := $1_fungible_asset_has_deposit_dispatch_function($t13);
    if ($abort_flag) {
        assume {:print "$at(139,34065,34113)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(27,15):", $t6} $t6 == $t6;
        goto L13;
    }

    // $t2 := !($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:35+1
    call $t2 := $Not($t14);

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:813:13+71
L5:

    // if ($t2) goto L7 else goto L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
    assume {:print "$at(139,34021,34194)"} true;
    if ($t2) { goto L7; } else { goto L6; }

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
L7:

    // goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
    assume {:print "$at(139,34021,34194)"} true;
    goto L8;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
L6:

    // $t15 := 28 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:814:37+32
    assume {:print "$at(139,34151,34183)"} true;
    $t15 := 28;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L13 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:814:13+57
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(139,34127,34184)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(27,15):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_abort($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
    assume {:print "$at(139,34021,34194)"} true;
    assume {:print "$track_abort(27,15):", $t16} $t16 == $t16;

    // $t6 := move($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
    $t6 := $t16;

    // goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:812:9+173
    goto L13;

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:18+8
    assume {:print "$at(139,34213,34221)"} true;
L8:

    // $t17 := get_field<fungible_asset::FungibleStore>.frozen($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:18+15
    assume {:print "$at(139,34213,34228)"} true;
    $t17 := $t10->$frozen;

    // $t18 := !($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:17+1
    call $t18 := $Not($t17);

    // if ($t18) goto L10 else goto L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:9+69
    if ($t18) { goto L10; } else { goto L9; }

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:9+69
L10:

    // goto L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:9+69
    assume {:print "$at(139,34204,34273)"} true;
    goto L11;

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:60+16
L9:

    // $t19 := 3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:60+16
    assume {:print "$at(139,34255,34271)"} true;
    $t19 := 3;
    assume $IsValid'u64'($t19);

    // $t20 := error::permission_denied($t19) on_abort goto L13 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:35+42
    call $t20 := $1_error_permission_denied($t19);
    if ($abort_flag) {
        assume {:print "$at(139,34230,34272)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(27,15):", $t6} $t6 == $t6;
        goto L13;
    }

    // trace_abort($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:9+69
    assume {:print "$at(139,34204,34273)"} true;
    assume {:print "$track_abort(27,15):", $t20} $t20 == $t20;

    // $t6 := move($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:9+69
    $t6 := $t20;

    // goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:9+69
    goto L13;

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:816:78+1
L11:

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:817:5+1
    assume {:print "$at(139,34279,34280)"} true;
L12:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:817:5+1
    assume {:print "$at(139,34279,34280)"} true;
    return;

    // label L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:817:5+1
L13:

    // abort($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:817:5+1
    assume {:print "$at(139,34279,34280)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun fungible_asset::generate_burn_ref [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:452:5+195
procedure {:inline 1} $1_fungible_asset_generate_burn_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_fungible_asset_BurnRef)
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_fungible_asset_BurnRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_fungible_asset_BurnRef': $1_fungible_asset_BurnRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:452:5+1
    assume {:print "$at(139,18874,18875)"} true;
    assume {:print "$track_local(27,22,0):", $t0} $t0 == $t0;

    // $t1 := object::object_from_constructor_ref<fungible_asset::Metadata>($t0) on_abort goto L2 with $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:453:24+62
    assume {:print "$at(139,18971,19033)"} true;
    call $t1 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,18971,19033)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(27,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack fungible_asset::BurnRef($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:454:9+20
    assume {:print "$at(139,19043,19063)"} true;
    $t3 := $1_fungible_asset_BurnRef($t1);

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:454:9+20
    assume {:print "$track_return(27,22,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:455:5+1
    assume {:print "$at(139,19068,19069)"} true;
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:455:5+1
    assume {:print "$at(139,19068,19069)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:455:5+1
L2:

    // abort($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:455:5+1
    assume {:print "$at(139,19068,19069)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::generate_mint_ref [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:445:5+195
procedure {:inline 1} $1_fungible_asset_generate_mint_ref(_$t0: $1_object_ConstructorRef) returns ($ret0: $1_fungible_asset_MintRef)
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: $1_fungible_asset_MintRef;
    var $t0: $1_object_ConstructorRef;
    var $temp_0'$1_fungible_asset_MintRef': $1_fungible_asset_MintRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:445:5+1
    assume {:print "$at(139,18456,18457)"} true;
    assume {:print "$track_local(27,23,0):", $t0} $t0 == $t0;

    // $t1 := object::object_from_constructor_ref<fungible_asset::Metadata>($t0) on_abort goto L2 with $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:446:24+62
    assume {:print "$at(139,18553,18615)"} true;
    call $t1 := $1_object_object_from_constructor_ref'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,18553,18615)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(27,23):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack fungible_asset::MintRef($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:447:9+20
    assume {:print "$at(139,18625,18645)"} true;
    $t3 := $1_fungible_asset_MintRef($t1);

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:447:9+20
    assume {:print "$track_return(27,23,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:448:5+1
    assume {:print "$at(139,18650,18651)"} true;
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:448:5+1
    assume {:print "$at(139,18650,18651)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:448:5+1
L2:

    // abort($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:448:5+1
    assume {:print "$at(139,18650,18651)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::has_deposit_dispatch_function [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:644:5+462
procedure {:inline 1} $1_fungible_asset_has_deposit_dispatch_function(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_fungible_asset_DispatchFunctionStore;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:644:5+1
    assume {:print "$at(139,26934,26935)"} true;
    assume {:print "$track_local(27,26,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<fungible_asset::Metadata>($t0) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:645:29+33
    assume {:print "$at(139,27063,27096)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,27063,27096)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,26):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:645:13+13
    assume {:print "$track_local(27,26,3):", $t4} $t4 == $t4;

    // $t6 := 0xa at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:29+21
    assume {:print "$at(139,27174,27195)"} true;
    $t6 := 10;
    assume $IsValid'address'($t6);

    // $t7 := !=($t4, $t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:26+2
    $t7 := !$IsEqual'address'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:12+86
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:84+13
L1:

    // $t1 := exists<fungible_asset::DispatchFunctionStore>($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:54+6
    assume {:print "$at(139,27199,27205)"} true;
    $t1 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4);

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:12+86
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:12+86
L0:

    // $t8 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:12+86
    assume {:print "$at(139,27157,27243)"} true;
    $t8 := false;
    assume $IsValid'bool'($t8);

    // $t1 := $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:12+86
    $t1 := $t8;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:12+86
L2:

    // if ($t1) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:9+236
    assume {:print "$at(139,27154,27390)"} true;
    if ($t1) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:67+13
    assume {:print "$at(139,27313,27326)"} true;
L4:

    // $t9 := get_global<fungible_asset::DispatchFunctionStore>($t4) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:30+13
    assume {:print "$at(139,27276,27289)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(139,27276,27289)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,26):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<fungible_asset::DispatchFunctionStore>.deposit_function($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:29+69
    $t10 := $t9->$deposit_function;

    // $t2 := opaque begin: option::is_some<function_info::FunctionInfo>($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:13+86

    // assume WellFormed($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:13+86
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<function_info::FunctionInfo>($t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:13+86
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t10));

    // $t2 := opaque end: option::is_some<function_info::FunctionInfo>($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:648:13+86

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:9+236
    assume {:print "$at(139,27154,27390)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:650:13+5
    assume {:print "$at(139,27375,27380)"} true;
L3:

    // $t11 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:650:13+5
    assume {:print "$at(139,27375,27380)"} true;
    $t11 := false;
    assume $IsValid'bool'($t11);

    // $t2 := $t11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:9+236
    assume {:print "$at(139,27154,27390)"} true;
    $t2 := $t11;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:9+236
L5:

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:647:9+236
    assume {:print "$at(139,27154,27390)"} true;
    assume {:print "$track_return(27,26,0):", $t2} $t2 == $t2;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:652:5+1
    assume {:print "$at(139,27395,27396)"} true;
L6:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:652:5+1
    assume {:print "$at(139,27395,27396)"} true;
    $ret0 := $t2;
    return;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:652:5+1
L7:

    // abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:652:5+1
    assume {:print "$at(139,27395,27396)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::has_withdraw_dispatch_function [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:664:5+465
procedure {:inline 1} $1_fungible_asset_has_withdraw_dispatch_function(_$t0: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: $1_fungible_asset_DispatchFunctionStore;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: bool;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:664:5+1
    assume {:print "$at(139,27868,27869)"} true;
    assume {:print "$track_local(27,27,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<fungible_asset::Metadata>($t0) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:665:29+33
    assume {:print "$at(139,27998,28031)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,27998,28031)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,27):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:665:13+13
    assume {:print "$track_local(27,27,3):", $t4} $t4 == $t4;

    // $t6 := 0xa at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:30+21
    assume {:print "$at(139,28110,28131)"} true;
    $t6 := 10;
    assume $IsValid'address'($t6);

    // $t7 := !=($t4, $t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:27+2
    $t7 := !$IsEqual'address'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:13+86
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:85+13
L1:

    // $t1 := exists<fungible_asset::DispatchFunctionStore>($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:55+6
    assume {:print "$at(139,28135,28141)"} true;
    $t1 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4);

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:13+86
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:13+86
L0:

    // $t8 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:13+86
    assume {:print "$at(139,28093,28179)"} true;
    $t8 := false;
    assume $IsValid'bool'($t8);

    // $t1 := $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:13+86
    $t1 := $t8;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:13+86
L2:

    // if ($t1) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:9+238
    assume {:print "$at(139,28089,28327)"} true;
    if ($t1) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:67+13
    assume {:print "$at(139,28249,28262)"} true;
L4:

    // $t9 := get_global<fungible_asset::DispatchFunctionStore>($t4) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:30+13
    assume {:print "$at(139,28212,28225)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(139,28212,28225)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,27):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<fungible_asset::DispatchFunctionStore>.withdraw_function($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:29+70
    $t10 := $t9->$withdraw_function;

    // $t2 := opaque begin: option::is_some<function_info::FunctionInfo>($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:13+87

    // assume WellFormed($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:13+87
    assume $IsValid'bool'($t2);

    // assume Eq<bool>($t2, option::spec_is_some<function_info::FunctionInfo>($t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:13+87
    assume $IsEqual'bool'($t2, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t10));

    // $t2 := opaque end: option::is_some<function_info::FunctionInfo>($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:668:13+87

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:9+238
    assume {:print "$at(139,28089,28327)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:670:13+5
    assume {:print "$at(139,28312,28317)"} true;
L3:

    // $t11 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:670:13+5
    assume {:print "$at(139,28312,28317)"} true;
    $t11 := false;
    assume $IsValid'bool'($t11);

    // $t2 := $t11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:9+238
    assume {:print "$at(139,28089,28327)"} true;
    $t2 := $t11;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:9+238
L5:

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:667:9+238
    assume {:print "$at(139,28089,28327)"} true;
    assume {:print "$track_return(27,27,0):", $t2} $t2 == $t2;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:672:5+1
    assume {:print "$at(139,28332,28333)"} true;
L6:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:672:5+1
    assume {:print "$at(139,28332,28333)"} true;
    $ret0 := $t2;
    return;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:672:5+1
L7:

    // abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:672:5+1
    assume {:print "$at(139,28332,28333)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::increase_supply<fungible_asset::Metadata> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:5+1110
procedure {:inline 1} $1_fungible_asset_increase_supply'$1_fungible_asset_Metadata'(_$t0: $1_object_Object'$1_fungible_asset_Metadata', _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_fungible_asset_Supply);
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: bool;
    var $t9: $Mutation ($1_fungible_asset_ConcurrentSupply);
    var $t10: $Mutation ($1_aggregator_v2_Aggregator'u128');
    var $t11: int;
    var $t12: bool;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: $Mutation ($1_fungible_asset_Supply);
    var $t18: $1_option_Option'u128';
    var $t19: bool;
    var $t20: $Mutation ($1_option_Option'u128');
    var $t21: $Mutation (int);
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: bool;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: $Mutation (int);
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $t1: int;
    var $temp_0'$1_aggregator_v2_Aggregator'u128'': $1_aggregator_v2_Aggregator'u128';
    var $temp_0'$1_fungible_asset_Supply': $1_fungible_asset_Supply;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:5+1
    assume {:print "$at(139,43857,43858)"} true;
    assume {:print "$track_local(27,29,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1057:5+1
    assume {:print "$track_local(27,29,1):", $t1} $t1 == $t1;

    // $t4 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1058:23+1
    assume {:print "$at(139,43978,43979)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := ==($t1, $t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1058:20+2
    $t5 := $IsEqual'u64'($t1, $t4);

    // if ($t5) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1058:9+47
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1059:13+6
    assume {:print "$at(139,43995,44001)"} true;
L1:

    // goto L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1059:13+6
    assume {:print "$at(139,43995,44001)"} true;
    goto L16;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1061:55+8
    assume {:print "$at(139,44067,44075)"} true;
L0:

    // $t6 := object::object_address<#0>($t0) on_abort goto L17 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1061:32+32
    assume {:print "$at(139,44044,44076)"} true;
    call $t6 := $1_object_object_address'$1_fungible_asset_Metadata'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,44044,44076)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_local[metadata_address]($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1061:13+16
    assume {:print "$track_local(27,29,2):", $t6} $t6 == $t6;

    // $t8 := exists<fungible_asset::ConcurrentSupply>($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1063:13+6
    assume {:print "$at(139,44091,44097)"} true;
    $t8 := $ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6);

    // if ($t8) goto L3 else goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1063:9+874
    if ($t8) { goto L3; } else { goto L2; }

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1064:62+16
    assume {:print "$at(139,44198,44214)"} true;
L3:

    // $t9 := borrow_global<fungible_asset::ConcurrentSupply>($t6) on_abort goto L17 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1064:26+17
    assume {:print "$at(139,44162,44179)"} true;
    if (!$ResourceExists($1_fungible_asset_ConcurrentSupply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(139,44162,44179)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t10 := borrow_field<fungible_asset::ConcurrentSupply>.current($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:40+19
    assume {:print "$at(139,44277,44296)"} true;
    $t10 := $ChildMutation($t9, 0, $Dereference($t9)->$current);

    // $t11 := (u128)($t1) on_abort goto L17 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:61+16
    call $t11 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(139,44298,44314)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t12 := opaque begin: aggregator_v2::try_add<u128>($t10, $t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61

    // $t13 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61
    havoc $t13;

    // if ($t13) goto L20 else goto L18 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61
    if ($t13) { goto L20; } else { goto L18; }

    // label L19 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61
L19:

    // trace_abort($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61
    assume {:print "$at(139,44254,44315)"} true;
    assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;

    // goto L17 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61
    goto L17;

    // label L18 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61
L18:

    // $t10 := havoc[mut]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61
    assume {:print "$at(139,44254,44315)"} true;
    havoc $temp_0'$1_aggregator_v2_Aggregator'u128'';
    $t10 := $UpdateMutation($t10, $temp_0'$1_aggregator_v2_Aggregator'u128'');

    // assume WellFormed($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61
    assume $IsValid'$1_aggregator_v2_Aggregator'u128''($Dereference($t10));

    // assume WellFormed($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61
    assume $IsValid'bool'($t12);

    // $t12 := opaque end: aggregator_v2::try_add<u128>($t10, $t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61

    // write_back[Reference($t9).current (aggregator_v2::Aggregator<u128>)]($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61
    $t9 := $UpdateMutation($t9, $Update'$1_fungible_asset_ConcurrentSupply'_current($Dereference($t9), $Dereference($t10)));

    // write_back[fungible_asset::ConcurrentSupply@]($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1066:17+61
    $1_fungible_asset_ConcurrentSupply_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentSupply_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // if ($t12) goto L5 else goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1065:13+159
    assume {:print "$at(139,44229,44388)"} true;
    if ($t12) { goto L5; } else { goto L4; }

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1065:13+159
L5:

    // goto L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1065:13+159
    assume {:print "$at(139,44229,44388)"} true;
    goto L6;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1067:37+20
    assume {:print "$at(139,44353,44373)"} true;
L4:

    // $t14 := 5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1067:37+20
    assume {:print "$at(139,44353,44373)"} true;
    $t14 := 5;
    assume $IsValid'u64'($t14);

    // $t15 := error::out_of_range($t14) on_abort goto L17 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1067:17+41
    call $t15 := $1_error_out_of_range($t14);
    if ($abort_flag) {
        assume {:print "$at(139,44333,44374)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_abort($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1065:13+159
    assume {:print "$at(139,44229,44388)"} true;
    assume {:print "$track_abort(27,29):", $t15} $t15 == $t15;

    // $t7 := move($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1065:13+159
    $t7 := $t15;

    // goto L17 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1065:13+159
    goto L17;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1063:9+874
    assume {:print "$at(139,44087,44961)"} true;
L6:

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1063:9+874
    assume {:print "$at(139,44087,44961)"} true;
    goto L7;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1069:35+16
    assume {:print "$at(139,44424,44440)"} true;
L2:

    // $t16 := exists<fungible_asset::Supply>($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1069:20+6
    assume {:print "$at(139,44409,44415)"} true;
    $t16 := $ResourceExists($1_fungible_asset_Supply_$memory, $t6);

    // if ($t16) goto L9 else goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1069:16+556
    if ($t16) { goto L9; } else { goto L8; }

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1070:52+16
    assume {:print "$at(139,44496,44512)"} true;
L9:

    // $t17 := borrow_global<fungible_asset::Supply>($t6) on_abort goto L17 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1070:26+17
    assume {:print "$at(139,44470,44487)"} true;
    if (!$ResourceExists($1_fungible_asset_Supply_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_fungible_asset_Supply_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(139,44470,44487)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_local[supply#1]($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1070:17+6
    $temp_0'$1_fungible_asset_Supply' := $Dereference($t17);
    assume {:print "$track_local(27,29,3):", $temp_0'$1_fungible_asset_Supply'} $temp_0'$1_fungible_asset_Supply' == $temp_0'$1_fungible_asset_Supply';

    // $t18 := get_field<fungible_asset::Supply>.maximum($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1071:33+15
    assume {:print "$at(139,44547,44562)"} true;
    $t18 := $Dereference($t17)->$maximum;

    // $t19 := opaque begin: option::is_some<u128>($t18) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1071:17+32

    // assume WellFormed($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1071:17+32
    assume $IsValid'bool'($t19);

    // assume Eq<bool>($t19, option::spec_is_some<u128>($t18)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1071:17+32
    assume $IsEqual'bool'($t19, $1_option_spec_is_some'u128'($t18));

    // $t19 := opaque end: option::is_some<u128>($t18) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1071:17+32

    // if ($t19) goto L11 else goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1071:13+288
    if ($t19) { goto L11; } else { goto L10; }

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1072:52+6
    assume {:print "$at(139,44618,44624)"} true;
L11:

    // $t20 := borrow_field<fungible_asset::Supply>.maximum($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1072:47+19
    assume {:print "$at(139,44613,44632)"} true;
    $t20 := $ChildMutation($t17, 1, $Dereference($t17)->$maximum);

    // $t21 := option::borrow_mut<u128>($t20) on_abort goto L17 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1072:28+39
    call $t21,$t20 := $1_option_borrow_mut'u128'($t20);
    if ($abort_flag) {
        assume {:print "$at(139,44594,44633)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t22 := read_ref($t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1072:27+40
    $t22 := $Dereference($t21);

    // write_back[Reference($t17).maximum (option::Option<u128>)]($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1072:27+40
    $t17 := $UpdateMutation($t17, $Update'$1_fungible_asset_Supply'_maximum($Dereference($t17), $Dereference($t20)));

    // $t23 := get_field<fungible_asset::Supply>.current($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1074:27+14
    assume {:print "$at(139,44686,44700)"} true;
    $t23 := $Dereference($t17)->$current;

    // $t24 := -($t22, $t23) on_abort goto L17 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1074:25+1
    call $t24 := $Sub($t22, $t23);
    if ($abort_flag) {
        assume {:print "$at(139,44684,44685)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t25 := (u128)($t1) on_abort goto L17 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1074:45+16
    call $t25 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(139,44704,44720)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t26 := >=($t24, $t25) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1074:42+2
    call $t26 := $Ge($t24, $t25);

    // if ($t26) goto L13 else goto L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:17+150
    assume {:print "$at(139,44651,44801)"} true;
    if ($t26) { goto L13; } else { goto L12; }

    // label L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:17+150
L13:

    // goto L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:17+150
    assume {:print "$at(139,44651,44801)"} true;
    goto L14;

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:17+150
L12:

    // pack_ref_deep($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:17+150
    assume {:print "$at(139,44651,44801)"} true;

    // write_back[fungible_asset::Supply@]($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:17+150
    $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $GlobalLocationAddress($t17),
        $Dereference($t17));

    // drop($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:17+150

    // $t27 := 5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1075:41+20
    assume {:print "$at(139,44762,44782)"} true;
    $t27 := 5;
    assume $IsValid'u64'($t27);

    // $t28 := error::out_of_range($t27) on_abort goto L17 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1075:21+41
    call $t28 := $1_error_out_of_range($t27);
    if ($abort_flag) {
        assume {:print "$at(139,44742,44783)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_abort($t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:17+150
    assume {:print "$at(139,44651,44801)"} true;
    assume {:print "$track_abort(27,29):", $t28} $t28 == $t28;

    // $t7 := move($t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:17+150
    $t7 := $t28;

    // goto L17 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:17+150
    goto L17;

    // label L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:17+150
L14:

    // goto L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1073:17+150
    assume {:print "$at(139,44651,44801)"} true;
    goto L15;

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1071:13+288
    assume {:print "$at(139,44527,44815)"} true;
L10:

    // goto L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1071:13+288
    assume {:print "$at(139,44527,44815)"} true;
    goto L15;

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1080:36+17
    assume {:print "$at(139,44933,44950)"} true;
L8:

    // $t29 := 21 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1080:36+17
    assume {:print "$at(139,44933,44950)"} true;
    $t29 := 21;
    assume $IsValid'u64'($t29);

    // $t30 := error::not_found($t29) on_abort goto L17 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1080:19+35
    call $t30 := $1_error_not_found($t29);
    if ($abort_flag) {
        assume {:print "$at(139,44916,44951)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // trace_abort($t30) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1080:13+41
    assume {:print "$at(139,44910,44951)"} true;
    assume {:print "$track_abort(27,29):", $t30} $t30 == $t30;

    // $t7 := move($t30) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1080:13+41
    $t7 := $t30;

    // goto L17 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1080:13+41
    goto L17;

    // label L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1078:30+6
    assume {:print "$at(139,44846,44852)"} true;
L15:

    // $t31 := get_field<fungible_asset::Supply>.current($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1078:30+14
    assume {:print "$at(139,44846,44860)"} true;
    $t31 := $Dereference($t17)->$current;

    // $t32 := (u128)($t1) on_abort goto L17 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1078:47+16
    call $t32 := $CastU128($t1);
    if ($abort_flag) {
        assume {:print "$at(139,44863,44879)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t33 := +($t31, $t32) on_abort goto L17 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1078:45+1
    call $t33 := $AddU128($t31, $t32);
    if ($abort_flag) {
        assume {:print "$at(139,44861,44862)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,29):", $t7} $t7 == $t7;
        goto L17;
    }

    // $t34 := borrow_field<fungible_asset::Supply>.current($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1078:13+14
    $t34 := $ChildMutation($t17, 0, $Dereference($t17)->$current);

    // write_ref($t34, $t33) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1078:13+50
    $t34 := $UpdateMutation($t34, $t33);

    // write_back[Reference($t17).current (u128)]($t34) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1078:13+50
    $t17 := $UpdateMutation($t17, $Update'$1_fungible_asset_Supply'_current($Dereference($t17), $Dereference($t34)));

    // pack_ref_deep($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1078:13+50

    // write_back[fungible_asset::Supply@]($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1078:13+50
    $1_fungible_asset_Supply_$memory := $ResourceUpdate($1_fungible_asset_Supply_$memory, $GlobalLocationAddress($t17),
        $Dereference($t17));

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1063:9+874
    assume {:print "$at(139,44087,44961)"} true;
L7:

    // label L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1082:5+1
    assume {:print "$at(139,44966,44967)"} true;
L16:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1082:5+1
    assume {:print "$at(139,44966,44967)"} true;
    return;

    // label L17 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1082:5+1
L17:

    // abort($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1082:5+1
    assume {:print "$at(139,44966,44967)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

    // label L20 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L20:

    // drop($t9) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L19 at <internal>:1:1+10
    goto L19;

}

// fun fungible_asset::mint [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:826:5+177
procedure {:inline 1} $1_fungible_asset_mint(_$t0: $1_fungible_asset_MintRef, _$t1: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: $1_fungible_asset_FungibleAsset;
    var $t4: int;
    var $t0: $1_fungible_asset_MintRef;
    var $t1: int;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_MintRef': $1_fungible_asset_MintRef;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:826:5+1
    assume {:print "$at(139,34659,34660)"} true;
    assume {:print "$track_local(27,39,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:826:5+1
    assume {:print "$track_local(27,39,1):", $t1} $t1 == $t1;

    // $t2 := get_field<fungible_asset::MintRef>.metadata($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:827:24+12
    assume {:print "$at(139,34777,34789)"} true;
    $t2 := $t0->$metadata;

    // $t3 := fungible_asset::mint_internal($t2, $t1) on_abort goto L2 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:828:9+31
    assume {:print "$at(139,34799,34830)"} true;
    call $t3 := $1_fungible_asset_mint_internal($t2, $t1);
    if ($abort_flag) {
        assume {:print "$at(139,34799,34830)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(27,39):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:828:9+31
    assume {:print "$track_return(27,39,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:829:5+1
    assume {:print "$at(139,34835,34836)"} true;
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:829:5+1
    assume {:print "$at(139,34835,34836)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:829:5+1
L2:

    // abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:829:5+1
    assume {:print "$at(139,34835,34836)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun fungible_asset::mint_internal [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:832:5+271
procedure {:inline 1} $1_fungible_asset_mint_internal(_$t0: $1_object_Object'$1_fungible_asset_Metadata', _$t1: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t2: int;
    var $t3: $1_fungible_asset_FungibleAsset;
    var $t0: $1_object_Object'$1_fungible_asset_Metadata';
    var $t1: int;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[metadata]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:832:5+1
    assume {:print "$at(139,34897,34898)"} true;
    assume {:print "$track_local(27,40,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:832:5+1
    assume {:print "$track_local(27,40,1):", $t1} $t1 == $t1;

    // fungible_asset::increase_supply<fungible_asset::Metadata>($t0, $t1) on_abort goto L2 with $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:836:9+34
    assume {:print "$at(139,35052,35086)"} true;
    call $1_fungible_asset_increase_supply'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(139,35052,35086)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(27,40):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := pack fungible_asset::FungibleAsset($t0, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:837:9+66
    assume {:print "$at(139,35096,35162)"} true;
    $t3 := $1_fungible_asset_FungibleAsset($t0, $t1);

    // trace_return[0]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:837:9+66
    assume {:print "$track_return(27,40,0):", $t3} $t3 == $t3;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:841:5+1
    assume {:print "$at(139,35167,35168)"} true;
L1:

    // return $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:841:5+1
    assume {:print "$at(139,35167,35168)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:841:5+1
L2:

    // abort($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:841:5+1
    assume {:print "$at(139,35167,35168)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun fungible_asset::mint_ref_metadata [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:698:5+90
procedure {:inline 1} $1_fungible_asset_mint_ref_metadata(_$t0: $1_fungible_asset_MintRef) returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: $1_fungible_asset_MintRef;
    var $temp_0'$1_fungible_asset_MintRef': $1_fungible_asset_MintRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:698:5+1
    assume {:print "$at(139,29367,29368)"} true;
    assume {:print "$track_local(27,41,0):", $t0} $t0 == $t0;

    // $t1 := get_field<fungible_asset::MintRef>.metadata($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:699:9+12
    assume {:print "$at(139,29439,29451)"} true;
    $t1 := $t0->$metadata;

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:699:9+12
    assume {:print "$track_return(27,41,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:700:5+1
    assume {:print "$at(139,29456,29457)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:700:5+1
    assume {:print "$at(139,29456,29457)"} true;
    $ret0 := $t1;
    return;

}

// fun fungible_asset::mint_to<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:844:5+304
procedure {:inline 1} $1_fungible_asset_mint_to'$1_fungible_asset_FungibleStore'(_$t0: $1_fungible_asset_MintRef, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore', _$t2: int) returns ()
{
    // declare local variables
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: $1_fungible_asset_FungibleAsset;
    var $t0: $1_fungible_asset_MintRef;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t2: int;
    var $temp_0'$1_fungible_asset_MintRef': $1_fungible_asset_MintRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:844:5+1
    assume {:print "$at(139,35256,35257)"} true;
    assume {:print "$track_local(27,42,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:844:5+1
    assume {:print "$track_local(27,42,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:844:5+1
    assume {:print "$track_local(27,42,2):", $t2} $t2 == $t2;

    // $t3 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:846:37+5
    assume {:print "$at(139,35470,35475)"} true;
    $t3 := false;
    assume $IsValid'bool'($t3);

    // fungible_asset::deposit_sanity_check<#0>($t1, $t3) on_abort goto L2 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:846:9+34
    call $1_fungible_asset_deposit_sanity_check'$1_fungible_asset_FungibleStore'($t1, $t3);
    if ($abort_flag) {
        assume {:print "$at(139,35442,35476)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(27,42):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := object::object_address<#0>($t1) on_abort goto L2 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:847:26+30
    assume {:print "$at(139,35503,35533)"} true;
    call $t5 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(139,35503,35533)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(27,42):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t6 := fungible_asset::mint($t0, $t2) on_abort goto L2 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:847:58+17
    call $t6 := $1_fungible_asset_mint($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(139,35535,35552)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(27,42):", $t4} $t4 == $t4;
        goto L2;
    }

    // fungible_asset::deposit_internal($t5, $t6) on_abort goto L2 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:847:9+67
    call $1_fungible_asset_deposit_internal($t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(139,35486,35553)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(27,42):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:848:5+1
    assume {:print "$at(139,35559,35560)"} true;
L1:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:848:5+1
    assume {:print "$at(139,35559,35560)"} true;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:848:5+1
L2:

    // abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:848:5+1
    assume {:print "$at(139,35559,35560)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun fungible_asset::store_exists [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:547:5+88
procedure {:inline 1} $1_fungible_asset_store_exists(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:547:5+1
    assume {:print "$at(139,22923,22924)"} true;
    assume {:print "$track_local(27,53,0):", $t0} $t0 == $t0;

    // $t1 := exists<fungible_asset::FungibleStore>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:553:9+6
    assume {:print "$at(139,23149,23155)"} true;
    $t1 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0);

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:553:9+28
    assume {:print "$track_return(27,53,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:549:5+1
    assume {:print "$at(139,23010,23011)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:549:5+1
    assume {:print "$at(139,23010,23011)"} true;
    $ret0 := $t1;
    return;

}

// fun fungible_asset::store_metadata<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:569:5+147
procedure {:inline 1} $1_fungible_asset_store_metadata'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_object_Object'$1_fungible_asset_Metadata')
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: $1_fungible_asset_FungibleStore;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:569:5+1
    assume {:print "$at(139,23663,23664)"} true;
    assume {:print "$track_local(27,54,0):", $t0} $t0 == $t0;

    // $t2 := object::object_address<#0>($t0) on_abort goto L4 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1126:26+29
    assume {:print "$at(139,46656,46685)"} true;
    call $t2 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,46656,46685)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(27,54):", $t3} $t3 == $t3;
        goto L4;
    }

    // trace_local[store_addr#257]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1126:13+10
    assume {:print "$track_local(27,54,1):", $t2} $t2 == $t2;

    // $t4 := exists<fungible_asset::FungibleStore>($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:17+6
    assume {:print "$at(139,46703,46709)"} true;
    $t4 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t2);

    // if ($t4) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    assume {:print "$at(139,46695,46782)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:69+25
L0:

    // $t5 := 23 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:69+25
    assume {:print "$at(139,46755,46780)"} true;
    $t5 := 23;
    assume $IsValid'u64'($t5);

    // $t6 := error::not_found($t5) on_abort goto L4 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:52+43
    call $t6 := $1_error_not_found($t5);
    if ($abort_flag) {
        assume {:print "$at(139,46738,46781)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(27,54):", $t3} $t3 == $t3;
        goto L4;
    }

    // trace_abort($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    assume {:print "$at(139,46695,46782)"} true;
    assume {:print "$track_abort(27,54):", $t6} $t6 == $t6;

    // $t3 := move($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    $t3 := $t6;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1128:38+10
    assume {:print "$at(139,46821,46831)"} true;
L2:

    // $t7 := get_global<fungible_asset::FungibleStore>($t2) on_abort goto L4 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1128:9+13
    assume {:print "$at(139,46792,46805)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t2);
    }
    if ($abort_flag) {
        assume {:print "$at(139,46792,46805)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(27,54):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t8 := get_field<fungible_asset::FungibleStore>.metadata($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:570:9+38
    assume {:print "$at(139,23766,23804)"} true;
    $t8 := $t7->$metadata;

    // trace_return[0]($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:570:9+38
    assume {:print "$track_return(27,54,0):", $t8} $t8 == $t8;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:571:5+1
    assume {:print "$at(139,23809,23810)"} true;
L3:

    // return $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:571:5+1
    assume {:print "$at(139,23809,23810)"} true;
    $ret0 := $t8;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:571:5+1
L4:

    // abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:571:5+1
    assume {:print "$at(139,23809,23810)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun fungible_asset::withdraw_dispatch_function<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:654:5+460
procedure {:inline 1} $1_fungible_asset_withdraw_dispatch_function'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore') returns ($ret0: $1_option_Option'$1_function_info_FunctionInfo')
{
    // declare local variables
    var $t1: $1_option_Option'$1_function_info_FunctionInfo';
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: $1_fungible_asset_FungibleStore;
    var $t10: $1_object_Object'$1_fungible_asset_Metadata';
    var $t11: int;
    var $t12: bool;
    var $t13: $1_fungible_asset_DispatchFunctionStore;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:654:5+1
    assume {:print "$at(139,27402,27403)"} true;
    assume {:print "$track_local(27,63,0):", $t0} $t0 == $t0;

    // $t4 := object::object_address<#0>($t0) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1126:26+29
    assume {:print "$at(139,46656,46685)"} true;
    call $t4 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(139,46656,46685)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,63):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[store_addr#261]($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1126:13+10
    assume {:print "$track_local(27,63,3):", $t4} $t4 == $t4;

    // $t6 := exists<fungible_asset::FungibleStore>($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:17+6
    assume {:print "$at(139,46703,46709)"} true;
    $t6 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4);

    // if ($t6) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    assume {:print "$at(139,46695,46782)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:69+25
L0:

    // $t7 := 23 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:69+25
    assume {:print "$at(139,46755,46780)"} true;
    $t7 := 23;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:52+43
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(139,46738,46781)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,63):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    assume {:print "$at(139,46695,46782)"} true;
    assume {:print "$track_abort(27,63):", $t8} $t8 == $t8;

    // $t5 := move($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    $t5 := $t8;

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    goto L7;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1128:38+10
    assume {:print "$at(139,46821,46831)"} true;
L2:

    // $t9 := get_global<fungible_asset::FungibleStore>($t4) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1128:9+13
    assume {:print "$at(139,46792,46805)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(139,46792,46805)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,63):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t10 := get_field<fungible_asset::FungibleStore>.metadata($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:656:52+18
    assume {:print "$at(139,27641,27659)"} true;
    $t10 := $t9->$metadata;

    // $t11 := object::object_address<fungible_asset::Metadata>($t10) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:656:29+42
    call $t11 := $1_object_object_address'$1_fungible_asset_Metadata'($t10);
    if ($abort_flag) {
        assume {:print "$at(139,27618,27660)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,63):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[metadata_addr]($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:656:13+13
    assume {:print "$track_local(27,63,2):", $t11} $t11 == $t11;

    // $t12 := exists<fungible_asset::DispatchFunctionStore>($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:657:12+6
    assume {:print "$at(139,27673,27679)"} true;
    $t12 := $ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t11);

    // if ($t12) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:657:9+186
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:658:50+13
    assume {:print "$at(139,27770,27783)"} true;
L4:

    // $t13 := get_global<fungible_asset::DispatchFunctionStore>($t11) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:658:13+13
    assume {:print "$at(139,27733,27746)"} true;
    if (!$ResourceExists($1_fungible_asset_DispatchFunctionStore_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $t11);
    }
    if ($abort_flag) {
        assume {:print "$at(139,27733,27746)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(27,63):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t1 := get_field<fungible_asset::DispatchFunctionStore>.withdraw_function($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:658:13+69
    $t1 := $t13->$withdraw_function;

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:657:9+186
    assume {:print "$at(139,27670,27856)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:660:13+14
    assume {:print "$at(139,27832,27846)"} true;
L3:

    // $t1 := opaque begin: option::none<function_info::FunctionInfo>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:660:13+14
    assume {:print "$at(139,27832,27846)"} true;

    // assume And(WellFormed($t1), Le(Len<function_info::FunctionInfo>(select option::Option.vec($t1)), 1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:660:13+14
    assume ($IsValid'$1_option_Option'$1_function_info_FunctionInfo''($t1) && (LenVec($t1->$vec) <= 1));

    // assume Eq<option::Option<function_info::FunctionInfo>>($t1, option::spec_none<function_info::FunctionInfo>()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:660:13+14
    assume $IsEqual'$1_option_Option'$1_function_info_FunctionInfo''($t1, $1_option_spec_none'$1_function_info_FunctionInfo'());

    // $t1 := opaque end: option::none<function_info::FunctionInfo>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:660:13+14

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:657:9+186
    assume {:print "$at(139,27670,27856)"} true;
L5:

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:657:9+186
    assume {:print "$at(139,27670,27856)"} true;
    assume {:print "$track_return(27,63,0):", $t1} $t1 == $t1;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:662:5+1
    assume {:print "$at(139,27861,27862)"} true;
L6:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:662:5+1
    assume {:print "$at(139,27861,27862)"} true;
    $ret0 := $t1;
    return;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:662:5+1
L7:

    // abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:662:5+1
    assume {:print "$at(139,27861,27862)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun fungible_asset::withdraw_internal [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1031:5+1102
procedure {:inline 1} $1_fungible_asset_withdraw_internal(_$t0: int, _$t1: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t2: bool;
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: $Mutation ($1_fungible_asset_FungibleStore);
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_fungible_asset_FungibleStore);
    var $t10: $1_object_Object'$1_fungible_asset_Metadata';
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: bool;
    var $t17: $Mutation ($1_fungible_asset_ConcurrentFungibleBalance);
    var $t18: $Mutation ($1_aggregator_v2_Aggregator'u64');
    var $t19: bool;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: bool;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: $Mutation (int);
    var $t30: $1_fungible_asset_Withdraw;
    var $t31: $1_fungible_asset_FungibleAsset;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_aggregator_v2_Aggregator'u64'': $1_aggregator_v2_Aggregator'u64';
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store_addr]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1031:5+1
    assume {:print "$at(139,42689,42690)"} true;
    assume {:print "$track_local(27,64,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1031:5+1
    assume {:print "$track_local(27,64,1):", $t1} $t1 == $t1;

    // $t5 := exists<fungible_asset::FungibleStore>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1035:17+6
    assume {:print "$at(139,42866,42872)"} true;
    $t5 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0);

    // if ($t5) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1035:9+87
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1035:9+87
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1035:9+87
    assume {:print "$at(139,42858,42945)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1035:69+25
L0:

    // $t6 := 23 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1035:69+25
    assume {:print "$at(139,42918,42943)"} true;
    $t6 := 23;
    assume $IsValid'u64'($t6);

    // $t7 := error::not_found($t6) on_abort goto L19 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1035:52+43
    call $t7 := $1_error_not_found($t6);
    if ($abort_flag) {
        assume {:print "$at(139,42901,42944)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;
        goto L19;
    }

    // trace_abort($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1035:9+87
    assume {:print "$at(139,42858,42945)"} true;
    assume {:print "$track_abort(27,64):", $t7} $t7 == $t7;

    // $t8 := move($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1035:9+87
    $t8 := $t7;

    // goto L19 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1035:9+87
    goto L19;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1037:54+10
    assume {:print "$at(139,43001,43011)"} true;
L2:

    // $t9 := borrow_global<fungible_asset::FungibleStore>($t0) on_abort goto L19 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1037:21+17
    assume {:print "$at(139,42968,42985)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(139,42968,42985)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;
        goto L19;
    }

    // trace_local[store]($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1037:13+5
    $temp_0'$1_fungible_asset_FungibleStore' := $Dereference($t9);
    assume {:print "$track_local(27,64,4):", $temp_0'$1_fungible_asset_FungibleStore'} $temp_0'$1_fungible_asset_FungibleStore' == $temp_0'$1_fungible_asset_FungibleStore';

    // $t10 := get_field<fungible_asset::FungibleStore>.metadata($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1038:24+14
    assume {:print "$at(139,43037,43051)"} true;
    $t10 := $Dereference($t9)->$metadata;

    // trace_local[metadata]($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1038:13+8
    assume {:print "$track_local(27,64,3):", $t10} $t10 == $t10;

    // $t11 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1039:23+1
    assume {:print "$at(139,43075,43076)"} true;
    $t11 := 0;
    assume $IsValid'u64'($t11);

    // $t12 := !=($t1, $t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1039:20+2
    $t12 := !$IsEqual'u64'($t1, $t11);

    // if ($t12) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1039:9+680
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1040:17+5
    assume {:print "$at(139,43096,43101)"} true;
L4:

    // $t13 := get_field<fungible_asset::FungibleStore>.balance($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1040:17+13
    assume {:print "$at(139,43096,43109)"} true;
    $t13 := $Dereference($t9)->$balance;

    // $t14 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1040:34+1
    $t14 := 0;
    assume $IsValid'u64'($t14);

    // $t15 := ==($t13, $t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1040:31+2
    $t15 := $IsEqual'u64'($t13, $t14);

    // if ($t15) goto L6 else goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1040:17+75
    if ($t15) { goto L6; } else { goto L5; }

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1040:81+10
L6:

    // $t2 := exists<fungible_asset::ConcurrentFungibleBalance>($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:559:9+6
    assume {:print "$at(139,23404,23410)"} true;
    $t2 := $ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0);

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1040:17+75
    assume {:print "$at(139,43096,43171)"} true;
    goto L7;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1040:17+75
L5:

    // $t16 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1040:17+75
    assume {:print "$at(139,43096,43171)"} true;
    $t16 := false;
    assume $IsValid'bool'($t16);

    // $t2 := $t16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1040:17+75
    $t2 := $t16;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1040:17+75
L7:

    // if ($t2) goto L9 else goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1040:13+562
    assume {:print "$at(139,43092,43654)"} true;
    if ($t2) { goto L9; } else { goto L8; }

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1041:17+79
    assume {:print "$at(139,43191,43270)"} true;
L9:

    // drop($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1041:17+79
    assume {:print "$at(139,43191,43270)"} true;

    // $t17 := borrow_global<fungible_asset::ConcurrentFungibleBalance>($t0) on_abort goto L19 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1041:40+17
    if (!$ResourceExists($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(139,43214,43231)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;
        goto L19;
    }

    // $t18 := borrow_field<fungible_asset::ConcurrentFungibleBalance>.balance($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:44+29
    assume {:print "$at(139,43340,43369)"} true;
    $t18 := $ChildMutation($t17, 0, $Dereference($t17)->$balance);

    // $t19 := opaque begin: aggregator_v2::try_sub<u64>($t18, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61

    // $t20 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61
    havoc $t20;

    // if ($t20) goto L22 else goto L20 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61
    if ($t20) { goto L22; } else { goto L20; }

    // label L21 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61
L21:

    // trace_abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61
    assume {:print "$at(139,43317,43378)"} true;
    assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;

    // goto L19 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61
    goto L19;

    // label L20 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61
L20:

    // $t18 := havoc[mut]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61
    assume {:print "$at(139,43317,43378)"} true;
    havoc $temp_0'$1_aggregator_v2_Aggregator'u64'';
    $t18 := $UpdateMutation($t18, $temp_0'$1_aggregator_v2_Aggregator'u64'');

    // assume WellFormed($t18) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61
    assume $IsValid'$1_aggregator_v2_Aggregator'u64''($Dereference($t18));

    // assume WellFormed($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61
    assume $IsValid'bool'($t19);

    // $t19 := opaque end: aggregator_v2::try_sub<u64>($t18, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61

    // write_back[Reference($t17).balance (aggregator_v2::Aggregator<u64>)]($t18) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61
    $t17 := $UpdateMutation($t17, $Update'$1_fungible_asset_ConcurrentFungibleBalance'_balance($Dereference($t17), $Dereference($t18)));

    // write_back[fungible_asset::ConcurrentFungibleBalance@]($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1043:21+61
    $1_fungible_asset_ConcurrentFungibleBalance_$memory := $ResourceUpdate($1_fungible_asset_ConcurrentFungibleBalance_$memory, $GlobalLocationAddress($t17),
        $Dereference($t17));

    // if ($t19) goto L11 else goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1042:17+176
    assume {:print "$at(139,43288,43464)"} true;
    if ($t19) { goto L11; } else { goto L10; }

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1042:17+176
L11:

    // goto L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1042:17+176
    assume {:print "$at(139,43288,43464)"} true;
    goto L12;

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1044:45+21
    assume {:print "$at(139,43424,43445)"} true;
L10:

    // $t21 := 4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1044:45+21
    assume {:print "$at(139,43424,43445)"} true;
    $t21 := 4;
    assume $IsValid'u64'($t21);

    // $t22 := error::invalid_argument($t21) on_abort goto L19 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1044:21+46
    call $t22 := $1_error_invalid_argument($t21);
    if ($abort_flag) {
        assume {:print "$at(139,43400,43446)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;
        goto L19;
    }

    // trace_abort($t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1042:17+176
    assume {:print "$at(139,43288,43464)"} true;
    assume {:print "$track_abort(27,64):", $t22} $t22 == $t22;

    // $t8 := move($t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1042:17+176
    $t8 := $t22;

    // goto L19 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1042:17+176
    goto L19;

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1045:18+1
    assume {:print "$at(139,43464,43465)"} true;
L12:

    // goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1045:18+1
    assume {:print "$at(139,43464,43465)"} true;
    goto L13;

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:25+5
    assume {:print "$at(139,43511,43516)"} true;
L8:

    // $t23 := get_field<fungible_asset::FungibleStore>.balance($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:25+13
    assume {:print "$at(139,43511,43524)"} true;
    $t23 := $Dereference($t9)->$balance;

    // $t24 := >=($t23, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:39+2
    call $t24 := $Ge($t23, $t1);

    // if ($t24) goto L15 else goto L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:17+80
    if ($t24) { goto L15; } else { goto L14; }

    // label L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:17+80
L15:

    // goto L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:17+80
    assume {:print "$at(139,43503,43583)"} true;
    goto L16;

    // label L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:17+80
L14:

    // drop($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:17+80
    assume {:print "$at(139,43503,43583)"} true;

    // $t25 := 4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:74+21
    $t25 := 4;
    assume $IsValid'u64'($t25);

    // $t26 := error::invalid_argument($t25) on_abort goto L19 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:50+46
    call $t26 := $1_error_invalid_argument($t25);
    if ($abort_flag) {
        assume {:print "$at(139,43536,43582)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;
        goto L19;
    }

    // trace_abort($t26) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:17+80
    assume {:print "$at(139,43503,43583)"} true;
    assume {:print "$track_abort(27,64):", $t26} $t26 == $t26;

    // $t8 := move($t26) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:17+80
    $t8 := $t26;

    // goto L19 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1047:17+80
    goto L19;

    // label L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1048:33+5
    assume {:print "$at(139,43617,43622)"} true;
L16:

    // $t27 := get_field<fungible_asset::FungibleStore>.balance($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1048:33+13
    assume {:print "$at(139,43617,43630)"} true;
    $t27 := $Dereference($t9)->$balance;

    // $t28 := -($t27, $t1) on_abort goto L19 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1048:47+1
    call $t28 := $Sub($t27, $t1);
    if ($abort_flag) {
        assume {:print "$at(139,43631,43632)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(27,64):", $t8} $t8 == $t8;
        goto L19;
    }

    // $t29 := borrow_field<fungible_asset::FungibleStore>.balance($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1048:17+13
    $t29 := $ChildMutation($t9, 1, $Dereference($t9)->$balance);

    // write_ref($t29, $t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1048:17+38
    $t29 := $UpdateMutation($t29, $t28);

    // write_back[Reference($t9).balance (u64)]($t29) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1048:17+38
    $t9 := $UpdateMutation($t9, $Update'$1_fungible_asset_FungibleStore'_balance($Dereference($t9), $Dereference($t29)));

    // write_back[fungible_asset::FungibleStore@]($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1048:17+38
    $1_fungible_asset_FungibleStore_$memory := $ResourceUpdate($1_fungible_asset_FungibleStore_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // label L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1051:53+10
    assume {:print "$at(139,43709,43719)"} true;
L13:

    // $t30 := pack fungible_asset::Withdraw($t0, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1051:35+38
    assume {:print "$at(139,43691,43729)"} true;
    $t30 := $1_fungible_asset_Withdraw($t0, $t1);

    // opaque begin: event::emit<fungible_asset::Withdraw>($t30) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1051:13+61

    // opaque end: event::emit<fungible_asset::Withdraw>($t30) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1051:13+61

    // goto L17 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1051:74+1
    goto L17;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1039:9+680
    assume {:print "$at(139,43061,43741)"} true;
L3:

    // drop($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1039:9+680
    assume {:print "$at(139,43061,43741)"} true;

    // label L17 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:25+8
    assume {:print "$at(139,43767,43775)"} true;
L17:

    // $t31 := pack fungible_asset::FungibleAsset($t10, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:9+34
    assume {:print "$at(139,43751,43785)"} true;
    $t31 := $1_fungible_asset_FungibleAsset($t10, $t1);

    // trace_return[0]($t31) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1053:9+34
    assume {:print "$track_return(27,64,0):", $t31} $t31 == $t31;

    // label L18 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1054:5+1
    assume {:print "$at(139,43790,43791)"} true;
L18:

    // return $t31 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1054:5+1
    assume {:print "$at(139,43790,43791)"} true;
    $ret0 := $t31;
    return;

    // label L19 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1054:5+1
L19:

    // abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1054:5+1
    assume {:print "$at(139,43790,43791)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

    // label L22 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L22:

    // drop($t17) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L21 at <internal>:1:1+10
    goto L21;

}

// fun fungible_asset::withdraw_sanity_check<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:792:5+618
procedure {:inline 1} $1_fungible_asset_withdraw_sanity_check'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore', _$t2: bool) returns ()
{
    // declare local variables
    var $t3: bool;
    var $t4: $1_fungible_asset_FungibleStore;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $1_object_ObjectCore;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: $1_fungible_asset_FungibleStore;
    var $t19: bool;
    var $t20: bool;
    var $t21: $1_object_Object'$1_fungible_asset_Metadata';
    var $t22: bool;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: bool;
    var $t27: int;
    var $t28: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t2: bool;
    var $temp_0'$1_fungible_asset_FungibleStore': $1_fungible_asset_FungibleStore;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:792:5+1
    assume {:print "$at(139,33123,33124)"} true;
    assume {:print "$track_local(27,65,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:792:5+1
    assume {:print "$track_local(27,65,1):", $t1} $t1 == $t1;

    // trace_local[abort_on_dispatch]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:792:5+1
    assume {:print "$track_local(27,65,2):", $t2} $t2 == $t2;

    // $t6 := signer::address_of($t0) on_abort goto L16 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:37+25
    assume {:print "$at(139,33346,33371)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(139,33346,33371)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // assume Identical($t8, select object::Object.inner<object::Object<#0>>($t1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:536:9+37
    assume {:print "$at(156,21461,21498)"} true;
    assume ($t8 == $t1->$inner);

    // assume Identical($t9, global<object::ObjectCore>($t8)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:537:9+53
    assume {:print "$at(156,21507,21560)"} true;
    assume ($t9 == $ResourceValue($1_object_ObjectCore_$memory, $t8));

    // assume Identical($t10, select object::ObjectCore.owner<object::ObjectCore>($t9)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:538:9+37
    assume {:print "$at(156,21569,21606)"} true;
    assume ($t10 == $t9->$owner);

    // $t11 := object::owns<#0>($t1, $t6) on_abort goto L16 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:17+46
    assume {:print "$at(139,33326,33372)"} true;
    call $t11 := $1_object_owns'$1_fungible_asset_FungibleStore'($t1, $t6);
    if ($abort_flag) {
        assume {:print "$at(139,33326,33372)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // if ($t11) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:9+99
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:9+99
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:9+99
    assume {:print "$at(139,33318,33417)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:90+16
L0:

    // $t12 := 8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:90+16
    assume {:print "$at(139,33399,33415)"} true;
    $t12 := 8;
    assume $IsValid'u64'($t12);

    // $t13 := error::permission_denied($t12) on_abort goto L16 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:65+42
    call $t13 := $1_error_permission_denied($t12);
    if ($abort_flag) {
        assume {:print "$at(139,33374,33416)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // trace_abort($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:9+99
    assume {:print "$at(139,33318,33417)"} true;
    assume {:print "$track_abort(27,65):", $t13} $t13 == $t13;

    // $t7 := move($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:9+99
    $t7 := $t13;

    // goto L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:797:9+99
    goto L16;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:798:46+6
    assume {:print "$at(139,33464,33470)"} true;
L2:

    // $t14 := object::object_address<#0>($t1) on_abort goto L16 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1126:26+29
    assume {:print "$at(139,46656,46685)"} true;
    call $t14 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(139,46656,46685)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // trace_local[store_addr#264]($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1126:13+10
    assume {:print "$track_local(27,65,5):", $t14} $t14 == $t14;

    // $t15 := exists<fungible_asset::FungibleStore>($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:17+6
    assume {:print "$at(139,46703,46709)"} true;
    $t15 := $ResourceExists($1_fungible_asset_FungibleStore_$memory, $t14);

    // if ($t15) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    if ($t15) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
L4:

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    assume {:print "$at(139,46695,46782)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:69+25
L3:

    // $t16 := 23 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:69+25
    assume {:print "$at(139,46755,46780)"} true;
    $t16 := 23;
    assume $IsValid'u64'($t16);

    // $t17 := error::not_found($t16) on_abort goto L16 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:52+43
    call $t17 := $1_error_not_found($t16);
    if ($abort_flag) {
        assume {:print "$at(139,46738,46781)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // trace_abort($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    assume {:print "$at(139,46695,46782)"} true;
    assume {:print "$track_abort(27,65):", $t17} $t17 == $t17;

    // $t7 := move($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    $t7 := $t17;

    // goto L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1127:9+87
    goto L16;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1128:38+10
    assume {:print "$at(139,46821,46831)"} true;
L5:

    // $t18 := get_global<fungible_asset::FungibleStore>($t14) on_abort goto L16 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:1128:9+13
    assume {:print "$at(139,46792,46805)"} true;
    if (!$ResourceExists($1_fungible_asset_FungibleStore_$memory, $t14)) {
        call $ExecFailureAbort();
    } else {
        $t18 := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $t14);
    }
    if ($abort_flag) {
        assume {:print "$at(139,46792,46805)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // trace_local[fa_store]($t18) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:798:13+8
    assume {:print "$at(139,33431,33439)"} true;
    assume {:print "$track_local(27,65,4):", $t18} $t18 == $t18;

    // $t19 := !($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+1
    assume {:print "$at(139,33502,33503)"} true;
    call $t19 := $Not($t2);

    // if ($t19) goto L7 else goto L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+72
    if ($t19) { goto L7; } else { goto L6; }

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+72
L7:

    // $t20 := true at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+72
    assume {:print "$at(139,33502,33574)"} true;
    $t20 := true;
    assume $IsValid'bool'($t20);

    // $t3 := $t20 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+72
    $t3 := $t20;

    // goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+72
    goto L8;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:67+8
L6:

    // $t21 := get_field<fungible_asset::FungibleStore>.metadata($t18) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:67+17
    assume {:print "$at(139,33556,33573)"} true;
    $t21 := $t18->$metadata;

    // $t22 := fungible_asset::has_withdraw_dispatch_function($t21) on_abort goto L16 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:36+49
    call $t22 := $1_fungible_asset_has_withdraw_dispatch_function($t21);
    if ($abort_flag) {
        assume {:print "$at(139,33525,33574)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // $t3 := !($t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:35+1
    call $t3 := $Not($t22);

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:800:13+72
L8:

    // if ($t3) goto L10 else goto L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
    assume {:print "$at(139,33481,33655)"} true;
    if ($t3) { goto L10; } else { goto L9; }

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
L10:

    // goto L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
    assume {:print "$at(139,33481,33655)"} true;
    goto L11;

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
L9:

    // $t23 := 28 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:801:37+32
    assume {:print "$at(139,33612,33644)"} true;
    $t23 := 28;
    assume $IsValid'u64'($t23);

    // $t24 := error::invalid_argument($t23) on_abort goto L16 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:801:13+57
    call $t24 := $1_error_invalid_argument($t23);
    if ($abort_flag) {
        assume {:print "$at(139,33588,33645)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // trace_abort($t24) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
    assume {:print "$at(139,33481,33655)"} true;
    assume {:print "$track_abort(27,65):", $t24} $t24 == $t24;

    // $t7 := move($t24) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
    $t7 := $t24;

    // goto L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:799:9+174
    goto L16;

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:18+8
    assume {:print "$at(139,33674,33682)"} true;
L11:

    // $t25 := get_field<fungible_asset::FungibleStore>.frozen($t18) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:18+15
    assume {:print "$at(139,33674,33689)"} true;
    $t25 := $t18->$frozen;

    // $t26 := !($t25) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:17+1
    call $t26 := $Not($t25);

    // if ($t26) goto L13 else goto L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:9+69
    if ($t26) { goto L13; } else { goto L12; }

    // label L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:9+69
L13:

    // goto L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:9+69
    assume {:print "$at(139,33665,33734)"} true;
    goto L14;

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:60+16
L12:

    // $t27 := 3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:60+16
    assume {:print "$at(139,33716,33732)"} true;
    $t27 := 3;
    assume $IsValid'u64'($t27);

    // $t28 := error::permission_denied($t27) on_abort goto L16 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:35+42
    call $t28 := $1_error_permission_denied($t27);
    if ($abort_flag) {
        assume {:print "$at(139,33691,33733)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(27,65):", $t7} $t7 == $t7;
        goto L16;
    }

    // trace_abort($t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:9+69
    assume {:print "$at(139,33665,33734)"} true;
    assume {:print "$track_abort(27,65):", $t28} $t28 == $t28;

    // $t7 := move($t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:9+69
    $t7 := $t28;

    // goto L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:9+69
    goto L16;

    // label L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:803:78+1
L14:

    // label L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:804:5+1
    assume {:print "$at(139,33740,33741)"} true;
L15:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:804:5+1
    assume {:print "$at(139,33740,33741)"} true;
    return;

    // label L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:804:5+1
L16:

    // abort($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/fungible_asset.move:804:5+1
    assume {:print "$at(139,33740,33741)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// struct dispatchable_fungible_asset::TransferRefStore at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:36:5+73
datatype $1_dispatchable_fungible_asset_TransferRefStore {
    $1_dispatchable_fungible_asset_TransferRefStore($transfer_ref: $1_fungible_asset_TransferRef)
}
function {:inline} $Update'$1_dispatchable_fungible_asset_TransferRefStore'_transfer_ref(s: $1_dispatchable_fungible_asset_TransferRefStore, x: $1_fungible_asset_TransferRef): $1_dispatchable_fungible_asset_TransferRefStore {
    $1_dispatchable_fungible_asset_TransferRefStore(x)
}
function $IsValid'$1_dispatchable_fungible_asset_TransferRefStore'(s: $1_dispatchable_fungible_asset_TransferRefStore): bool {
    $IsValid'$1_fungible_asset_TransferRef'(s->$transfer_ref)
}
function {:inline} $IsEqual'$1_dispatchable_fungible_asset_TransferRefStore'(s1: $1_dispatchable_fungible_asset_TransferRefStore, s2: $1_dispatchable_fungible_asset_TransferRefStore): bool {
    s1 == s2
}
var $1_dispatchable_fungible_asset_TransferRefStore_$memory: $Memory $1_dispatchable_fungible_asset_TransferRefStore;

// fun dispatchable_fungible_asset::transfer<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:129:5+242
procedure {:inline 1} $1_dispatchable_fungible_asset_transfer'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore', _$t2: $1_object_Object'$1_fungible_asset_FungibleStore', _$t3: int) returns ()
{
    // declare local variables
    var $t4: $1_fungible_asset_FungibleAsset;
    var $t5: $1_fungible_asset_FungibleAsset;
    var $t6: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t2: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t3: int;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // trace_local[sender]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:129:5+1
    assume {:print "$at(131,5320,5321)"} true;
    assume {:print "$track_local(28,9,0):", $t0} $t0 == $t0;

    // trace_local[from]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:129:5+1
    assume {:print "$track_local(28,9,1):", $t1} $t1 == $t1;

    // trace_local[to]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:129:5+1
    assume {:print "$track_local(28,9,2):", $t2} $t2 == $t2;

    // trace_local[amount]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:129:5+1
    assume {:print "$track_local(28,9,3):", $t3} $t3 == $t3;

    // $t5 := dispatchable_fungible_asset::withdraw<#0>($t0, $t1, $t3) on_abort goto L2 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:135:18+30
    assume {:print "$at(131,5500,5530)"} true;
    call $t5 := $1_dispatchable_fungible_asset_withdraw'$1_fungible_asset_FungibleStore'($t0, $t1, $t3);
    if ($abort_flag) {
        assume {:print "$at(131,5500,5530)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(28,9):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[fa]($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:135:13+2
    assume {:print "$track_local(28,9,4):", $t5} $t5 == $t5;

    // dispatchable_fungible_asset::deposit<#0>($t2, $t5) on_abort goto L2 with $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:136:9+15
    assume {:print "$at(131,5540,5555)"} true;
    call $1_dispatchable_fungible_asset_deposit'$1_fungible_asset_FungibleStore'($t2, $t5);
    if ($abort_flag) {
        assume {:print "$at(131,5540,5555)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(28,9):", $t6} $t6 == $t6;
        goto L2;
    }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:137:5+1
    assume {:print "$at(131,5561,5562)"} true;
L1:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:137:5+1
    assume {:print "$at(131,5561,5562)"} true;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:137:5+1
L2:

    // abort($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:137:5+1
    assume {:print "$at(131,5561,5562)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun dispatchable_fungible_asset::deposit<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:106:5+794
procedure {:inline 1} $1_dispatchable_fungible_asset_deposit'$1_fungible_asset_FungibleStore'(_$t0: $1_object_Object'$1_fungible_asset_FungibleStore', _$t1: $1_fungible_asset_FungibleAsset) returns ()
{
    // declare local variables
    var $t2: $1_object_Object'$1_fungible_asset_Metadata';
    var $t3: $1_fungible_asset_FungibleAsset;
    var $t4: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t5: $1_function_info_FunctionInfo;
    var $t6: $1_option_Option'$1_function_info_FunctionInfo';
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: bool;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: $1_function_info_FunctionInfo;
    var $t16: bool;
    var $t17: $1_object_Object'$1_fungible_asset_Metadata';
    var $t18: int;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: $1_dispatchable_fungible_asset_TransferRefStore;
    var $t23: $1_fungible_asset_TransferRef;
    var $t24: bool;
    var $t25: int;
    var $t0: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t1: $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_function_info_FunctionInfo': $1_function_info_FunctionInfo;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[store]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:106:5+1
    assume {:print "$at(131,4350,4351)"} true;
    assume {:print "$track_local(28,0,0):", $t0} $t0 == $t0;

    // trace_local[fa]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:106:5+1
    assume {:print "$track_local(28,0,1):", $t1} $t1 == $t1;

    // $t8 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:107:53+5
    assume {:print "$at(131,4494,4499)"} true;
    $t8 := false;
    assume $IsValid'bool'($t8);

    // fungible_asset::deposit_sanity_check<#0>($t0, $t8) on_abort goto L10 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:107:9+50
    call $1_fungible_asset_deposit_sanity_check'$1_fungible_asset_FungibleStore'($t0, $t8);
    if ($abort_flag) {
        assume {:print "$at(131,4450,4500)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // $t10 := fungible_asset::deposit_dispatch_function<#0>($t0) on_abort goto L10 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:108:24+48
    assume {:print "$at(131,4525,4573)"} true;
    call $t10 := $1_fungible_asset_deposit_dispatch_function'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(131,4525,4573)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // trace_local[func_opt]($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:108:13+8
    assume {:print "$track_local(28,0,6):", $t10} $t10 == $t10;

    // $t11 := opaque begin: option::is_some<function_info::FunctionInfo>($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:13+26
    assume {:print "$at(131,4587,4613)"} true;

    // assume WellFormed($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:13+26
    assume $IsValid'bool'($t11);

    // assume Eq<bool>($t11, option::spec_is_some<function_info::FunctionInfo>($t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:13+26
    assume $IsEqual'bool'($t11, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t10));

    // $t11 := opaque end: option::is_some<function_info::FunctionInfo>($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:13+26

    // if ($t11) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:9+555
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:111:17+47
    assume {:print "$at(131,4654,4701)"} true;
L1:

    // $t12 := features::dispatchable_fungible_asset_enabled() on_abort goto L10 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:111:17+47
    assume {:print "$at(131,4654,4701)"} true;
    call $t12 := $1_features_dispatchable_fungible_asset_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,4654,4701)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // if ($t12) goto L3 else goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:110:13+134
    assume {:print "$at(131,4629,4763)"} true;
    if ($t12) { goto L3; } else { goto L2; }

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:110:13+134
L3:

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:110:13+134
    assume {:print "$at(131,4629,4763)"} true;
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:112:32+14
    assume {:print "$at(131,4734,4748)"} true;
L2:

    // $t13 := 3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:112:32+14
    assume {:print "$at(131,4734,4748)"} true;
    $t13 := 3;
    assume $IsValid'u64'($t13);

    // $t14 := error::aborted($t13) on_abort goto L10 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:112:17+30
    call $t14 := $1_error_aborted($t13);
    if ($abort_flag) {
        assume {:print "$at(131,4719,4749)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // trace_abort($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:110:13+134
    assume {:print "$at(131,4629,4763)"} true;
    assume {:print "$track_abort(28,0):", $t14} $t14 == $t14;

    // $t9 := move($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:110:13+134
    $t9 := $t14;

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:110:13+134
    goto L10;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:39+9
    assume {:print "$at(131,4803,4812)"} true;
L4:

    // $t15 := opaque begin: option::borrow<function_info::FunctionInfo>($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    assume {:print "$at(131,4788,4813)"} true;

    // assume Identical($t16, option::spec_is_none<function_info::FunctionInfo>($t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    assume ($t16 == $1_option_spec_is_none'$1_function_info_FunctionInfo'($t10));

    // if ($t16) goto L12 else goto L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    if ($t16) { goto L12; } else { goto L11; }

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
L12:

    // assume And(option::spec_is_none<function_info::FunctionInfo>($t10), Eq(262145, $t9)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    assume {:print "$at(131,4788,4813)"} true;
    assume ($1_option_spec_is_none'$1_function_info_FunctionInfo'($t10) && $IsEqual'num'(262145, $t9));

    // trace_abort($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    assume {:print "$at(131,4788,4813)"} true;
    assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    goto L10;

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
L11:

    // assume WellFormed($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    assume {:print "$at(131,4788,4813)"} true;
    assume $IsValid'$1_function_info_FunctionInfo'($t15);

    // assume Eq<function_info::FunctionInfo>($t15, option::spec_borrow<function_info::FunctionInfo>($t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25
    assume $IsEqual'$1_function_info_FunctionInfo'($t15, $1_option_spec_borrow'$1_function_info_FunctionInfo'($t10));

    // $t15 := opaque end: option::borrow<function_info::FunctionInfo>($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:24+25

    // trace_local[func]($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:114:17+4
    assume {:print "$track_local(28,0,5):", $t15} $t15 == $t15;

    // function_info::load_module_from_function($t15) on_abort goto L10 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:115:13+46
    assume {:print "$at(131,4827,4873)"} true;
    call $1_function_info_load_module_from_function($t15);
    if ($abort_flag) {
        assume {:print "$at(131,4827,4873)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // $t17 := fungible_asset::store_metadata<#0>($t0) on_abort goto L10 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:196:14+40
    assume {:print "$at(131,8011,8051)"} true;
    call $t17 := $1_fungible_asset_store_metadata'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(131,8011,8051)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // $t18 := object::object_address<fungible_asset::Metadata>($t17) on_abort goto L10 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:195:29+87
    assume {:print "$at(131,7974,8061)"} true;
    call $t18 := $1_object_object_address'$1_fungible_asset_Metadata'($t17);
    if ($abort_flag) {
        assume {:print "$at(131,7974,8061)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // trace_local[metadata_addr#181]($t18) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:195:13+13
    assume {:print "$track_local(28,0,7):", $t18} $t18 == $t18;

    // $t19 := exists<dispatchable_fungible_asset::TransferRefStore>($t18) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:199:13+6
    assume {:print "$at(131,8092,8098)"} true;
    $t19 := $ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t18);

    // if ($t19) goto L6 else goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    assume {:print "$at(131,8071,8189)"} true;
    if ($t19) { goto L6; } else { goto L5; }

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
L6:

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    assume {:print "$at(131,8071,8189)"} true;
    goto L7;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
L5:

    // $t20 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:200:30+16
    assume {:print "$at(131,8162,8178)"} true;
    $t20 := 1;
    assume $IsValid'u64'($t20);

    // $t21 := error::not_found($t20) on_abort goto L10 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:200:13+34
    call $t21 := $1_error_not_found($t20);
    if ($abort_flag) {
        assume {:print "$at(131,8145,8179)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // trace_abort($t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    assume {:print "$at(131,8071,8189)"} true;
    assume {:print "$track_abort(28,0):", $t21} $t21 == $t21;

    // $t9 := move($t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    $t9 := $t21;

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    goto L10;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:117:17+5
    assume {:print "$at(131,4925,4930)"} true;
L7:

    // $t22 := get_global<dispatchable_fungible_asset::TransferRefStore>($t18) on_abort goto L10 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:202:10+13
    assume {:print "$at(131,8200,8213)"} true;
    if (!$ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t18)) {
        call $ExecFailureAbort();
    } else {
        $t22 := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t18);
    }
    if ($abort_flag) {
        assume {:print "$at(131,8200,8213)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // $t23 := get_field<dispatchable_fungible_asset::TransferRefStore>.transfer_ref($t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:202:9+60
    $t23 := $t22->$transfer_ref;

    // opaque begin: dispatchable_fungible_asset::dispatchable_deposit<#0>($t0, $t1, $t23, $t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
    assume {:print "$at(131,4887,5030)"} true;

    // $t24 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
    havoc $t24;

    // if ($t24) goto L14 else goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
    if ($t24) { goto L14; } else { goto L13; }

    // label L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
L14:

    // trace_abort($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
    assume {:print "$at(131,4887,5030)"} true;
    assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
    goto L10;

    // label L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
L13:

    // opaque end: dispatchable_fungible_asset::dispatchable_deposit<#0>($t0, $t1, $t23, $t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:116:13+143
    assume {:print "$at(131,4887,5030)"} true;

    // goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:9+555
    assume {:print "$at(131,4583,5138)"} true;
    goto L8;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:123:69+6
    assume {:print "$at(131,5116,5122)"} true;
L0:

    // $t25 := object::object_address<#0>($t0) on_abort goto L10 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:123:46+30
    assume {:print "$at(131,5093,5123)"} true;
    call $t25 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t0);
    if ($abort_flag) {
        assume {:print "$at(131,5093,5123)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // fungible_asset::deposit_internal($t25, $t1) on_abort goto L10 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:123:13+68
    call $1_fungible_asset_deposit_internal($t25, $t1);
    if ($abort_flag) {
        assume {:print "$at(131,5060,5128)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(28,0):", $t9} $t9 == $t9;
        goto L10;
    }

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:109:9+555
    assume {:print "$at(131,4583,5138)"} true;
L8:

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:125:5+1
    assume {:print "$at(131,5143,5144)"} true;
L9:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:125:5+1
    assume {:print "$at(131,5143,5144)"} true;
    return;

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:125:5+1
L10:

    // abort($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:125:5+1
    assume {:print "$at(131,5143,5144)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun dispatchable_fungible_asset::withdraw<fungible_asset::FungibleStore> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:74:5+1116
procedure {:inline 1} $1_dispatchable_fungible_asset_withdraw'$1_fungible_asset_FungibleStore'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore', _$t2: int) returns ($ret0: $1_fungible_asset_FungibleAsset)
{
    // declare local variables
    var $t3: $1_object_Object'$1_fungible_asset_Metadata';
    var $t4: int;
    var $t5: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t6: $1_fungible_asset_FungibleAsset;
    var $t7: int;
    var $t8: $1_fungible_asset_FungibleAsset;
    var $t9: $1_function_info_FunctionInfo;
    var $t10: $1_option_Option'$1_function_info_FunctionInfo';
    var $t11: int;
    var $t12: int;
    var $t13: bool;
    var $t14: int;
    var $t15: $1_option_Option'$1_function_info_FunctionInfo';
    var $t16: bool;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: $1_function_info_FunctionInfo;
    var $t22: bool;
    var $t23: $1_object_Object'$1_fungible_asset_Metadata';
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: $1_dispatchable_fungible_asset_TransferRefStore;
    var $t29: $1_fungible_asset_TransferRef;
    var $t30: $1_fungible_asset_FungibleAsset;
    var $t31: bool;
    var $t32: int;
    var $t33: int;
    var $t34: bool;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t2: int;
    var $temp_0'$1_function_info_FunctionInfo': $1_function_info_FunctionInfo;
    var $temp_0'$1_fungible_asset_FungibleAsset': $1_fungible_asset_FungibleAsset;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_option_Option'$1_function_info_FunctionInfo'': $1_option_Option'$1_function_info_FunctionInfo';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:74:5+1
    assume {:print "$at(131,3059,3060)"} true;
    assume {:print "$track_local(28,11,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:74:5+1
    assume {:print "$track_local(28,11,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:74:5+1
    assume {:print "$track_local(28,11,2):", $t2} $t2 == $t2;

    // $t13 := false at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:79:61+5
    assume {:print "$at(131,3268,3273)"} true;
    $t13 := false;
    assume $IsValid'bool'($t13);

    // fungible_asset::withdraw_sanity_check<#0>($t0, $t1, $t13) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:79:9+58
    call $1_fungible_asset_withdraw_sanity_check'$1_fungible_asset_FungibleStore'($t0, $t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(131,3216,3274)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // $t15 := fungible_asset::withdraw_dispatch_function<#0>($t1) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:80:24+49
    assume {:print "$at(131,3299,3348)"} true;
    call $t15 := $1_fungible_asset_withdraw_dispatch_function'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(131,3299,3348)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_local[func_opt]($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:80:13+8
    assume {:print "$track_local(28,11,10):", $t15} $t15 == $t15;

    // $t16 := opaque begin: option::is_some<function_info::FunctionInfo>($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:13+26
    assume {:print "$at(131,3362,3388)"} true;

    // assume WellFormed($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:13+26
    assume $IsValid'bool'($t16);

    // assume Eq<bool>($t16, option::spec_is_some<function_info::FunctionInfo>($t15)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:13+26
    assume $IsEqual'bool'($t16, $1_option_spec_is_some'$1_function_info_FunctionInfo'($t15));

    // $t16 := opaque end: option::is_some<function_info::FunctionInfo>($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:13+26

    // if ($t16) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:9+811
    if ($t16) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:83:17+47
    assume {:print "$at(131,3429,3476)"} true;
L1:

    // $t17 := features::dispatchable_fungible_asset_enabled() on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:83:17+47
    assume {:print "$at(131,3429,3476)"} true;
    call $t17 := $1_features_dispatchable_fungible_asset_enabled();
    if ($abort_flag) {
        assume {:print "$at(131,3429,3476)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // if ($t17) goto L3 else goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+134
    assume {:print "$at(131,3404,3538)"} true;
    if ($t17) { goto L3; } else { goto L2; }

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+134
L3:

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+134
    assume {:print "$at(131,3404,3538)"} true;
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:84:32+14
    assume {:print "$at(131,3509,3523)"} true;
L2:

    // $t18 := 3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:84:32+14
    assume {:print "$at(131,3509,3523)"} true;
    $t18 := 3;
    assume $IsValid'u64'($t18);

    // $t19 := error::aborted($t18) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:84:17+30
    call $t19 := $1_error_aborted($t18);
    if ($abort_flag) {
        assume {:print "$at(131,3494,3524)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_abort($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+134
    assume {:print "$at(131,3404,3538)"} true;
    assume {:print "$track_abort(28,11):", $t19} $t19 == $t19;

    // $t14 := move($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+134
    $t14 := $t19;

    // goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:82:13+134
    goto L13;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:86:57+5
    assume {:print "$at(131,3596,3601)"} true;
L4:

    // $t20 := fungible_asset::balance<#0>($t1) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:86:33+30
    assume {:print "$at(131,3572,3602)"} true;
    call $t20 := $1_fungible_asset_balance'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(131,3572,3602)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_local[start_balance]($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:86:17+13
    assume {:print "$track_local(28,11,12):", $t20} $t20 == $t20;

    // $t21 := opaque begin: option::borrow<function_info::FunctionInfo>($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(131,3627,3652)"} true;

    // assume Identical($t22, option::spec_is_none<function_info::FunctionInfo>($t15)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume ($t22 == $1_option_spec_is_none'$1_function_info_FunctionInfo'($t15));

    // if ($t22) goto L15 else goto L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    if ($t22) { goto L15; } else { goto L14; }

    // label L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
L15:

    // assume And(option::spec_is_none<function_info::FunctionInfo>($t15), Eq(262145, $t14)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(131,3627,3652)"} true;
    assume ($1_option_spec_is_none'$1_function_info_FunctionInfo'($t15) && $IsEqual'num'(262145, $t14));

    // trace_abort($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(131,3627,3652)"} true;
    assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;

    // goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    goto L13;

    // label L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
L14:

    // assume WellFormed($t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume {:print "$at(131,3627,3652)"} true;
    assume $IsValid'$1_function_info_FunctionInfo'($t21);

    // assume Eq<function_info::FunctionInfo>($t21, option::spec_borrow<function_info::FunctionInfo>($t15)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25
    assume $IsEqual'$1_function_info_FunctionInfo'($t21, $1_option_spec_borrow'$1_function_info_FunctionInfo'($t15));

    // $t21 := opaque end: option::borrow<function_info::FunctionInfo>($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:24+25

    // trace_local[func]($t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:87:17+4
    assume {:print "$track_local(28,11,9):", $t21} $t21 == $t21;

    // function_info::load_module_from_function($t21) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:88:13+46
    assume {:print "$at(131,3666,3712)"} true;
    call $1_function_info_load_module_from_function($t21);
    if ($abort_flag) {
        assume {:print "$at(131,3666,3712)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // $t23 := fungible_asset::store_metadata<#0>($t1) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:196:14+40
    assume {:print "$at(131,8011,8051)"} true;
    call $t23 := $1_fungible_asset_store_metadata'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(131,8011,8051)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // $t24 := object::object_address<fungible_asset::Metadata>($t23) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:195:29+87
    assume {:print "$at(131,7974,8061)"} true;
    call $t24 := $1_object_object_address'$1_fungible_asset_Metadata'($t23);
    if ($abort_flag) {
        assume {:print "$at(131,7974,8061)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_local[metadata_addr#183]($t24) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:195:13+13
    assume {:print "$track_local(28,11,11):", $t24} $t24 == $t24;

    // $t25 := exists<dispatchable_fungible_asset::TransferRefStore>($t24) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:199:13+6
    assume {:print "$at(131,8092,8098)"} true;
    $t25 := $ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t24);

    // if ($t25) goto L6 else goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    assume {:print "$at(131,8071,8189)"} true;
    if ($t25) { goto L6; } else { goto L5; }

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
L6:

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    assume {:print "$at(131,8071,8189)"} true;
    goto L7;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
L5:

    // $t26 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:200:30+16
    assume {:print "$at(131,8162,8178)"} true;
    $t26 := 1;
    assume $IsValid'u64'($t26);

    // $t27 := error::not_found($t26) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:200:13+34
    call $t27 := $1_error_not_found($t26);
    if ($abort_flag) {
        assume {:print "$at(131,8145,8179)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_abort($t27) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    assume {:print "$at(131,8071,8189)"} true;
    assume {:print "$track_abort(28,11):", $t27} $t27 == $t27;

    // $t14 := move($t27) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    $t14 := $t27;

    // goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:198:9+118
    goto L13;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:90:17+5
    assume {:print "$at(131,3774,3779)"} true;
L7:

    // $t28 := get_global<dispatchable_fungible_asset::TransferRefStore>($t24) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:202:10+13
    assume {:print "$at(131,8200,8213)"} true;
    if (!$ResourceExists($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t24)) {
        call $ExecFailureAbort();
    } else {
        $t28 := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $t24);
    }
    if ($abort_flag) {
        assume {:print "$at(131,8200,8213)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // $t29 := get_field<dispatchable_fungible_asset::TransferRefStore>.transfer_ref($t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:202:9+60
    $t29 := $t28->$transfer_ref;

    // $t30 := opaque begin: dispatchable_fungible_asset::dispatchable_withdraw<#0>($t1, $t2, $t29, $t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    assume {:print "$at(131,3735,3884)"} true;

    // $t31 := havoc[val]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    havoc $t31;

    // if ($t31) goto L17 else goto L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    if ($t31) { goto L17; } else { goto L16; }

    // label L17 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
L17:

    // trace_abort($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    assume {:print "$at(131,3735,3884)"} true;
    assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;

    // goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    goto L13;

    // label L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
L16:

    // assume WellFormed($t30) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149
    assume {:print "$at(131,3735,3884)"} true;
    assume $IsValid'$1_fungible_asset_FungibleAsset'($t30);

    // $t30 := opaque end: dispatchable_fungible_asset::dispatchable_withdraw<#0>($t1, $t2, $t29, $t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:22+149

    // trace_local[fa]($t30) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:89:17+2
    assume {:print "$track_local(28,11,8):", $t30} $t30 == $t30;

    // $t32 := fungible_asset::balance<#0>($t1) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:95:31+30
    assume {:print "$at(131,3916,3946)"} true;
    call $t32 := $1_fungible_asset_balance'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(131,3916,3946)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_local[end_balance]($t32) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:95:17+11
    assume {:print "$track_local(28,11,7):", $t32} $t32 == $t32;

    // $t33 := -($t20, $t32) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:45+1
    assume {:print "$at(131,3992,3993)"} true;
    call $t33 := $Sub($t20, $t32);
    if ($abort_flag) {
        assume {:print "$at(131,3992,3993)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // $t34 := <=($t2, $t33) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:28+2
    call $t34 := $Le($t2, $t33);

    // if ($t34) goto L9 else goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:13+80
    if ($t34) { goto L9; } else { goto L8; }

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:13+80
L9:

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:13+80
    assume {:print "$at(131,3960,4040)"} true;
    goto L10;

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:75+16
L8:

    // $t35 := 2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:75+16
    assume {:print "$at(131,4022,4038)"} true;
    $t35 := 2;
    assume $IsValid'u64'($t35);

    // $t36 := error::aborted($t35) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:60+32
    call $t36 := $1_error_aborted($t35);
    if ($abort_flag) {
        assume {:print "$at(131,4007,4039)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // trace_abort($t36) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:13+80
    assume {:print "$at(131,3960,4040)"} true;
    assume {:print "$track_abort(28,11):", $t36} $t36 == $t36;

    // $t14 := move($t36) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:13+80
    $t14 := $t36;

    // goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:96:13+80
    goto L13;

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:97:13+2
    assume {:print "$at(131,4054,4056)"} true;
L10:

    // $t6 := $t30 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:9+811
    assume {:print "$at(131,3358,4169)"} true;
    $t6 := $t30;

    // goto L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:9+811
    goto L11;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:99:70+6
    assume {:print "$at(131,4143,4149)"} true;
L0:

    // $t37 := object::object_address<#0>($t1) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:99:47+30
    assume {:print "$at(131,4120,4150)"} true;
    call $t37 := $1_object_object_address'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(131,4120,4150)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // $t6 := fungible_asset::withdraw_internal($t37, $t2) on_abort goto L13 with $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:99:13+73
    call $t6 := $1_fungible_asset_withdraw_internal($t37, $t2);
    if ($abort_flag) {
        assume {:print "$at(131,4086,4159)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(28,11):", $t14} $t14 == $t14;
        goto L13;
    }

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:9+811
    assume {:print "$at(131,3358,4169)"} true;
L11:

    // trace_return[0]($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:81:9+811
    assume {:print "$at(131,3358,4169)"} true;
    assume {:print "$track_return(28,11,0):", $t6} $t6 == $t6;

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:101:5+1
    assume {:print "$at(131,4174,4175)"} true;
L12:

    // return $t6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:101:5+1
    assume {:print "$at(131,4174,4175)"} true;
    $ret0 := $t6;
    return;

    // label L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:101:5+1
L13:

    // abort($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/dispatchable_fungible_asset.move:101:5+1
    assume {:print "$at(131,4174,4175)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// struct primary_fungible_store::DeriveRefPod at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:27:5+75
datatype $1_primary_fungible_store_DeriveRefPod {
    $1_primary_fungible_store_DeriveRefPod($metadata_derive_ref: $1_object_DeriveRef)
}
function {:inline} $Update'$1_primary_fungible_store_DeriveRefPod'_metadata_derive_ref(s: $1_primary_fungible_store_DeriveRefPod, x: $1_object_DeriveRef): $1_primary_fungible_store_DeriveRefPod {
    $1_primary_fungible_store_DeriveRefPod(x)
}
function $IsValid'$1_primary_fungible_store_DeriveRefPod'(s: $1_primary_fungible_store_DeriveRefPod): bool {
    $IsValid'$1_object_DeriveRef'(s->$metadata_derive_ref)
}
function {:inline} $IsEqual'$1_primary_fungible_store_DeriveRefPod'(s1: $1_primary_fungible_store_DeriveRefPod, s2: $1_primary_fungible_store_DeriveRefPod): bool {
    s1 == s2
}
var $1_primary_fungible_store_DeriveRefPod_$memory: $Memory $1_primary_fungible_store_DeriveRefPod;

// fun primary_fungible_store::transfer<fungible_asset::Metadata> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:179:5+577
procedure {:inline 1} $1_primary_fungible_store_transfer'$1_fungible_asset_Metadata'(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_Metadata', _$t2: int, _$t3: int) returns ()
{
    // declare local variables
    var $t4: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t5: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t6: int;
    var $t7: int;
    var $t8: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t9: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $t2: int;
    var $t3: int;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // trace_local[sender]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:179:5+1
    assume {:print "$at(158,8587,8588)"} true;
    assume {:print "$track_local(29,16,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:179:5+1
    assume {:print "$track_local(29,16,1):", $t1} $t1 == $t1;

    // trace_local[recipient]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:179:5+1
    assume {:print "$track_local(29,16,2):", $t2} $t2 == $t2;

    // trace_local[amount]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:179:5+1
    assume {:print "$track_local(29,16,3):", $t3} $t3 == $t3;

    // $t6 := signer::address_of($t0) on_abort goto L2 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:185:56+26
    assume {:print "$at(158,8810,8836)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(158,8810,8836)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(29,16):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := primary_fungible_store::ensure_primary_store_exists<#0>($t6, $t1) on_abort goto L2 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:185:28+65
    call $t8 := $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'($t6, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,8782,8847)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(29,16):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[sender_store]($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:185:13+12
    assume {:print "$track_local(29,16,5):", $t8} $t8 == $t8;

    // primary_fungible_store::may_be_unburn($t0, $t8) on_abort goto L2 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:187:9+35
    assume {:print "$at(158,8948,8983)"} true;
    call $1_primary_fungible_store_may_be_unburn($t0, $t8);
    if ($abort_flag) {
        assume {:print "$at(158,8948,8983)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(29,16):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t9 := primary_fungible_store::ensure_primary_store_exists<#0>($t2, $t1) on_abort goto L2 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:188:31+48
    assume {:print "$at(158,9015,9063)"} true;
    call $t9 := $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'($t2, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,9015,9063)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(29,16):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[recipient_store]($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:188:13+15
    assume {:print "$track_local(29,16,4):", $t9} $t9 == $t9;

    // dispatchable_fungible_asset::transfer<fungible_asset::FungibleStore>($t0, $t8, $t9, $t3) on_abort goto L2 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:189:9+84
    assume {:print "$at(158,9073,9157)"} true;
    call $1_dispatchable_fungible_asset_transfer'$1_fungible_asset_FungibleStore'($t0, $t8, $t9, $t3);
    if ($abort_flag) {
        assume {:print "$at(158,9073,9157)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(29,16):", $t7} $t7 == $t7;
        goto L2;
    }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:190:5+1
    assume {:print "$at(158,9163,9164)"} true;
L1:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:190:5+1
    assume {:print "$at(158,9163,9164)"} true;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:190:5+1
L2:

    // abort($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:190:5+1
    assume {:print "$at(158,9163,9164)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::mint [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:215:5+269
procedure {:inline 1} $1_primary_fungible_store_mint(_$t0: $1_fungible_asset_MintRef, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t4: $1_object_Object'$1_fungible_asset_Metadata';
    var $t5: int;
    var $t6: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: $1_fungible_asset_MintRef;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_fungible_asset_MintRef': $1_fungible_asset_MintRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[mint_ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:215:5+1
    assume {:print "$at(158,10158,10159)"} true;
    assume {:print "$track_local(29,11,0):", $t0} $t0 == $t0;

    // trace_local[owner]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:215:5+1
    assume {:print "$track_local(29,11,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:215:5+1
    assume {:print "$track_local(29,11,2):", $t2} $t2 == $t2;

    // $t4 := fungible_asset::mint_ref_metadata($t0) on_abort goto L2 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:216:64+43
    assume {:print "$at(158,10310,10353)"} true;
    call $t4 := $1_fungible_asset_mint_ref_metadata($t0);
    if ($abort_flag) {
        assume {:print "$at(158,10310,10353)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,11):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := primary_fungible_store::ensure_primary_store_exists<fungible_asset::Metadata>($t1, $t4) on_abort goto L2 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:216:29+79
    call $t6 := $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'($t1, $t4);
    if ($abort_flag) {
        assume {:print "$at(158,10275,10354)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,11):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[primary_store]($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:216:13+13
    assume {:print "$track_local(29,11,3):", $t6} $t6 == $t6;

    // fungible_asset::mint_to<fungible_asset::FungibleStore>($t0, $t6, $t2) on_abort goto L2 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:217:9+56
    assume {:print "$at(158,10364,10420)"} true;
    call $1_fungible_asset_mint_to'$1_fungible_asset_FungibleStore'($t0, $t6, $t2);
    if ($abort_flag) {
        assume {:print "$at(158,10364,10420)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,11):", $t5} $t5 == $t5;
        goto L2;
    }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:218:5+1
    assume {:print "$at(158,10426,10427)"} true;
L1:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:218:5+1
    assume {:print "$at(158,10426,10427)"} true;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:218:5+1
L2:

    // abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:218:5+1
    assume {:print "$at(158,10426,10427)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::create_primary_store<fungible_asset::Metadata> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:72:5+746
procedure {:inline 1} $1_primary_fungible_store_create_primary_store'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: $1_object_ConstructorRef;
    var $t3: $1_object_TransferRef;
    var $t4: $1_object_ConstructorRef;
    var $t5: $1_object_DeriveRef;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $1_object_Object'$1_fungible_asset_Metadata';
    var $t10: $1_primary_fungible_store_DeriveRefPod;
    var $t11: $1_object_DeriveRef;
    var $t12: int;
    var $t13: $1_object_ConstructorRef;
    var $t14: $1_object_TransferRef;
    var $t15: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeriveRef': $1_object_DeriveRef;
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner_addr]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:72:5+1
    assume {:print "$at(158,3443,3444)"} true;
    assume {:print "$track_local(29,2,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:72:5+1
    assume {:print "$track_local(29,2,1):", $t1} $t1 == $t1;

    // $t7 := object::object_address<#0>($t1) on_abort goto L2 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:76:29+33
    assume {:print "$at(158,3623,3656)"} true;
    call $t7 := $1_object_object_address'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(158,3623,3656)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_local[metadata_addr]($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:76:13+13
    assume {:print "$track_local(29,2,6):", $t7} $t7 == $t7;

    // $t9 := object::address_to_object<fungible_asset::Metadata>($t7) on_abort goto L2 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:77:9+50
    assume {:print "$at(158,3666,3716)"} true;
    call $t9 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t7);
    if ($abort_flag) {
        assume {:print "$at(158,3666,3716)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // drop($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:77:9+50

    // $t10 := get_global<primary_fungible_store::DeriveRefPod>($t7) on_abort goto L2 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:78:27+13
    assume {:print "$at(158,3744,3757)"} true;
    if (!$ResourceExists($1_primary_fungible_store_DeriveRefPod_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $t7);
    }
    if ($abort_flag) {
        assume {:print "$at(158,3744,3757)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // $t11 := get_field<primary_fungible_store::DeriveRefPod>.metadata_derive_ref($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:78:26+63
    $t11 := $t10->$metadata_derive_ref;

    // trace_local[derive_ref]($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:78:13+10
    assume {:print "$track_local(29,2,5):", $t11} $t11 == $t11;

    // assume Identical($t12, object::spec_create_user_derived_object_address($t0, select object::DeriveRef.self<object::DeriveRef>($t11))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:177:9+89
    assume {:print "$at(156,7509,7598)"} true;
    assume ($t12 == $1_object_spec_create_user_derived_object_address($t0, $t11->$self));

    // $t13 := object::create_user_derived_object($t0, $t11) on_abort goto L2 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:79:32+58
    assume {:print "$at(158,3839,3897)"} true;
    call $t13 := $1_object_create_user_derived_object($t0, $t11);
    if ($abort_flag) {
        assume {:print "$at(158,3839,3897)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_local[constructor_ref]($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:79:13+15
    assume {:print "$track_local(29,2,4):", $t13} $t13 == $t13;

    // $t14 := object::generate_transfer_ref($t13) on_abort goto L2 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:81:29+46
    assume {:print "$at(158,4015,4061)"} true;
    call $t14 := $1_object_generate_transfer_ref($t13);
    if ($abort_flag) {
        assume {:print "$at(158,4015,4061)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // object::disable_ungated_transfer($t14) on_abort goto L2 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:82:9+46
    assume {:print "$at(158,4071,4117)"} true;
    call $1_object_disable_ungated_transfer($t14);
    if ($abort_flag) {
        assume {:print "$at(158,4071,4117)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // $t15 := fungible_asset::create_store<#0>($t13, $t1) on_abort goto L2 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:84:9+55
    assume {:print "$at(158,4128,4183)"} true;
    call $t15 := $1_fungible_asset_create_store'$1_fungible_asset_Metadata'($t13, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,4128,4183)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(29,2):", $t8} $t8 == $t8;
        goto L2;
    }

    // trace_return[0]($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:84:9+55
    assume {:print "$track_return(29,2,0):", $t15} $t15 == $t15;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:85:5+1
    assume {:print "$at(158,4188,4189)"} true;
L1:

    // return $t15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:85:5+1
    assume {:print "$at(158,4188,4189)"} true;
    $ret0 := $t15;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:85:5+1
L2:

    // abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:85:5+1
    assume {:print "$at(158,4188,4189)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::create_primary_store_enabled_fungible_asset [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+694
procedure {:inline 1} $1_primary_fungible_store_create_primary_store_enabled_fungible_asset(_$t0: $1_object_ConstructorRef, _$t1: $1_option_Option'u128', _$t2: $1_string_String, _$t3: $1_string_String, _$t4: int, _$t5: $1_string_String, _$t6: $1_string_String) returns ()
{
    // declare local variables
    var $t7: $signer;
    var $t8: $1_object_Object'$1_fungible_asset_Metadata';
    var $t9: int;
    var $t10: $signer;
    var $t11: $1_object_DeriveRef;
    var $t12: $1_primary_fungible_store_DeriveRefPod;
    var $t0: $1_object_ConstructorRef;
    var $t1: $1_option_Option'u128';
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: int;
    var $t5: $1_string_String;
    var $t6: $1_string_String;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_option_Option'u128'': $1_option_Option'u128';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'u8': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;

    // bytecode translation starts here
    // trace_local[constructor_ref]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$at(158,2145,2146)"} true;
    assume {:print "$track_local(29,3,0):", $t0} $t0 == $t0;

    // trace_local[maximum_supply]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$track_local(29,3,1):", $t1} $t1 == $t1;

    // trace_local[name]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$track_local(29,3,2):", $t2} $t2 == $t2;

    // trace_local[symbol]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$track_local(29,3,3):", $t3} $t3 == $t3;

    // trace_local[decimals]($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$track_local(29,3,4):", $t4} $t4 == $t4;

    // trace_local[icon_uri]($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$track_local(29,3,5):", $t5} $t5 == $t5;

    // trace_local[project_uri]($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:34:5+1
    assume {:print "$track_local(29,3,6):", $t6} $t6 == $t6;

    // $t8 := fungible_asset::add_fungibility($t0, $t1, $t2, $t3, $t4, $t5, $t6) on_abort goto L2 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:43:9+206
    assume {:print "$at(158,2420,2626)"} true;
    call $t8 := $1_fungible_asset_add_fungibility($t0, $t1, $t2, $t3, $t4, $t5, $t6);
    if ($abort_flag) {
        assume {:print "$at(158,2420,2626)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(29,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // drop($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:43:9+206

    // $t10 := object::generate_signer($t0) on_abort goto L2 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:52:29+40
    assume {:print "$at(158,2656,2696)"} true;
    call $t10 := $1_object_generate_signer($t0);
    if ($abort_flag) {
        assume {:print "$at(158,2656,2696)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(29,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t11 := object::generate_derive_ref($t0) on_abort goto L2 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:54:34+44
    assume {:print "$at(158,2776,2820)"} true;
    call $t11 := $1_object_generate_derive_ref($t0);
    if ($abort_flag) {
        assume {:print "$at(158,2776,2820)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(29,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // $t12 := pack primary_fungible_store::DeriveRefPod($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:53:31+103
    assume {:print "$at(158,2728,2831)"} true;
    $t12 := $1_primary_fungible_store_DeriveRefPod($t11);

    // move_to<primary_fungible_store::DeriveRefPod>($t12, $t10) on_abort goto L2 with $t9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:53:9+7
    if ($ResourceExists($1_primary_fungible_store_DeriveRefPod_$memory, $t10->$addr)) {
        call $ExecFailureAbort();
    } else {
        $1_primary_fungible_store_DeriveRefPod_$memory := $ResourceUpdate($1_primary_fungible_store_DeriveRefPod_$memory, $t10->$addr, $t12);
    }
    if ($abort_flag) {
        assume {:print "$at(158,2706,2713)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(29,3):", $t9} $t9 == $t9;
        goto L2;
    }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:56:5+1
    assume {:print "$at(158,2838,2839)"} true;
L1:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:56:5+1
    assume {:print "$at(158,2838,2839)"} true;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:56:5+1
L2:

    // abort($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:56:5+1
    assume {:print "$at(158,2838,2839)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::ensure_primary_store_exists<fungible_asset::Metadata> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:59:5+407
procedure {:inline 1} $1_primary_fungible_store_ensure_primary_store_exists'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: $1_object_Object'$1_fungible_asset_FungibleStore')
{
    // declare local variables
    var $t2: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:59:5+1
    assume {:print "$at(158,2946,2947)"} true;
    assume {:print "$track_local(29,6,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:59:5+1
    assume {:print "$track_local(29,6,1):", $t1} $t1 == $t1;

    // $t4 := primary_fungible_store::primary_store_address<#0>($t0, $t1) on_abort goto L4 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:63:26+38
    assume {:print "$at(158,3125,3163)"} true;
    call $t4 := $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,3125,3163)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_local[store_addr]($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:63:13+10
    assume {:print "$track_local(29,6,3):", $t4} $t4 == $t4;

    // $t6 := fungible_asset::store_exists($t4) on_abort goto L4 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:64:13+40
    assume {:print "$at(158,3177,3217)"} true;
    call $t6 := $1_fungible_asset_store_exists($t4);
    if ($abort_flag) {
        assume {:print "$at(158,3177,3217)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // if ($t6) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:64:9+174
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:65:39+10
    assume {:print "$at(158,3259,3269)"} true;
L1:

    // $t2 := object::address_to_object<fungible_asset::FungibleStore>($t4) on_abort goto L4 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:65:13+37
    assume {:print "$at(158,3233,3270)"} true;
    call $t2 := $1_object_address_to_object'$1_fungible_asset_FungibleStore'($t4);
    if ($abort_flag) {
        assume {:print "$at(158,3233,3270)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:64:9+174
    assume {:print "$at(158,3173,3347)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:67:34+5
    assume {:print "$at(158,3321,3326)"} true;
L0:

    // $t2 := primary_fungible_store::create_primary_store<#0>($t0, $t1) on_abort goto L4 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:67:13+37
    assume {:print "$at(158,3300,3337)"} true;
    call $t2 := $1_primary_fungible_store_create_primary_store'$1_fungible_asset_Metadata'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,3300,3337)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(29,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:64:9+174
    assume {:print "$at(158,3173,3347)"} true;
L2:

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:64:9+174
    assume {:print "$at(158,3173,3347)"} true;
    assume {:print "$track_return(29,6,0):", $t2} $t2 == $t2;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:69:5+1
    assume {:print "$at(158,3352,3353)"} true;
L3:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:69:5+1
    assume {:print "$at(158,3352,3353)"} true;
    $ret0 := $t2;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:69:5+1
L4:

    // abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:69:5+1
    assume {:print "$at(158,3352,3353)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::may_be_unburn [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:259:5+163
procedure {:inline 1} $1_primary_fungible_store_may_be_unburn(_$t0: $signer, _$t1: $1_object_Object'$1_fungible_asset_FungibleStore') returns ()
{
    // declare local variables
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: $1_object_TombStone;
    var $t0: $signer;
    var $t1: $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'$1_object_Object'$1_fungible_asset_FungibleStore'': $1_object_Object'$1_fungible_asset_FungibleStore';
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:259:5+1
    assume {:print "$at(158,12505,12506)"} true;
    assume {:print "$track_local(29,10,0):", $t0} $t0 == $t0;

    // trace_local[store]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:259:5+1
    assume {:print "$track_local(29,10,1):", $t1} $t1 == $t1;

    // $t2 := object::is_burnt<fungible_asset::FungibleStore>($t1) on_abort goto L4 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:260:13+23
    assume {:print "$at(158,12583,12606)"} true;
    call $t2 := $1_object_is_burnt'$1_fungible_asset_FungibleStore'($t1);
    if ($abort_flag) {
        assume {:print "$at(158,12583,12606)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(29,10):", $t3} $t3 == $t3;
        goto L4;
    }

    // if ($t2) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:260:9+82
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:261:28+5
    assume {:print "$at(158,12637,12642)"} true;
L1:

    // assume Identical($t4, select object::Object.inner<object::Object<fungible_asset::FungibleStore>>($t1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:488:9+34
    assume {:print "$at(156,19227,19261)"} true;
    assume ($t4 == $t1->$inner);

    // assume Identical($t5, global<object::TombStone>($t4)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:491:9+58
    assume {:print "$at(156,19362,19420)"} true;
    assume ($t5 == $ResourceValue($1_object_TombStone_$memory, $t4));

    // object::unburn<fungible_asset::FungibleStore>($t0, $t1) on_abort goto L4 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:261:13+28
    assume {:print "$at(158,12622,12650)"} true;
    call $1_object_unburn'$1_fungible_asset_FungibleStore'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(158,12622,12650)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(29,10):", $t3} $t3 == $t3;
        goto L4;
    }

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:261:41+1
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:260:9+82
    assume {:print "$at(158,12579,12661)"} true;
L0:

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:262:10+1
    assume {:print "$at(158,12661,12662)"} true;
L2:

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:263:5+1
    assume {:print "$at(158,12667,12668)"} true;
L3:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:263:5+1
    assume {:print "$at(158,12667,12668)"} true;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:263:5+1
L4:

    // abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:263:5+1
    assume {:print "$at(158,12667,12668)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun primary_fungible_store::primary_store_address<fungible_asset::Metadata> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:89:5+230
procedure {:inline 1} $1_primary_fungible_store_primary_store_address'$1_fungible_asset_Metadata'(_$t0: int, _$t1: $1_object_Object'$1_fungible_asset_Metadata') returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t0: int;
    var $t1: $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:89:5+1
    assume {:print "$at(158,4275,4276)"} true;
    assume {:print "$track_local(29,13,0):", $t0} $t0 == $t0;

    // trace_local[metadata]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:89:5+1
    assume {:print "$track_local(29,13,1):", $t1} $t1 == $t1;

    // $t3 := object::object_address<#0>($t1) on_abort goto L2 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:90:29+33
    assume {:print "$at(158,4392,4425)"} true;
    call $t3 := $1_object_object_address'$1_fungible_asset_Metadata'($t1);
    if ($abort_flag) {
        assume {:print "$at(158,4392,4425)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(29,13):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[metadata_addr]($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:90:13+13
    assume {:print "$track_local(29,13,2):", $t3} $t3 == $t3;

    // $t5 := opaque begin: object::create_user_derived_object_address($t0, $t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:91:9+64
    assume {:print "$at(158,4435,4499)"} true;

    // assume WellFormed($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:91:9+64
    assume $IsValid'address'($t5);

    // assume Eq<address>($t5, object::spec_create_user_derived_object_address($t0, $t3)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:91:9+64
    assume $IsEqual'address'($t5, $1_object_spec_create_user_derived_object_address($t0, $t3));

    // $t5 := opaque end: object::create_user_derived_object_address($t0, $t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:91:9+64

    // trace_return[0]($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:91:9+64
    assume {:print "$track_return(29,13,0):", $t5} $t5 == $t5;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:92:5+1
    assume {:print "$at(158,4504,4505)"} true;
L1:

    // return $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:92:5+1
    assume {:print "$at(158,4504,4505)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:92:5+1
L2:

    // abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/primary_fungible_store.move:92:5+1
    assume {:print "$at(158,4504,4505)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun math64::max [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:11:5+72
procedure {:inline 1} $1_math64_max(_$t0: int, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t0: int;
    var $t1: int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[a]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:11:5+1
    assume {:print "$at(63,281,282)"} true;
    assume {:print "$track_local(45,4,0):", $t0} $t0 == $t0;

    // trace_local[b]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:11:5+1
    assume {:print "$track_local(45,4,1):", $t1} $t1 == $t1;

    // $t3 := >=($t0, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:12:15+2
    assume {:print "$at(63,333,335)"} true;
    call $t3 := $Ge($t0, $t1);

    // if ($t3) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:12:9+20
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:12:21+1
L1:

    // $t2 := $t0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:12:9+20
    assume {:print "$at(63,327,347)"} true;
    $t2 := $t0;

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:12:9+20
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:12:28+1
L0:

    // $t2 := $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:12:9+20
    assume {:print "$at(63,327,347)"} true;
    $t2 := $t1;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:12:9+20
L2:

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:12:9+20
    assume {:print "$at(63,327,347)"} true;
    assume {:print "$track_return(45,4,0):", $t2} $t2 == $t2;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:13:5+1
    assume {:print "$at(63,352,353)"} true;
L3:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:13:5+1
    assume {:print "$at(63,352,353)"} true;
    $ret0 := $t2;
    return;

}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:7:9+50
function  $1_aptos_hash_spec_keccak256(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_keccak256(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:12:9+58
function  $1_aptos_hash_spec_sha2_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha2_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:17:9+58
function  $1_aptos_hash_spec_sha3_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha3_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:22:9+59
function  $1_aptos_hash_spec_ripemd160_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_ripemd160_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:27:9+61
function  $1_aptos_hash_spec_blake2b_256_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_blake2b_256_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:131:10+102
function {:inline} $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))): int {
    $1_table_with_length_spec_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:131:10+102
function {:inline} $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))): int {
    $1_table_with_length_spec_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:135:10+122
function {:inline} $1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), k: int): bool {
    $1_table_with_length_spec_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(t, k)
}

// spec fun at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:135:10+122
function {:inline} $1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), k: int): bool {
    $1_table_with_length_spec_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(t, k)
}

// struct big_vector::BigVector<aptos_discover::Q_set> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:18:5+136
datatype $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' {
    $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($buckets: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)), $end_index: int, $bucket_size: int)
}
function {:inline} $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_buckets(s: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', x: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set))): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' {
    $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(x, s->$end_index, s->$bucket_size)
}
function {:inline} $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_end_index(s: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', x: int): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' {
    $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(s->$buckets, x, s->$bucket_size)
}
function {:inline} $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_bucket_size(s: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', x: int): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' {
    $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(s->$buckets, s->$end_index, x)
}
function $IsValid'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(s: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'): bool {
    $IsValid'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(s->$buckets)
      && $IsValid'u64'(s->$end_index)
      && $IsValid'u64'(s->$bucket_size)
}
function {:inline} $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(s1: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', s2: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'): bool {
    s1 == s2
}

// struct big_vector::BigVector<aptos_discover::User_answer> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:18:5+136
datatype $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer' {
    $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($buckets: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)), $end_index: int, $bucket_size: int)
}
function {:inline} $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_buckets(s: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', x: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer))): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer' {
    $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(x, s->$end_index, s->$bucket_size)
}
function {:inline} $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_end_index(s: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', x: int): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer' {
    $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(s->$buckets, x, s->$bucket_size)
}
function {:inline} $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_bucket_size(s: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', x: int): $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer' {
    $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(s->$buckets, s->$end_index, x)
}
function $IsValid'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(s: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'): bool {
    $IsValid'$1_table_with_length_TableWithLength'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(s->$buckets)
      && $IsValid'u64'(s->$end_index)
      && $IsValid'u64'(s->$bucket_size)
}
function {:inline} $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(s1: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', s2: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'): bool {
    s1 == s2
}

// fun big_vector::borrow<aptos_discover::Q_set> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:65:5+252
procedure {:inline 1} $1_big_vector_borrow'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(_$t0: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', _$t1: int) returns ($ret0: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    var $t8: int;
    var $t9: int;
    var $t10: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t11: int;
    var $t12: int;
    var $t13: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $t0: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t1: int;
    var $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:65:5+1
    assume {:print "$at(46,2297,2298)"} true;
    assume {:print "$track_local(74,1,0):", $t0} $t0 == $t0;

    // trace_local[i]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:65:5+1
    assume {:print "$track_local(74,1,1):", $t1} $t1 == $t1;

    // $t2 := big_vector::length<#0>($t0) on_abort goto L4 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:66:21+12
    assume {:print "$at(46,2373,2385)"} true;
    call $t2 := $1_big_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t0);
    if ($abort_flag) {
        assume {:print "$at(46,2373,2385)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,1):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t4 := <($t1, $t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:66:19+1
    call $t4 := $Lt($t1, $t2);

    // if ($t4) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:66:9+72
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:66:9+72
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:66:9+72
    assume {:print "$at(46,2361,2433)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:66:9+72
L0:

    // $t5 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:66:59+20
    assume {:print "$at(46,2411,2431)"} true;
    $t5 := 1;
    assume $IsValid'u64'($t5);

    // $t6 := error::invalid_argument($t5) on_abort goto L4 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:66:35+45
    call $t6 := $1_error_invalid_argument($t5);
    if ($abort_flag) {
        assume {:print "$at(46,2387,2432)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,1):", $t3} $t3 == $t3;
        goto L4;
    }

    // trace_abort($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:66:9+72
    assume {:print "$at(46,2361,2433)"} true;
    assume {:print "$track_abort(74,1):", $t6} $t6 == $t6;

    // $t3 := move($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:66:9+72
    $t3 := $t6;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:66:9+72
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:67:51+4
    assume {:print "$at(46,2485,2489)"} true;
L2:

    // $t7 := get_field<big_vector::BigVector<#0>>.buckets($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:67:50+13
    assume {:print "$at(46,2484,2497)"} true;
    $t7 := $t0->$buckets;

    // $t8 := get_field<big_vector::BigVector<#0>>.bucket_size($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:67:69+16
    $t8 := $t0->$bucket_size;

    // $t9 := /($t1, $t8) on_abort goto L4 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:67:67+1
    call $t9 := $Div($t1, $t8);
    if ($abort_flag) {
        assume {:print "$at(46,2501,2502)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,1):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t10 := table_with_length::borrow<u64, vector<#0>>($t7, $t9) on_abort goto L4 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:67:24+62
    call $t10 := $1_table_with_length_borrow'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t7, $t9);
    if ($abort_flag) {
        assume {:print "$at(46,2458,2520)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,1):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t11 := get_field<big_vector::BigVector<#0>>.bucket_size($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:67:92+16
    $t11 := $t0->$bucket_size;

    // $t12 := %($t1, $t11) on_abort goto L4 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:67:90+1
    call $t12 := $Mod($t1, $t11);
    if ($abort_flag) {
        assume {:print "$at(46,2524,2525)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,1):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t13 := vector::borrow<#0>($t10, $t12) on_abort goto L4 with $t3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:67:9+100
    call $t13 := $1_vector_borrow'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t10, $t12);
    if ($abort_flag) {
        assume {:print "$at(46,2443,2543)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(74,1):", $t3} $t3 == $t3;
        goto L4;
    }

    // trace_return[0]($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:67:9+100
    assume {:print "$track_return(74,1,0):", $t13} $t13 == $t13;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:68:5+1
    assume {:print "$at(46,2548,2549)"} true;
L3:

    // return $t13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:68:5+1
    assume {:print "$at(46,2548,2549)"} true;
    $ret0 := $t13;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:68:5+1
L4:

    // abort($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:68:5+1
    assume {:print "$at(46,2548,2549)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun big_vector::borrow_mut<aptos_discover::Q_set> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:72:5+276
procedure {:inline 1} $1_big_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(_$t0: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), _$t1: int) returns ($ret0: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), $ret1: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))
{
    // declare local variables
    var $t2: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)));
    var $t9: int;
    var $t10: int;
    var $t11: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    var $t12: int;
    var $t13: int;
    var $t14: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t0: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t1: int;
    var $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:72:5+1
    assume {:print "$at(46,2673,2674)"} true;
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(74,2,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // trace_local[i]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:72:5+1
    assume {:print "$track_local(74,2,1):", $t1} $t1 == $t1;

    // $t2 := read_ref($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:28+4
    assume {:print "$at(46,2768,2772)"} true;
    $t2 := $Dereference($t0);

    // $t3 := big_vector::length<#0>($t2) on_abort goto L4 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:21+12
    call $t3 := $1_big_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t2);
    if ($abort_flag) {
        assume {:print "$at(46,2761,2773)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(74,2):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t5 := <($t1, $t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:19+1
    call $t5 := $Lt($t1, $t3);

    // if ($t5) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:9+72
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:9+72
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:9+72
    assume {:print "$at(46,2749,2821)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:9+72
L0:

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:9+72
    assume {:print "$at(46,2749,2821)"} true;

    // drop($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:9+72

    // $t6 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:59+20
    $t6 := 1;
    assume $IsValid'u64'($t6);

    // $t7 := error::invalid_argument($t6) on_abort goto L4 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:35+45
    call $t7 := $1_error_invalid_argument($t6);
    if ($abort_flag) {
        assume {:print "$at(46,2775,2820)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(74,2):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:9+72
    assume {:print "$at(46,2749,2821)"} true;
    assume {:print "$track_abort(74,2):", $t7} $t7 == $t7;

    // $t4 := move($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:9+72
    $t4 := $t7;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:73:9+72
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:74:63+4
    assume {:print "$at(46,2885,2889)"} true;
L2:

    // $t8 := borrow_field<big_vector::BigVector<#0>>.buckets($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:74:58+17
    assume {:print "$at(46,2880,2897)"} true;
    $t8 := $ChildMutation($t0, 0, $Dereference($t0)->$buckets);

    // $t9 := get_field<big_vector::BigVector<#0>>.bucket_size($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:74:81+16
    $t9 := $Dereference($t0)->$bucket_size;

    // $t10 := /($t1, $t9) on_abort goto L4 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:74:79+1
    call $t10 := $Div($t1, $t9);
    if ($abort_flag) {
        assume {:print "$at(46,2901,2902)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(74,2):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t11 := table_with_length::borrow_mut<u64, vector<#0>>($t8, $t10) on_abort goto L4 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:74:28+70
    call $t11,$t8 := $1_table_with_length_borrow_mut'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t8, $t10);
    if ($abort_flag) {
        assume {:print "$at(46,2850,2920)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(74,2):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t12 := get_field<big_vector::BigVector<#0>>.bucket_size($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:74:104+16
    $t12 := $Dereference($t0)->$bucket_size;

    // $t13 := %($t1, $t12) on_abort goto L4 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:74:102+1
    call $t13 := $Mod($t1, $t12);
    if ($abort_flag) {
        assume {:print "$at(46,2924,2925)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(74,2):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t14 := vector::borrow_mut<#0>($t11, $t13) on_abort goto L4 with $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:74:9+112
    call $t14,$t11 := $1_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t11, $t13);
    if ($abort_flag) {
        assume {:print "$at(46,2831,2943)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(74,2):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_return[0]($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:74:9+112
    $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' := $Dereference($t14);
    assume {:print "$track_return(74,2,0):", $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'} $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' == $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:74:9+112
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(74,2,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:74:9+112
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(74,2,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:75:5+1
    assume {:print "$at(46,2948,2949)"} true;
L3:

    // return $t14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:75:5+1
    assume {:print "$at(46,2948,2949)"} true;
    $ret0 := $t14;
    $ret1 := $t0;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:75:5+1
L4:

    // abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:75:5+1
    assume {:print "$at(46,2948,2949)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun big_vector::empty<aptos_discover::Q_set> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:27:5+280
procedure {:inline 1} $1_big_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(_$t0: int) returns ($ret0: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    var $t7: int;
    var $t8: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t0: int;
    var $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[bucket_size]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:27:5+1
    assume {:print "$at(46,847,848)"} true;
    assume {:print "$track_local(74,6,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:31+1
    assume {:print "$at(46,946,947)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := >($t0, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:29+1
    call $t2 := $Gt($t0, $t1);

    // if ($t2) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:9+68
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:9+68
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:9+68
    assume {:print "$at(46,924,992)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:58+17
L0:

    // $t3 := 4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:58+17
    assume {:print "$at(46,973,990)"} true;
    $t3 := 4;
    assume $IsValid'u64'($t3);

    // $t4 := error::invalid_argument($t3) on_abort goto L4 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:34+42
    call $t4 := $1_error_invalid_argument($t3);
    if ($abort_flag) {
        assume {:print "$at(46,949,991)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(74,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:9+68
    assume {:print "$at(46,924,992)"} true;
    assume {:print "$track_abort(74,6):", $t4} $t4 == $t4;

    // $t5 := move($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:9+68
    $t5 := $t4;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:9+68
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:30:22+24
    assume {:print "$at(46,1035,1059)"} true;
L2:

    // $t6 := table_with_length::new<u64, vector<#0>>() on_abort goto L4 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:30:22+24
    assume {:print "$at(46,1035,1059)"} true;
    call $t6 := $1_table_with_length_new'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''();
    if ($abort_flag) {
        assume {:print "$at(46,1035,1059)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(74,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t7 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:31:24+1
    assume {:print "$at(46,1084,1085)"} true;
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // $t8 := pack big_vector::BigVector<#0>($t6, $t7, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:29:9+119
    assume {:print "$at(46,1002,1121)"} true;
    $t8 := $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t6, $t7, $t0);

    // trace_return[0]($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:29:9+119
    assume {:print "$track_return(74,6,0):", $t8} $t8 == $t8;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:34:5+1
    assume {:print "$at(46,1126,1127)"} true;
L3:

    // return $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:34:5+1
    assume {:print "$at(46,1126,1127)"} true;
    $ret0 := $t8;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:34:5+1
L4:

    // abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:34:5+1
    assume {:print "$at(46,1126,1127)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun big_vector::empty<aptos_discover::User_answer> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:27:5+280
procedure {:inline 1} $1_big_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(_$t0: int) returns ($ret0: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')
{
    // declare local variables
    var $t1: int;
    var $t2: bool;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
    var $t7: int;
    var $t8: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $t0: int;
    var $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'': $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[bucket_size]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:27:5+1
    assume {:print "$at(46,847,848)"} true;
    assume {:print "$track_local(74,6,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:31+1
    assume {:print "$at(46,946,947)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := >($t0, $t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:29+1
    call $t2 := $Gt($t0, $t1);

    // if ($t2) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:9+68
    if ($t2) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:9+68
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:9+68
    assume {:print "$at(46,924,992)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:58+17
L0:

    // $t3 := 4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:58+17
    assume {:print "$at(46,973,990)"} true;
    $t3 := 4;
    assume $IsValid'u64'($t3);

    // $t4 := error::invalid_argument($t3) on_abort goto L4 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:34+42
    call $t4 := $1_error_invalid_argument($t3);
    if ($abort_flag) {
        assume {:print "$at(46,949,991)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(74,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // trace_abort($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:9+68
    assume {:print "$at(46,924,992)"} true;
    assume {:print "$track_abort(74,6):", $t4} $t4 == $t4;

    // $t5 := move($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:9+68
    $t5 := $t4;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:28:9+68
    goto L4;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:30:22+24
    assume {:print "$at(46,1035,1059)"} true;
L2:

    // $t6 := table_with_length::new<u64, vector<#0>>() on_abort goto L4 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:30:22+24
    assume {:print "$at(46,1035,1059)"} true;
    call $t6 := $1_table_with_length_new'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''();
    if ($abort_flag) {
        assume {:print "$at(46,1035,1059)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(74,6):", $t5} $t5 == $t5;
        goto L4;
    }

    // $t7 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:31:24+1
    assume {:print "$at(46,1084,1085)"} true;
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // $t8 := pack big_vector::BigVector<#0>($t6, $t7, $t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:29:9+119
    assume {:print "$at(46,1002,1121)"} true;
    $t8 := $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t6, $t7, $t0);

    // trace_return[0]($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:29:9+119
    assume {:print "$track_return(74,6,0):", $t8} $t8 == $t8;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:34:5+1
    assume {:print "$at(46,1126,1127)"} true;
L3:

    // return $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:34:5+1
    assume {:print "$at(46,1126,1127)"} true;
    $ret0 := $t8;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:34:5+1
L4:

    // abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:34:5+1
    assume {:print "$at(46,1126,1127)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun big_vector::length<aptos_discover::Q_set> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:294:5+77
procedure {:inline 1} $1_big_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(_$t0: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:294:5+1
    assume {:print "$at(46,13521,13522)"} true;
    assume {:print "$track_local(74,9,0):", $t0} $t0 == $t0;

    // $t1 := get_field<big_vector::BigVector<#0>>.end_index($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:295:9+14
    assume {:print "$at(46,13578,13592)"} true;
    $t1 := $t0->$end_index;

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:295:9+14
    assume {:print "$track_return(74,9,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:296:5+1
    assume {:print "$at(46,13597,13598)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:296:5+1
    assume {:print "$at(46,13597,13598)"} true;
    $ret0 := $t1;
    return;

}

// fun big_vector::length<aptos_discover::User_answer> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:294:5+77
procedure {:inline 1} $1_big_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(_$t0: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'': $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:294:5+1
    assume {:print "$at(46,13521,13522)"} true;
    assume {:print "$track_local(74,9,0):", $t0} $t0 == $t0;

    // $t1 := get_field<big_vector::BigVector<#0>>.end_index($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:295:9+14
    assume {:print "$at(46,13578,13592)"} true;
    $t1 := $t0->$end_index;

    // trace_return[0]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:295:9+14
    assume {:print "$track_return(74,9,0):", $t1} $t1 == $t1;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:296:5+1
    assume {:print "$at(46,13597,13598)"} true;
L1:

    // return $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:296:5+1
    assume {:print "$at(46,13597,13598)"} true;
    $ret0 := $t1;
    return;

}

// fun big_vector::push_back<aptos_discover::Q_set> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:97:5+563
procedure {:inline 1} $1_big_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(_$t0: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), _$t1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) returns ($ret0: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)));
    var $t13: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t14: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)));
    var $t15: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    var $t16: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)));
    var $t17: int;
    var $t18: int;
    var $t19: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: $Mutation (int);
    var $t0: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets<big_vector::BigVector<#0>>($t0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:70:9+47
    assume {:print "$at(47,2926,2973)"} true;
    assume ($t3 == $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($Dereference($t0)->$buckets));

    // assume Identical($t4, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets<big_vector::BigVector<#0>>($t0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:81:9+47
    assume {:print "$at(47,3413,3460)"} true;
    assume ($t4 == $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($Dereference($t0)->$buckets));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:97:5+1
    assume {:print "$at(46,3846,3847)"} true;
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(74,11,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // trace_local[val]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:97:5+1
    assume {:print "$track_local(74,11,1):", $t1} $t1 == $t1;

    // $t5 := get_field<big_vector::BigVector<#0>>.buckets($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:98:53+13
    assume {:print "$at(46,3964,3977)"} true;
    $t5 := $Dereference($t0)->$buckets;

    // $t6 := table_with_length::length<u64, vector<#0>>($t5) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:98:27+40
    call $t6 := $1_table_with_length_length'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t5);
    if ($abort_flag) {
        assume {:print "$at(46,3938,3978)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // trace_local[num_buckets]($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:98:13+11
    assume {:print "$track_local(74,11,2):", $t6} $t6 == $t6;

    // $t8 := get_field<big_vector::BigVector<#0>>.end_index($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:99:13+14
    assume {:print "$at(46,3992,4006)"} true;
    $t8 := $Dereference($t0)->$end_index;

    // $t9 := get_field<big_vector::BigVector<#0>>.bucket_size($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:99:45+16
    $t9 := $Dereference($t0)->$bucket_size;

    // $t10 := *($t6, $t9) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:99:43+1
    call $t10 := $MulU64($t6, $t9);
    if ($abort_flag) {
        assume {:print "$at(46,4022,4023)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // $t11 := ==($t8, $t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:99:28+2
    $t11 := $IsEqual'u64'($t8, $t10);

    // if ($t11) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:99:9+369
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:100:41+4
    assume {:print "$at(46,4084,4088)"} true;
L1:

    // $t12 := borrow_field<big_vector::BigVector<#0>>.buckets($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:100:36+17
    assume {:print "$at(46,4079,4096)"} true;
    $t12 := $ChildMutation($t0, 0, $Dereference($t0)->$buckets);

    // $t13 := vector::empty<#0>() on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:100:68+15
    call $t13 := $1_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'();
    if ($abort_flag) {
        assume {:print "$at(46,4111,4126)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // table_with_length::add<u64, vector<#0>>($t12, $t6, $t13) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:100:13+71
    call $t12 := $1_table_with_length_add'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t12, $t6, $t13);
    if ($abort_flag) {
        assume {:print "$at(46,4056,4127)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // write_back[Reference($t0).buckets (table_with_length::TableWithLength<u64, vector<#0>>)]($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:100:13+71
    $t0 := $UpdateMutation($t0, $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_buckets($Dereference($t0), $Dereference($t12)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:100:13+71
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(74,11,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // $t14 := borrow_field<big_vector::BigVector<#0>>.buckets($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:61+17
    assume {:print "$at(46,4189,4206)"} true;
    $t14 := $ChildMutation($t0, 0, $Dereference($t0)->$buckets);

    // $t15 := table_with_length::borrow_mut<u64, vector<#0>>($t14, $t6) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:31+61
    call $t15,$t14 := $1_table_with_length_borrow_mut'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14, $t6);
    if ($abort_flag) {
        assume {:print "$at(46,4159,4220)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // vector::push_back<#0>($t15, $t1) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:13+85
    call $t15 := $1_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t15, $t1);
    if ($abort_flag) {
        assume {:print "$at(46,4141,4226)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // write_back[Reference($t14)[]]($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:13+85
    $t14 := $UpdateMutation($t14, UpdateTable($Dereference($t14), ReadVec($t15->p, LenVec($t14->p)), $Dereference($t15)));

    // write_back[Reference($t0).buckets (table_with_length::TableWithLength<u64, vector<#0>>)]($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:13+85
    $t0 := $UpdateMutation($t0, $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_buckets($Dereference($t0), $Dereference($t14)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:13+85
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(74,11,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:98+1
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:66+4
    assume {:print "$at(46,4310,4314)"} true;
L0:

    // $t16 := borrow_field<big_vector::BigVector<#0>>.buckets($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:61+17
    assume {:print "$at(46,4305,4322)"} true;
    $t16 := $ChildMutation($t0, 0, $Dereference($t0)->$buckets);

    // $t17 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:94+1
    $t17 := 1;
    assume $IsValid'u64'($t17);

    // $t18 := -($t6, $t17) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:92+1
    call $t18 := $Sub($t6, $t17);
    if ($abort_flag) {
        assume {:print "$at(46,4336,4337)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // $t19 := table_with_length::borrow_mut<u64, vector<#0>>($t16, $t18) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:31+65
    call $t19,$t16 := $1_table_with_length_borrow_mut'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t16, $t18);
    if ($abort_flag) {
        assume {:print "$at(46,4275,4340)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // vector::push_back<#0>($t19, $t1) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:13+89
    call $t19 := $1_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t19, $t1);
    if ($abort_flag) {
        assume {:print "$at(46,4257,4346)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // write_back[Reference($t16)[]]($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:13+89
    $t16 := $UpdateMutation($t16, UpdateTable($Dereference($t16), ReadVec($t19->p, LenVec($t16->p)), $Dereference($t19)));

    // write_back[Reference($t0).buckets (table_with_length::TableWithLength<u64, vector<#0>>)]($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:13+89
    $t0 := $UpdateMutation($t0, $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_buckets($Dereference($t0), $Dereference($t16)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:13+89
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(74,11,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:26+4
    assume {:print "$at(46,4384,4388)"} true;
L2:

    // $t20 := get_field<big_vector::BigVector<#0>>.end_index($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:26+14
    assume {:print "$at(46,4384,4398)"} true;
    $t20 := $Dereference($t0)->$end_index;

    // $t21 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:43+1
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t20, $t21) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:41+1
    call $t22 := $AddU64($t20, $t21);
    if ($abort_flag) {
        assume {:print "$at(46,4399,4400)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // $t23 := borrow_field<big_vector::BigVector<#0>>.end_index($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:9+14
    $t23 := $ChildMutation($t0, 1, $Dereference($t0)->$end_index);

    // write_ref($t23, $t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:9+35
    $t23 := $UpdateMutation($t23, $t22);

    // write_back[Reference($t0).end_index (u64)]($t23) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:9+35
    $t0 := $UpdateMutation($t0, $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_end_index($Dereference($t0), $Dereference($t23)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:9+35
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(74,11,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:44+1
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(74,11,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:44+1

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:106:5+1
    assume {:print "$at(46,4408,4409)"} true;
L3:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:106:5+1
    assume {:print "$at(46,4408,4409)"} true;
    $ret0 := $t0;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:106:5+1
L4:

    // abort($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:106:5+1
    assume {:print "$at(46,4408,4409)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun big_vector::push_back<aptos_discover::User_answer> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:97:5+563
procedure {:inline 1} $1_big_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(_$t0: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), _$t1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) returns ($ret0: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)));
    var $t13: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var $t14: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)));
    var $t15: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
    var $t16: $Mutation (Table int (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)));
    var $t17: int;
    var $t18: int;
    var $t19: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: $Mutation (int);
    var $t0: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var $t1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer;
    var $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'': $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets<big_vector::BigVector<#0>>($t0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:70:9+47
    assume {:print "$at(47,2926,2973)"} true;
    assume ($t3 == $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($Dereference($t0)->$buckets));

    // assume Identical($t4, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets<big_vector::BigVector<#0>>($t0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:81:9+47
    assume {:print "$at(47,3413,3460)"} true;
    assume ($t4 == $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($Dereference($t0)->$buckets));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:97:5+1
    assume {:print "$at(46,3846,3847)"} true;
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(74,11,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // trace_local[val]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:97:5+1
    assume {:print "$track_local(74,11,1):", $t1} $t1 == $t1;

    // $t5 := get_field<big_vector::BigVector<#0>>.buckets($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:98:53+13
    assume {:print "$at(46,3964,3977)"} true;
    $t5 := $Dereference($t0)->$buckets;

    // $t6 := table_with_length::length<u64, vector<#0>>($t5) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:98:27+40
    call $t6 := $1_table_with_length_length'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t5);
    if ($abort_flag) {
        assume {:print "$at(46,3938,3978)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // trace_local[num_buckets]($t6) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:98:13+11
    assume {:print "$track_local(74,11,2):", $t6} $t6 == $t6;

    // $t8 := get_field<big_vector::BigVector<#0>>.end_index($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:99:13+14
    assume {:print "$at(46,3992,4006)"} true;
    $t8 := $Dereference($t0)->$end_index;

    // $t9 := get_field<big_vector::BigVector<#0>>.bucket_size($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:99:45+16
    $t9 := $Dereference($t0)->$bucket_size;

    // $t10 := *($t6, $t9) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:99:43+1
    call $t10 := $MulU64($t6, $t9);
    if ($abort_flag) {
        assume {:print "$at(46,4022,4023)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // $t11 := ==($t8, $t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:99:28+2
    $t11 := $IsEqual'u64'($t8, $t10);

    // if ($t11) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:99:9+369
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:100:41+4
    assume {:print "$at(46,4084,4088)"} true;
L1:

    // $t12 := borrow_field<big_vector::BigVector<#0>>.buckets($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:100:36+17
    assume {:print "$at(46,4079,4096)"} true;
    $t12 := $ChildMutation($t0, 0, $Dereference($t0)->$buckets);

    // $t13 := vector::empty<#0>() on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:100:68+15
    call $t13 := $1_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'();
    if ($abort_flag) {
        assume {:print "$at(46,4111,4126)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // table_with_length::add<u64, vector<#0>>($t12, $t6, $t13) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:100:13+71
    call $t12 := $1_table_with_length_add'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t12, $t6, $t13);
    if ($abort_flag) {
        assume {:print "$at(46,4056,4127)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // write_back[Reference($t0).buckets (table_with_length::TableWithLength<u64, vector<#0>>)]($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:100:13+71
    $t0 := $UpdateMutation($t0, $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_buckets($Dereference($t0), $Dereference($t12)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:100:13+71
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(74,11,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // $t14 := borrow_field<big_vector::BigVector<#0>>.buckets($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:61+17
    assume {:print "$at(46,4189,4206)"} true;
    $t14 := $ChildMutation($t0, 0, $Dereference($t0)->$buckets);

    // $t15 := table_with_length::borrow_mut<u64, vector<#0>>($t14, $t6) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:31+61
    call $t15,$t14 := $1_table_with_length_borrow_mut'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t14, $t6);
    if ($abort_flag) {
        assume {:print "$at(46,4159,4220)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // vector::push_back<#0>($t15, $t1) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:13+85
    call $t15 := $1_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t15, $t1);
    if ($abort_flag) {
        assume {:print "$at(46,4141,4226)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // write_back[Reference($t14)[]]($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:13+85
    $t14 := $UpdateMutation($t14, UpdateTable($Dereference($t14), ReadVec($t15->p, LenVec($t14->p)), $Dereference($t15)));

    // write_back[Reference($t0).buckets (table_with_length::TableWithLength<u64, vector<#0>>)]($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:13+85
    $t0 := $UpdateMutation($t0, $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_buckets($Dereference($t0), $Dereference($t14)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:13+85
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(74,11,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:101:98+1
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:66+4
    assume {:print "$at(46,4310,4314)"} true;
L0:

    // $t16 := borrow_field<big_vector::BigVector<#0>>.buckets($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:61+17
    assume {:print "$at(46,4305,4322)"} true;
    $t16 := $ChildMutation($t0, 0, $Dereference($t0)->$buckets);

    // $t17 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:94+1
    $t17 := 1;
    assume $IsValid'u64'($t17);

    // $t18 := -($t6, $t17) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:92+1
    call $t18 := $Sub($t6, $t17);
    if ($abort_flag) {
        assume {:print "$at(46,4336,4337)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // $t19 := table_with_length::borrow_mut<u64, vector<#0>>($t16, $t18) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:31+65
    call $t19,$t16 := $1_table_with_length_borrow_mut'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t16, $t18);
    if ($abort_flag) {
        assume {:print "$at(46,4275,4340)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // vector::push_back<#0>($t19, $t1) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:13+89
    call $t19 := $1_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t19, $t1);
    if ($abort_flag) {
        assume {:print "$at(46,4257,4346)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // write_back[Reference($t16)[]]($t19) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:13+89
    $t16 := $UpdateMutation($t16, UpdateTable($Dereference($t16), ReadVec($t19->p, LenVec($t16->p)), $Dereference($t19)));

    // write_back[Reference($t0).buckets (table_with_length::TableWithLength<u64, vector<#0>>)]($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:13+89
    $t0 := $UpdateMutation($t0, $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_buckets($Dereference($t0), $Dereference($t16)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:103:13+89
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(74,11,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:26+4
    assume {:print "$at(46,4384,4388)"} true;
L2:

    // $t20 := get_field<big_vector::BigVector<#0>>.end_index($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:26+14
    assume {:print "$at(46,4384,4398)"} true;
    $t20 := $Dereference($t0)->$end_index;

    // $t21 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:43+1
    $t21 := 1;
    assume $IsValid'u64'($t21);

    // $t22 := +($t20, $t21) on_abort goto L4 with $t7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:41+1
    call $t22 := $AddU64($t20, $t21);
    if ($abort_flag) {
        assume {:print "$at(46,4399,4400)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(74,11):", $t7} $t7 == $t7;
        goto L4;
    }

    // $t23 := borrow_field<big_vector::BigVector<#0>>.end_index($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:9+14
    $t23 := $ChildMutation($t0, 1, $Dereference($t0)->$end_index);

    // write_ref($t23, $t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:9+35
    $t23 := $UpdateMutation($t23, $t22);

    // write_back[Reference($t0).end_index (u64)]($t23) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:9+35
    $t0 := $UpdateMutation($t0, $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_end_index($Dereference($t0), $Dereference($t23)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:9+35
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(74,11,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:44+1
    $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(74,11,0):", $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:105:44+1

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:106:5+1
    assume {:print "$at(46,4408,4409)"} true;
L3:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:106:5+1
    assume {:print "$at(46,4408,4409)"} true;
    $ret0 := $t0;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:106:5+1
L4:

    // abort($t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.move:106:5+1
    assume {:print "$at(46,4408,4409)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// struct smart_vector::SmartVector<aptos_discover::Q_set> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:23:5+181
datatype $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' {
    $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($inline_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), $big_vec: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'', $inline_capacity: $1_option_Option'u64', $bucket_size: $1_option_Option'u64')
}
function {:inline} $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_inline_vec(s: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', x: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)): $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' {
    $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(x, s->$big_vec, s->$inline_capacity, s->$bucket_size)
}
function {:inline} $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_big_vec(s: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', x: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''): $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' {
    $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(s->$inline_vec, x, s->$inline_capacity, s->$bucket_size)
}
function {:inline} $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_inline_capacity(s: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', x: $1_option_Option'u64'): $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' {
    $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(s->$inline_vec, s->$big_vec, x, s->$bucket_size)
}
function {:inline} $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_bucket_size(s: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', x: $1_option_Option'u64'): $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' {
    $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(s->$inline_vec, s->$big_vec, s->$inline_capacity, x)
}
function $IsValid'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(s: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'): bool {
    $IsValid'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(s->$inline_vec)
      && $IsValid'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(s->$big_vec)
      && $IsValid'$1_option_Option'u64''(s->$inline_capacity)
      && $IsValid'$1_option_Option'u64''(s->$bucket_size)
}
function {:inline} $IsEqual'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(s1: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', s2: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'): bool {
    $IsEqual'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(s1->$inline_vec, s2->$inline_vec)
    && $IsEqual'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''(s1->$big_vec, s2->$big_vec)
    && $IsEqual'$1_option_Option'u64''(s1->$inline_capacity, s2->$inline_capacity)
    && $IsEqual'$1_option_Option'u64''(s1->$bucket_size, s2->$bucket_size)}

// struct smart_vector::SmartVector<aptos_discover::User_answer> at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:23:5+181
datatype $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer' {
    $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($inline_vec: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer), $big_vec: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'', $inline_capacity: $1_option_Option'u64', $bucket_size: $1_option_Option'u64')
}
function {:inline} $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_inline_vec(s: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', x: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer)): $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer' {
    $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(x, s->$big_vec, s->$inline_capacity, s->$bucket_size)
}
function {:inline} $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_big_vec(s: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', x: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''): $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer' {
    $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(s->$inline_vec, x, s->$inline_capacity, s->$bucket_size)
}
function {:inline} $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_inline_capacity(s: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', x: $1_option_Option'u64'): $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer' {
    $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(s->$inline_vec, s->$big_vec, x, s->$bucket_size)
}
function {:inline} $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_bucket_size(s: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', x: $1_option_Option'u64'): $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer' {
    $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(s->$inline_vec, s->$big_vec, s->$inline_capacity, x)
}
function $IsValid'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(s: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'): bool {
    $IsValid'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(s->$inline_vec)
      && $IsValid'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(s->$big_vec)
      && $IsValid'$1_option_Option'u64''(s->$inline_capacity)
      && $IsValid'$1_option_Option'u64''(s->$bucket_size)
}
function {:inline} $IsEqual'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(s1: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', s2: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'): bool {
    $IsEqual'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(s1->$inline_vec, s2->$inline_vec)
    && $IsEqual'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''(s1->$big_vec, s2->$big_vec)
    && $IsEqual'$1_option_Option'u64''(s1->$inline_capacity, s2->$inline_capacity)
    && $IsEqual'$1_option_Option'u64''(s1->$bucket_size, s2->$bucket_size)}

// fun smart_vector::borrow<aptos_discover::Q_set> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:95:5+387
procedure {:inline 1} $1_smart_vector_borrow'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(_$t0: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', _$t1: int) returns ($ret0: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set)
{
    // declare local variables
    var $t2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t10: int;
    var $t11: bool;
    var $t12: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t13: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';
    var $t14: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t15: bool;
    var $t16: int;
    var $t0: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t1: int;
    var $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:95:5+1
    assume {:print "$at(50,3575,3576)"} true;
    assume {:print "$track_local(85,2,0):", $t0} $t0 == $t0;

    // trace_local[i]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:95:5+1
    assume {:print "$track_local(85,2,1):", $t1} $t1 == $t1;

    // $t4 := smart_vector::length<#0>($t0) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:96:21+12
    assume {:print "$at(50,3653,3665)"} true;
    call $t4 := $1_smart_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t0);
    if ($abort_flag) {
        assume {:print "$at(50,3653,3665)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(85,2):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t6 := <($t1, $t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:96:19+1
    call $t6 := $Lt($t1, $t4);

    // if ($t6) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:96:9+72
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:96:9+72
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:96:9+72
    assume {:print "$at(50,3641,3713)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:96:9+72
L0:

    // $t7 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:96:59+20
    assume {:print "$at(50,3691,3711)"} true;
    $t7 := 1;
    assume $IsValid'u64'($t7);

    // $t8 := error::invalid_argument($t7) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:96:35+45
    call $t8 := $1_error_invalid_argument($t7);
    if ($abort_flag) {
        assume {:print "$at(50,3667,3712)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(85,2):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:96:9+72
    assume {:print "$at(50,3641,3713)"} true;
    assume {:print "$track_abort(85,2):", $t8} $t8 == $t8;

    // $t5 := move($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:96:9+72
    $t5 := $t8;

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:96:9+72
    goto L7;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:97:42+4
    assume {:print "$at(50,3756,3760)"} true;
L2:

    // $t9 := get_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:97:41+16
    assume {:print "$at(50,3755,3771)"} true;
    $t9 := $t0->$inline_vec;

    // $t10 := vector::length<#0>($t9) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:97:26+32
    call $t10 := $1_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t9);
    if ($abort_flag) {
        assume {:print "$at(50,3740,3772)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(85,2):", $t5} $t5 == $t5;
        goto L7;
    }

    // trace_local[inline_len]($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:97:13+10
    assume {:print "$track_local(85,2,3):", $t10} $t10 == $t10;

    // $t11 := <($t1, $t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:98:15+1
    assume {:print "$at(50,3788,3789)"} true;
    call $t11 := $Lt($t1, $t10);

    // if ($t11) goto L4 else goto L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:98:9+174
    if ($t11) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:99:29+4
    assume {:print "$at(50,3832,3836)"} true;
L4:

    // $t12 := get_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:99:28+16
    assume {:print "$at(50,3831,3847)"} true;
    $t12 := $t0->$inline_vec;

    // $t2 := vector::borrow<#0>($t12, $t1) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:99:13+35
    call $t2 := $1_vector_borrow'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t12, $t1);
    if ($abort_flag) {
        assume {:print "$at(50,3816,3851)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(85,2):", $t5} $t5 == $t5;
        goto L7;
    }

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:98:9+174
    assume {:print "$at(50,3782,3956)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:48+4
    assume {:print "$at(50,3916,3920)"} true;
L3:

    // $t13 := get_field<smart_vector::SmartVector<#0>>.big_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:47+13
    assume {:print "$at(50,3915,3928)"} true;
    $t13 := $t0->$big_vec;

    // $t14 := opaque begin: option::borrow<big_vector::BigVector<#0>>($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:32+29

    // assume Identical($t15, option::spec_is_none<big_vector::BigVector<#0>>($t13)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:32+29
    assume ($t15 == $1_option_spec_is_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t13));

    // if ($t15) goto L9 else goto L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:32+29
    if ($t15) { goto L9; } else { goto L8; }

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:32+29
L9:

    // assume And(option::spec_is_none<big_vector::BigVector<#0>>($t13), Eq(262145, $t5)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:32+29
    assume {:print "$at(50,3900,3929)"} true;
    assume ($1_option_spec_is_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t13) && $IsEqual'num'(262145, $t5));

    // trace_abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:32+29
    assume {:print "$at(50,3900,3929)"} true;
    assume {:print "$track_abort(85,2):", $t5} $t5 == $t5;

    // goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:32+29
    goto L7;

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:32+29
L8:

    // assume And(WellFormed($t14), And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($t14), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), 0), Eq<u64>(select big_vector::BigVector.end_index($t14), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($t14), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), 0))), Le(select big_vector::BigVector.end_index($t14), Mul(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), select big_vector::BigVector.bucket_size($t14)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), 1)): Eq<num>(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($t14), i)), select big_vector::BigVector.bucket_size($t14)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), 0), Le(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($t14), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), 1))), select big_vector::BigVector.bucket_size($t14)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($t14), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), Div(Sub(Add(select big_vector::BigVector.end_index($t14), select big_vector::BigVector.bucket_size($t14)), 1), select big_vector::BigVector.bucket_size($t14)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), 0), Eq<u64>(select big_vector::BigVector.end_index($t14), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), 1), select big_vector::BigVector.bucket_size($t14)), Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($t14), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), 1)))), select big_vector::BigVector.end_index($t14))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14))): Not(big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($t14), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($t14), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), 0), Gt(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($t14), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t14)), 1))), 0)))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:32+29
    assume {:print "$at(50,3900,3929)"} true;
    assume ($IsValid'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14) && (((((((((((!$IsEqual'u64'($t14->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets), 0) ==> $IsEqual'u64'($t14->$end_index, 0))) && ($IsEqual'u64'($t14->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets), 0))) && ($t14->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets) * $t14->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets), 0) || (var $range_0 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets) - 1)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets, i)), $t14->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets) - 1))) <= $t14->$bucket_size))) && (var $range_2 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets), ((($t14->$end_index + $t14->$bucket_size) - 1) div $t14->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets), 0) && $IsEqual'u64'($t14->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets) - 1) * $t14->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets) - 1)))), $t14->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14->$buckets) - 1))) > 0))));

    // assume Eq<big_vector::BigVector<#0>>($t14, option::spec_borrow<big_vector::BigVector<#0>>($t13)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:32+29
    assume $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14, $1_option_spec_borrow'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t13));

    // $t14 := opaque end: option::borrow<big_vector::BigVector<#0>>($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:32+29

    // $t16 := -($t1, $t10) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:65+1
    call $t16 := $Sub($t1, $t10);
    if ($abort_flag) {
        assume {:print "$at(50,3933,3934)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(85,2):", $t5} $t5 == $t5;
        goto L7;
    }

    // $t2 := big_vector::borrow<#0>($t14, $t16) on_abort goto L7 with $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:101:13+65
    call $t2 := $1_big_vector_borrow'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t14, $t16);
    if ($abort_flag) {
        assume {:print "$at(50,3881,3946)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(85,2):", $t5} $t5 == $t5;
        goto L7;
    }

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:98:9+174
    assume {:print "$at(50,3782,3956)"} true;
L5:

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:98:9+174
    assume {:print "$at(50,3782,3956)"} true;
    assume {:print "$track_return(85,2,0):", $t2} $t2 == $t2;

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:103:5+1
    assume {:print "$at(50,3961,3962)"} true;
L6:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:103:5+1
    assume {:print "$at(50,3961,3962)"} true;
    $ret0 := $t2;
    return;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:103:5+1
L7:

    // abort($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:103:5+1
    assume {:print "$at(50,3961,3962)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun smart_vector::borrow_mut<aptos_discover::Q_set> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:107:5+419
procedure {:inline 1} $1_smart_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(_$t0: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), _$t1: int) returns ($ret0: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set), $ret1: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))
{
    // declare local variables
    var $t2: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t3: int;
    var $t4: $Mutation ($1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'');
    var $t5: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t6: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t10: int;
    var $t11: int;
    var $t12: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t13: int;
    var $t14: bool;
    var $t15: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    var $t16: int;
    var $t17: bool;
    var $t0: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t1: int;
    var $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // uninit($t4) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
    assume $t4->l == $Uninitialized();

    // uninit($t5) at <internal>:1:1+10
    assume $t5->l == $Uninitialized();

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:107:5+1
    assume {:print "$at(50,4080,4081)"} true;
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(85,3,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // trace_local[i]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:107:5+1
    assume {:print "$track_local(85,3,1):", $t1} $t1 == $t1;

    // $t6 := read_ref($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:28+4
    assume {:print "$at(50,4177,4181)"} true;
    $t6 := $Dereference($t0);

    // $t7 := smart_vector::length<#0>($t6) on_abort goto L11 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:21+12
    call $t7 := $1_smart_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t6);
    if ($abort_flag) {
        assume {:print "$at(50,4170,4182)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,3):", $t8} $t8 == $t8;
        goto L11;
    }

    // $t9 := <($t1, $t7) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:19+1
    call $t9 := $Lt($t1, $t7);

    // if ($t9) goto L1 else goto L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:9+72
    if ($t9) { goto L1; } else { goto L12; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:9+72
L1:

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:9+72
    assume {:print "$at(50,4158,4230)"} true;
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:9+72
L0:

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:9+72
    assume {:print "$at(50,4158,4230)"} true;

    // drop($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:9+72

    // $t10 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:59+20
    $t10 := 1;
    assume $IsValid'u64'($t10);

    // $t11 := error::invalid_argument($t10) on_abort goto L11 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:35+45
    call $t11 := $1_error_invalid_argument($t10);
    if ($abort_flag) {
        assume {:print "$at(50,4184,4229)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,3):", $t8} $t8 == $t8;
        goto L11;
    }

    // trace_abort($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:9+72
    assume {:print "$at(50,4158,4230)"} true;
    assume {:print "$track_abort(85,3):", $t11} $t11 == $t11;

    // $t8 := move($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:9+72
    $t8 := $t11;

    // goto L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:108:9+72
    goto L11;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:109:42+4
    assume {:print "$at(50,4273,4277)"} true;
L2:

    // $t12 := get_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:109:41+16
    assume {:print "$at(50,4272,4288)"} true;
    $t12 := $Dereference($t0)->$inline_vec;

    // $t13 := vector::length<#0>($t12) on_abort goto L11 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:109:26+32
    call $t13 := $1_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t12);
    if ($abort_flag) {
        assume {:print "$at(50,4257,4289)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,3):", $t8} $t8 == $t8;
        goto L11;
    }

    // trace_local[inline_len]($t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:109:13+10
    assume {:print "$track_local(85,3,3):", $t13} $t13 == $t13;

    // $t14 := <($t1, $t13) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:15+1
    assume {:print "$at(50,4305,4306)"} true;
    call $t14 := $Lt($t1, $t13);

    // if ($t14) goto L4 else goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
    if ($t14) { goto L4; } else { goto L13; }

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:111:37+4
    assume {:print "$at(50,4357,4361)"} true;
L4:

    // $t15 := borrow_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:111:32+20
    assume {:print "$at(50,4352,4372)"} true;
    $t15 := $ChildMutation($t0, 0, $Dereference($t0)->$inline_vec);

    // $t2 := vector::borrow_mut<#0>($t15, $t1) on_abort goto L11 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:111:13+43
    call $t2,$t15 := $1_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t15, $t1);
    if ($abort_flag) {
        assume {:print "$at(50,4333,4376)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,3):", $t8} $t8 == $t8;
        goto L11;
    }

    // goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
    assume {:print "$at(50,4299,4493)"} true;
    goto L5;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:113:60+4
    assume {:print "$at(50,4453,4457)"} true;
L3:

    // $t4 := borrow_field<smart_vector::SmartVector<#0>>.big_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:113:55+17
    assume {:print "$at(50,4448,4465)"} true;
    $t4 := $ChildMutation($t0, 1, $Dereference($t0)->$big_vec);

    // $t5 := option::borrow_mut<big_vector::BigVector<#0>>($t4) on_abort goto L11 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:113:36+37
    call $t5,$t4 := $1_option_borrow_mut'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t4);
    if ($abort_flag) {
        assume {:print "$at(50,4429,4466)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,3):", $t8} $t8 == $t8;
        goto L11;
    }

    // $t16 := -($t1, $t13) on_abort goto L11 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:113:77+1
    call $t16 := $Sub($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(50,4470,4471)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,3):", $t8} $t8 == $t8;
        goto L11;
    }

    // $t2 := big_vector::borrow_mut<#0>($t5, $t16) on_abort goto L11 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:113:13+77
    call $t2,$t5 := $1_big_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t5, $t16);
    if ($abort_flag) {
        assume {:print "$at(50,4406,4483)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,3):", $t8} $t8 == $t8;
        goto L11;
    }

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
    assume {:print "$at(50,4299,4493)"} true;
L5:

    // trace_return[0]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
    assume {:print "$at(50,4299,4493)"} true;
    $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' := $Dereference($t2);
    assume {:print "$track_return(85,3,0):", $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'} $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set' == $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(85,3,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
L7:

    // $t17 := is_parent[Reference($t5).buckets (table_with_length::TableWithLength<u64, vector<#0>>)/[]/[]]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
    assume {:print "$at(50,4299,4493)"} true;
    $t17 := $IsParentMutationHyper($t5, MakeVec3(0, -1, -1), $t2);

    // if ($t17) goto L8 else goto L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
    if ($t17) { goto L8; } else { goto L14; }

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
L8:

    // write_back[Reference($t4).vec (vector<big_vector::BigVector<#0>>)/[]]($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
    assume {:print "$at(50,4299,4493)"} true;
    $t4 := $UpdateMutation($t4, (var $$sel0 := $Dereference($t4)->$vec; $Update'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''_vec($Dereference($t4), UpdateVec($$sel0, ReadVec($t5->p, LenVec($t4->p) + 1), $Dereference($t5)))));

    // write_back[Reference($t0).big_vec (option::Option<big_vector::BigVector<#0>>)]($t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
    $t0 := $UpdateMutation($t0, $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_big_vec($Dereference($t0), $Dereference($t4)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(85,3,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:110:9+194
L9:

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:115:5+1
    assume {:print "$at(50,4498,4499)"} true;
L10:

    // return $t2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:115:5+1
    assume {:print "$at(50,4498,4499)"} true;
    $ret0 := $t2;
    $ret1 := $t0;
    return;

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:115:5+1
L11:

    // abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:115:5+1
    assume {:print "$at(50,4498,4499)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

    // label L12 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L12:

    // drop($t4) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t5) at <internal>:1:1+10

    // goto L0 at <internal>:1:1+10
    goto L0;

    // label L13 at <internal>:1:1+10
L13:

    // drop($t4) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t5) at <internal>:1:1+10

    // goto L3 at <internal>:1:1+10
    goto L3;

    // label L14 at <internal>:1:1+10
L14:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t4) at <internal>:1:1+10

    // drop($t5) at <internal>:1:1+10

    // goto L9 at <internal>:1:1+10
    goto L9;

}

// fun smart_vector::empty<aptos_discover::Q_set> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:42:5+241
procedure {:inline 1} $1_smart_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'() returns ($ret0: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set')
{
    // declare local variables
    var $t0: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t1: int;
    var $t2: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';
    var $t3: $1_option_Option'u64';
    var $t4: $1_option_Option'u64';
    var $t5: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';

    // bytecode translation starts here
    // $t0 := vector::empty<#0>() on_abort goto L2 with $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:44:25+8
    assume {:print "$at(50,1718,1726)"} true;
    call $t0 := $1_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'();
    if ($abort_flag) {
        assume {:print "$at(50,1718,1726)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(85,8):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := opaque begin: option::none<big_vector::BigVector<#0>>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:45:22+14
    assume {:print "$at(50,1749,1763)"} true;

    // assume And(WellFormed($t2), And(Le(Len<big_vector::BigVector<#0>>(select option::Option.vec($t2)), 1), forall $elem: big_vector::BigVector<#0>: select option::Option.vec($t2): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1))), 0))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:45:22+14
    assume ($IsValid'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''($t2) && ((LenVec($t2->$vec) <= 1) && (var $range_0 := $t2->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))));

    // assume Eq<option::Option<big_vector::BigVector<#0>>>($t2, option::spec_none<big_vector::BigVector<#0>>()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:45:22+14
    assume $IsEqual'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''($t2, $1_option_spec_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''());

    // $t2 := opaque end: option::none<big_vector::BigVector<#0>>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:45:22+14

    // $t3 := opaque begin: option::none<u64>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:46:30+14
    assume {:print "$at(50,1794,1808)"} true;

    // assume And(WellFormed($t3), Le(Len<u64>(select option::Option.vec($t3)), 1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:46:30+14
    assume ($IsValid'$1_option_Option'u64''($t3) && (LenVec($t3->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t3, option::spec_none<u64>()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:46:30+14
    assume $IsEqual'$1_option_Option'u64''($t3, $1_option_spec_none'u64'());

    // $t3 := opaque end: option::none<u64>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:46:30+14

    // $t4 := opaque begin: option::none<u64>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:47:26+14
    assume {:print "$at(50,1835,1849)"} true;

    // assume And(WellFormed($t4), Le(Len<u64>(select option::Option.vec($t4)), 1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:47:26+14
    assume ($IsValid'$1_option_Option'u64''($t4) && (LenVec($t4->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t4, option::spec_none<u64>()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:47:26+14
    assume $IsEqual'$1_option_Option'u64''($t4, $1_option_spec_none'u64'());

    // $t4 := opaque end: option::none<u64>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:47:26+14

    // $t5 := pack smart_vector::SmartVector<#0>($t0, $t2, $t3, $t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:43:9+180
    assume {:print "$at(50,1680,1860)"} true;
    $t5 := $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t0, $t2, $t3, $t4);

    // trace_return[0]($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:43:9+180
    assume {:print "$track_return(85,8,0):", $t5} $t5 == $t5;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:49:5+1
    assume {:print "$at(50,1865,1866)"} true;
L1:

    // return $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:49:5+1
    assume {:print "$at(50,1865,1866)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:49:5+1
L2:

    // abort($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:49:5+1
    assume {:print "$at(50,1865,1866)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun smart_vector::empty<aptos_discover::User_answer> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:42:5+241
procedure {:inline 1} $1_smart_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'() returns ($ret0: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer')
{
    // declare local variables
    var $t0: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var $t1: int;
    var $t2: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';
    var $t3: $1_option_Option'u64';
    var $t4: $1_option_Option'u64';
    var $t5: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'': $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';

    // bytecode translation starts here
    // $t0 := vector::empty<#0>() on_abort goto L2 with $t1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:44:25+8
    assume {:print "$at(50,1718,1726)"} true;
    call $t0 := $1_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'();
    if ($abort_flag) {
        assume {:print "$at(50,1718,1726)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(85,8):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := opaque begin: option::none<big_vector::BigVector<#0>>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:45:22+14
    assume {:print "$at(50,1749,1763)"} true;

    // assume And(WellFormed($t2), And(Le(Len<big_vector::BigVector<#0>>(select option::Option.vec($t2)), 1), forall $elem: big_vector::BigVector<#0>: select option::Option.vec($t2): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1))), 0))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:45:22+14
    assume ($IsValid'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''($t2) && ((LenVec($t2->$vec) <= 1) && (var $range_0 := $t2->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))));

    // assume Eq<option::Option<big_vector::BigVector<#0>>>($t2, option::spec_none<big_vector::BigVector<#0>>()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:45:22+14
    assume $IsEqual'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''($t2, $1_option_spec_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''());

    // $t2 := opaque end: option::none<big_vector::BigVector<#0>>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:45:22+14

    // $t3 := opaque begin: option::none<u64>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:46:30+14
    assume {:print "$at(50,1794,1808)"} true;

    // assume And(WellFormed($t3), Le(Len<u64>(select option::Option.vec($t3)), 1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:46:30+14
    assume ($IsValid'$1_option_Option'u64''($t3) && (LenVec($t3->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t3, option::spec_none<u64>()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:46:30+14
    assume $IsEqual'$1_option_Option'u64''($t3, $1_option_spec_none'u64'());

    // $t3 := opaque end: option::none<u64>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:46:30+14

    // $t4 := opaque begin: option::none<u64>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:47:26+14
    assume {:print "$at(50,1835,1849)"} true;

    // assume And(WellFormed($t4), Le(Len<u64>(select option::Option.vec($t4)), 1)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:47:26+14
    assume ($IsValid'$1_option_Option'u64''($t4) && (LenVec($t4->$vec) <= 1));

    // assume Eq<option::Option<u64>>($t4, option::spec_none<u64>()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:47:26+14
    assume $IsEqual'$1_option_Option'u64''($t4, $1_option_spec_none'u64'());

    // $t4 := opaque end: option::none<u64>() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:47:26+14

    // $t5 := pack smart_vector::SmartVector<#0>($t0, $t2, $t3, $t4) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:43:9+180
    assume {:print "$at(50,1680,1860)"} true;
    $t5 := $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t0, $t2, $t3, $t4);

    // trace_return[0]($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:43:9+180
    assume {:print "$track_return(85,8,0):", $t5} $t5 == $t5;

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:49:5+1
    assume {:print "$at(50,1865,1866)"} true;
L1:

    // return $t5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:49:5+1
    assume {:print "$at(50,1865,1866)"} true;
    $ret0 := $t5;
    return;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:49:5+1
L2:

    // abort($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:49:5+1
    assume {:print "$at(50,1865,1866)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun smart_vector::length<aptos_discover::Q_set> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:334:5+240
procedure {:inline 1} $1_smart_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(_$t0: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';
    var $t3: bool;
    var $t4: int;
    var $t5: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';
    var $t6: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t7: bool;
    var $t8: int;
    var $t9: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t10: int;
    var $t11: int;
    var $t0: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:334:5+1
    assume {:print "$at(50,14265,14266)"} true;
    assume {:print "$track_local(85,12,0):", $t0} $t0 == $t0;

    // $t2 := get_field<smart_vector::SmartVector<#0>>.big_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:64+13
    assume {:print "$at(50,14379,14392)"} true;
    $t2 := $t0->$big_vec;

    // $t3 := opaque begin: option::is_none<big_vector::BigVector<#0>>($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:48+30

    // assume WellFormed($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:48+30
    assume $IsValid'bool'($t3);

    // assume Eq<bool>($t3, option::spec_is_none<big_vector::BigVector<#0>>($t2)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:48+30
    assume $IsEqual'bool'($t3, $1_option_spec_is_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t2));

    // $t3 := opaque end: option::is_none<big_vector::BigVector<#0>>($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:48+30

    // if ($t3) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:44+140
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:336:13+1
    assume {:print "$at(50,14409,14410)"} true;
L1:

    // $t4 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:336:13+1
    assume {:print "$at(50,14409,14410)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t1 := $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:44+140
    assume {:print "$at(50,14359,14499)"} true;
    $t1 := $t4;

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:44+140
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:48+4
    assume {:print "$at(50,14475,14479)"} true;
L0:

    // $t5 := get_field<smart_vector::SmartVector<#0>>.big_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:47+13
    assume {:print "$at(50,14474,14487)"} true;
    $t5 := $t0->$big_vec;

    // $t6 := opaque begin: option::borrow<big_vector::BigVector<#0>>($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29

    // assume Identical($t7, option::spec_is_none<big_vector::BigVector<#0>>($t5)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    assume ($t7 == $1_option_spec_is_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t5));

    // if ($t7) goto L6 else goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    if ($t7) { goto L6; } else { goto L5; }

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
L6:

    // assume And(option::spec_is_none<big_vector::BigVector<#0>>($t5), Eq(262145, $t8)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    assume {:print "$at(50,14459,14488)"} true;
    assume ($1_option_spec_is_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t5) && $IsEqual'num'(262145, $t8));

    // trace_abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    assume {:print "$at(50,14459,14488)"} true;
    assume {:print "$track_abort(85,12):", $t8} $t8 == $t8;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    goto L4;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
L5:

    // assume And(WellFormed($t6), And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($t6), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0), Eq<u64>(select big_vector::BigVector.end_index($t6), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($t6), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0))), Le(select big_vector::BigVector.end_index($t6), Mul(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), select big_vector::BigVector.bucket_size($t6)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 1)): Eq<num>(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), i)), select big_vector::BigVector.bucket_size($t6)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0), Le(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 1))), select big_vector::BigVector.bucket_size($t6)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), Div(Sub(Add(select big_vector::BigVector.end_index($t6), select big_vector::BigVector.bucket_size($t6)), 1), select big_vector::BigVector.bucket_size($t6)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0), Eq<u64>(select big_vector::BigVector.end_index($t6), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 1), select big_vector::BigVector.bucket_size($t6)), Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 1)))), select big_vector::BigVector.end_index($t6))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6))): Not(big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0), Gt(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 1))), 0)))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    assume {:print "$at(50,14459,14488)"} true;
    assume ($IsValid'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6) && (((((((((((!$IsEqual'u64'($t6->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets), 0) ==> $IsEqual'u64'($t6->$end_index, 0))) && ($IsEqual'u64'($t6->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets), 0))) && ($t6->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets) * $t6->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets), 0) || (var $range_0 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets) - 1)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets, i)), $t6->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets) - 1))) <= $t6->$bucket_size))) && (var $range_2 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets), ((($t6->$end_index + $t6->$bucket_size) - 1) div $t6->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets), 0) && $IsEqual'u64'($t6->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets) - 1) * $t6->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets) - 1)))), $t6->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6->$buckets) - 1))) > 0))));

    // assume Eq<big_vector::BigVector<#0>>($t6, option::spec_borrow<big_vector::BigVector<#0>>($t5)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    assume $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t6, $1_option_spec_borrow'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t5));

    // $t6 := opaque end: option::borrow<big_vector::BigVector<#0>>($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29

    // $t1 := big_vector::length<#0>($t6) on_abort goto L4 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:13+49
    call $t1 := $1_big_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t6);
    if ($abort_flag) {
        assume {:print "$at(50,14440,14489)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,12):", $t8} $t8 == $t8;
        goto L4;
    }

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:25+4
    assume {:print "$at(50,14340,14344)"} true;
L2:

    // $t9 := get_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:24+16
    assume {:print "$at(50,14339,14355)"} true;
    $t9 := $t0->$inline_vec;

    // $t10 := vector::length<#0>($t9) on_abort goto L4 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:9+32
    call $t10 := $1_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t9);
    if ($abort_flag) {
        assume {:print "$at(50,14324,14356)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,12):", $t8} $t8 == $t8;
        goto L4;
    }

    // $t11 := +($t10, $t1) on_abort goto L4 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:42+1
    call $t11 := $AddU64($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(50,14357,14358)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,12):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_return[0]($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:9+175
    assume {:print "$track_return(85,12,0):", $t11} $t11 == $t11;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:340:5+1
    assume {:print "$at(50,14504,14505)"} true;
L3:

    // return $t11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:340:5+1
    assume {:print "$at(50,14504,14505)"} true;
    $ret0 := $t11;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:340:5+1
L4:

    // abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:340:5+1
    assume {:print "$at(50,14504,14505)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun smart_vector::length<aptos_discover::User_answer> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:334:5+240
procedure {:inline 1} $1_smart_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(_$t0: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';
    var $t3: bool;
    var $t4: int;
    var $t5: $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';
    var $t6: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $t7: bool;
    var $t8: int;
    var $t9: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var $t10: int;
    var $t11: int;
    var $t0: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'': $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:334:5+1
    assume {:print "$at(50,14265,14266)"} true;
    assume {:print "$track_local(85,12,0):", $t0} $t0 == $t0;

    // $t2 := get_field<smart_vector::SmartVector<#0>>.big_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:64+13
    assume {:print "$at(50,14379,14392)"} true;
    $t2 := $t0->$big_vec;

    // $t3 := opaque begin: option::is_none<big_vector::BigVector<#0>>($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:48+30

    // assume WellFormed($t3) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:48+30
    assume $IsValid'bool'($t3);

    // assume Eq<bool>($t3, option::spec_is_none<big_vector::BigVector<#0>>($t2)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:48+30
    assume $IsEqual'bool'($t3, $1_option_spec_is_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t2));

    // $t3 := opaque end: option::is_none<big_vector::BigVector<#0>>($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:48+30

    // if ($t3) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:44+140
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:336:13+1
    assume {:print "$at(50,14409,14410)"} true;
L1:

    // $t4 := 0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:336:13+1
    assume {:print "$at(50,14409,14410)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t1 := $t4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:44+140
    assume {:print "$at(50,14359,14499)"} true;
    $t1 := $t4;

    // goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:44+140
    goto L2;

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:48+4
    assume {:print "$at(50,14475,14479)"} true;
L0:

    // $t5 := get_field<smart_vector::SmartVector<#0>>.big_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:47+13
    assume {:print "$at(50,14474,14487)"} true;
    $t5 := $t0->$big_vec;

    // $t6 := opaque begin: option::borrow<big_vector::BigVector<#0>>($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29

    // assume Identical($t7, option::spec_is_none<big_vector::BigVector<#0>>($t5)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    assume ($t7 == $1_option_spec_is_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t5));

    // if ($t7) goto L6 else goto L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    if ($t7) { goto L6; } else { goto L5; }

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
L6:

    // assume And(option::spec_is_none<big_vector::BigVector<#0>>($t5), Eq(262145, $t8)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    assume {:print "$at(50,14459,14488)"} true;
    assume ($1_option_spec_is_none'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t5) && $IsEqual'num'(262145, $t8));

    // trace_abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    assume {:print "$at(50,14459,14488)"} true;
    assume {:print "$track_abort(85,12):", $t8} $t8 == $t8;

    // goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    goto L4;

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
L5:

    // assume And(WellFormed($t6), And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($t6), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0), Eq<u64>(select big_vector::BigVector.end_index($t6), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($t6), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0))), Le(select big_vector::BigVector.end_index($t6), Mul(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), select big_vector::BigVector.bucket_size($t6)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 1)): Eq<num>(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), i)), select big_vector::BigVector.bucket_size($t6)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0), Le(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 1))), select big_vector::BigVector.bucket_size($t6)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), Div(Sub(Add(select big_vector::BigVector.end_index($t6), select big_vector::BigVector.bucket_size($t6)), 1), select big_vector::BigVector.bucket_size($t6)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0), Eq<u64>(select big_vector::BigVector.end_index($t6), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 1), select big_vector::BigVector.bucket_size($t6)), Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 1)))), select big_vector::BigVector.end_index($t6))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6))): Not(big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 0), Gt(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($t6), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($t6)), 1))), 0)))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    assume {:print "$at(50,14459,14488)"} true;
    assume ($IsValid'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6) && (((((((((((!$IsEqual'u64'($t6->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets), 0) ==> $IsEqual'u64'($t6->$end_index, 0))) && ($IsEqual'u64'($t6->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets), 0))) && ($t6->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets) * $t6->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets), 0) || (var $range_0 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets) - 1)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets, i)), $t6->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets) - 1))) <= $t6->$bucket_size))) && (var $range_2 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets), ((($t6->$end_index + $t6->$bucket_size) - 1) div $t6->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets), 0) && $IsEqual'u64'($t6->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets) - 1) * $t6->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets) - 1)))), $t6->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6->$buckets) - 1))) > 0))));

    // assume Eq<big_vector::BigVector<#0>>($t6, option::spec_borrow<big_vector::BigVector<#0>>($t5)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29
    assume $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t6, $1_option_spec_borrow'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t5));

    // $t6 := opaque end: option::borrow<big_vector::BigVector<#0>>($t5) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:32+29

    // $t1 := big_vector::length<#0>($t6) on_abort goto L4 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:338:13+49
    call $t1 := $1_big_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t6);
    if ($abort_flag) {
        assume {:print "$at(50,14440,14489)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,12):", $t8} $t8 == $t8;
        goto L4;
    }

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:25+4
    assume {:print "$at(50,14340,14344)"} true;
L2:

    // $t9 := get_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:24+16
    assume {:print "$at(50,14339,14355)"} true;
    $t9 := $t0->$inline_vec;

    // $t10 := vector::length<#0>($t9) on_abort goto L4 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:9+32
    call $t10 := $1_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t9);
    if ($abort_flag) {
        assume {:print "$at(50,14324,14356)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,12):", $t8} $t8 == $t8;
        goto L4;
    }

    // $t11 := +($t10, $t1) on_abort goto L4 with $t8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:42+1
    call $t11 := $AddU64($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(50,14357,14358)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(85,12):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_return[0]($t11) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:335:9+175
    assume {:print "$track_return(85,12,0):", $t11} $t11 == $t11;

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:340:5+1
    assume {:print "$at(50,14504,14505)"} true;
L3:

    // return $t11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:340:5+1
    assume {:print "$at(50,14504,14505)"} true;
    $ret0 := $t11;
    return;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:340:5+1
L4:

    // abort($t8) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:340:5+1
    assume {:print "$at(50,14504,14505)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun smart_vector::push_back<aptos_discover::Q_set> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:154:5+1126
procedure {:inline 1} $1_smart_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(_$t0: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'), _$t1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set) returns ($ret0: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t9: int;
    var $t10: int;
    var $t11: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t12: int;
    var $t13: bool;
    var $t14: $1_option_Option'u64';
    var $t15: bool;
    var $t16: $1_option_Option'u64';
    var $t17: int;
    var $t18: bool;
    var $t19: bool;
    var $t20: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    var $t21: $1_option_Option'u64';
    var $t22: int;
    var $t23: bool;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: bool;
    var $t30: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set));
    var $t31: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: int;
    var $t42: $Mutation ($1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'');
    var $t43: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t44: bool;
    var $t45: $Mutation ($1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'');
    var $t46: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t47: int;
    var $t48: int;
    var $t0: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''': $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';
    var $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:154:5+1
    assume {:print "$at(50,6187,6188)"} true;
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // trace_local[val]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:154:5+1
    assume {:print "$track_local(85,15,1):", $t1} $t1 == $t1;

    // $t8 := read_ref($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:155:26+4
    assume {:print "$at(50,6280,6284)"} true;
    $t8 := $Dereference($t0);

    // $t9 := smart_vector::length<#0>($t8) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:155:19+12
    call $t9 := $1_smart_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t8);
    if ($abort_flag) {
        assume {:print "$at(50,6273,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // trace_local[len]($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:155:13+3
    assume {:print "$track_local(85,15,6):", $t9} $t9 == $t9;

    // $t11 := get_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:156:41+16
    assume {:print "$at(50,6327,6343)"} true;
    $t11 := $Dereference($t0)->$inline_vec;

    // $t12 := vector::length<#0>($t11) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:156:26+32
    call $t12 := $1_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t11);
    if ($abort_flag) {
        assume {:print "$at(50,6312,6344)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // trace_local[inline_len]($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:156:13+10
    assume {:print "$track_local(85,15,5):", $t12} $t12 == $t12;

    // $t13 := ==($t9, $t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:157:17+2
    assume {:print "$at(50,6362,6364)"} true;
    $t13 := $IsEqual'u64'($t9, $t12);

    // if ($t13) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:157:9+877
    if ($t13) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:52+4
    assume {:print "$at(50,6430,6434)"} true;
L1:

    // $t14 := get_field<smart_vector::SmartVector<#0>>.inline_capacity($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:51+21
    assume {:print "$at(50,6429,6450)"} true;
    $t14 := $Dereference($t0)->$inline_capacity;

    // $t15 := opaque begin: option::is_some<u64>($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:35+38

    // assume WellFormed($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:35+38
    assume $IsValid'bool'($t15);

    // assume Eq<bool>($t15, option::spec_is_some<u64>($t14)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:35+38
    assume $IsEqual'bool'($t15, $1_option_spec_is_some'u64'($t14));

    // $t15 := opaque end: option::is_some<u64>($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:35+38

    // if ($t15) goto L3 else goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:31+734
    if ($t15) { goto L3; } else { goto L2; }

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:21+3
    assume {:print "$at(50,6475,6478)"} true;
L3:

    // $t16 := get_field<smart_vector::SmartVector<#0>>.inline_capacity($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:43+21
    assume {:print "$at(50,6497,6518)"} true;
    $t16 := $Dereference($t0)->$inline_capacity;

    // $t17 := opaque begin: option::borrow<u64>($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37

    // assume Identical($t18, option::spec_is_none<u64>($t16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    assume ($t18 == $1_option_spec_is_none'u64'($t16));

    // if ($t18) goto L17 else goto L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    if ($t18) { goto L17; } else { goto L11; }

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
L12:

    // assume And(option::spec_is_none<u64>($t16), Eq(262145, $t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    assume {:print "$at(50,6482,6519)"} true;
    assume ($1_option_spec_is_none'u64'($t16) && $IsEqual'num'(262145, $t10));

    // trace_abort($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    assume {:print "$at(50,6482,6519)"} true;
    assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    goto L10;

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
L11:

    // assume WellFormed($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    assume {:print "$at(50,6482,6519)"} true;
    assume $IsValid'u64'($t17);

    // assume Eq<u64>($t17, option::spec_borrow<u64>($t16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    assume $IsEqual'u64'($t17, $1_option_spec_borrow'u64'($t16));

    // $t17 := opaque end: option::borrow<u64>($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37

    // $t19 := <($t9, $t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:25+1
    call $t19 := $Lt($t9, $t17);

    // if ($t19) goto L5 else goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:17+162
    if ($t19) { goto L5; } else { goto L4; }

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:160:44+4
    assume {:print "$at(50,6566,6570)"} true;
L5:

    // $t20 := borrow_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:160:39+20
    assume {:print "$at(50,6561,6581)"} true;
    $t20 := $ChildMutation($t0, 0, $Dereference($t0)->$inline_vec);

    // vector::push_back<#0>($t20, $t1) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:160:21+44
    call $t20 := $1_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t20, $t1);
    if ($abort_flag) {
        assume {:print "$at(50,6543,6587)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // write_back[Reference($t0).inline_vec (vector<#0>)]($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:160:21+44
    $t0 := $UpdateMutation($t0, $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_inline_vec($Dereference($t0), $Dereference($t20)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:160:21+44
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:161:21+6
    assume {:print "$at(50,6609,6615)"} true;
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:161:21+6

    // goto L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:161:21+6
    goto L9;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:34+4
    assume {:print "$at(50,6668,6672)"} true;
L4:

    // $t21 := get_field<smart_vector::SmartVector<#0>>.bucket_size($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:33+17
    assume {:print "$at(50,6667,6684)"} true;
    $t21 := $Dereference($t0)->$bucket_size;

    // $t22 := opaque begin: option::borrow<u64>($t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33

    // assume Identical($t23, option::spec_is_none<u64>($t21)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    assume ($t23 == $1_option_spec_is_none'u64'($t21));

    // if ($t23) goto L18 else goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    if ($t23) { goto L18; } else { goto L13; }

    // label L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
L14:

    // assume And(option::spec_is_none<u64>($t21), Eq(262145, $t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    assume {:print "$at(50,6652,6685)"} true;
    assume ($1_option_spec_is_none'u64'($t21) && $IsEqual'num'(262145, $t10));

    // trace_abort($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    assume {:print "$at(50,6652,6685)"} true;
    assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    goto L10;

    // label L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
L13:

    // assume WellFormed($t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    assume {:print "$at(50,6652,6685)"} true;
    assume $IsValid'u64'($t22);

    // assume Eq<u64>($t22, option::spec_borrow<u64>($t21)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    assume $IsEqual'u64'($t22, $1_option_spec_borrow'u64'($t21));

    // $t22 := opaque end: option::borrow<u64>($t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33

    // $t2 := $t22 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:31+734
    assume {:print "$at(50,6409,7143)"} true;
    $t2 := $t22;

    // goto L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:31+734
    goto L6;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:165:44+4
    assume {:print "$at(50,6750,6754)"} true;
L2:

    // $t24 := type_info::size_of_val<#0>($t1) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:165:32+17
    assume {:print "$at(50,6738,6755)"} true;
    call $t24 := $1_type_info_size_of_val'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t1);
    if ($abort_flag) {
        assume {:print "$at(50,6738,6755)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // trace_local[val_size]($t24) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:165:21+8
    assume {:print "$track_local(85,15,7):", $t24} $t24 == $t24;

    // $t25 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:166:46+1
    assume {:print "$at(50,6802,6803)"} true;
    $t25 := 1;
    assume $IsValid'u64'($t25);

    // $t26 := +($t12, $t25) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:166:44+1
    call $t26 := $AddU64($t12, $t25);
    if ($abort_flag) {
        assume {:print "$at(50,6800,6801)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t27 := *($t24, $t26) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:166:30+1
    call $t27 := $MulU64($t24, $t26);
    if ($abort_flag) {
        assume {:print "$at(50,6786,6787)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t28 := 150 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:166:51+3
    $t28 := 150;
    assume $IsValid'u64'($t28);

    // $t29 := <($t27, $t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:166:49+1
    call $t29 := $Lt($t27, $t28);

    // if ($t29) goto L8 else goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:166:17+170
    if ($t29) { goto L8; } else { goto L7; }

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:167:44+4
    assume {:print "$at(50,6876,6880)"} true;
L8:

    // $t30 := borrow_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:167:39+20
    assume {:print "$at(50,6871,6891)"} true;
    $t30 := $ChildMutation($t0, 0, $Dereference($t0)->$inline_vec);

    // vector::push_back<#0>($t30, $t1) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:167:21+44
    call $t30 := $1_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t30, $t1);
    if ($abort_flag) {
        assume {:print "$at(50,6853,6897)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // write_back[Reference($t0).inline_vec (vector<#0>)]($t30) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:167:21+44
    $t0 := $UpdateMutation($t0, $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_inline_vec($Dereference($t0), $Dereference($t30)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:167:21+44
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:168:21+6
    assume {:print "$at(50,6919,6925)"} true;
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:168:21+6

    // goto L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:168:21+6
    goto L9;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:60+4
    assume {:print "$at(50,7004,7008)"} true;
L7:

    // $t31 := get_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:59+16
    assume {:print "$at(50,7003,7019)"} true;
    $t31 := $Dereference($t0)->$inline_vec;

    // $t32 := type_info::size_of_val<vector<#0>>($t31) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:47+29
    call $t32 := $1_type_info_size_of_val'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t31);
    if ($abort_flag) {
        assume {:print "$at(50,6991,7020)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t33 := +($t32, $t24) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:77+1
    call $t33 := $AddU64($t32, $t24);
    if ($abort_flag) {
        assume {:print "$at(50,7021,7022)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t34 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:105+1
    $t34 := 1;
    assume $IsValid'u64'($t34);

    // $t35 := +($t12, $t34) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:103+1
    call $t35 := $AddU64($t12, $t34);
    if ($abort_flag) {
        assume {:print "$at(50,7047,7048)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t36 := /($t33, $t35) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:89+1
    call $t36 := $Div($t33, $t35);
    if ($abort_flag) {
        assume {:print "$at(50,7033,7034)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t37 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:109+1
    $t37 := 1;
    assume $IsValid'u64'($t37);

    // $t38 := math64::max($t36, $t37) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:42+69
    call $t38 := $1_math64_max($t36, $t37);
    if ($abort_flag) {
        assume {:print "$at(50,6986,7055)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // trace_local[estimated_avg_size]($t38) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:21+18
    assume {:print "$track_local(85,15,4):", $t38} $t38 == $t38;

    // $t39 := 1024 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:171:21+4
    assume {:print "$at(50,7077,7081)"} true;
    $t39 := 1024;
    assume $IsValid'u64'($t39);

    // $t40 := /($t39, $t38) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:171:49+1
    call $t40 := $Div($t39, $t38);
    if ($abort_flag) {
        assume {:print "$at(50,7105,7106)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t41 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:171:71+1
    $t41 := 1;
    assume $IsValid'u64'($t41);

    // $t2 := math64::max($t40, $t41) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:171:17+56
    call $t2 := $1_math64_max($t40, $t41);
    if ($abort_flag) {
        assume {:print "$at(50,7073,7129)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:31+734
    assume {:print "$at(50,6409,7143)"} true;
L6:

    // trace_local[bucket_size]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:17+11
    assume {:print "$at(50,6395,6406)"} true;
    assume {:print "$track_local(85,15,3):", $t2} $t2 == $t2;

    // $t42 := borrow_field<smart_vector::SmartVector<#0>>.big_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:26+17
    assume {:print "$at(50,7170,7187)"} true;
    $t42 := $ChildMutation($t0, 1, $Dereference($t0)->$big_vec);

    // $t43 := big_vector::empty<#0>($t2) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:45+30
    call $t43 := $1_big_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t2);
    if ($abort_flag) {
        assume {:print "$at(50,7189,7219)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // opaque begin: option::fill<big_vector::BigVector<#0>>($t42, $t43) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63

    // assume Identical($t44, option::spec_is_some<big_vector::BigVector<#0>>($t42)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume ($t44 == $1_option_spec_is_some'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($Dereference($t42)));

    // if ($t44) goto L19 else goto L20 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    if ($t44) { goto L19; } else { goto L20; }

    // label L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
L16:

    // assume And(option::spec_is_some<big_vector::BigVector<#0>>($t42), Eq(262144, $t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume {:print "$at(50,7157,7220)"} true;
    assume ($1_option_spec_is_some'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($Dereference($t42)) && $IsEqual'num'(262144, $t10));

    // trace_abort($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume {:print "$at(50,7157,7220)"} true;
    assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    goto L10;

    // label L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
L15:

    // $t42 := havoc[mut]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume {:print "$at(50,7157,7220)"} true;
    havoc $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''';
    $t42 := $UpdateMutation($t42, $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''');

    // assume And(WellFormed($t42), And(Le(Len<big_vector::BigVector<#0>>(select option::Option.vec($t42)), 1), forall $elem: big_vector::BigVector<#0>: select option::Option.vec($t42): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1))), 0))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume ($IsValid'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''($Dereference($t42)) && ((LenVec($Dereference($t42)->$vec) <= 1) && (var $range_0 := $Dereference($t42)->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))));

    // assume option::spec_is_some<big_vector::BigVector<#0>>($t42) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume $1_option_spec_is_some'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($Dereference($t42));

    // assume Eq<big_vector::BigVector<#0>>(option::spec_borrow<big_vector::BigVector<#0>>($t42), $t43) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($1_option_spec_borrow'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($Dereference($t42)), $t43);

    // opaque end: option::fill<big_vector::BigVector<#0>>($t42, $t43) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63

    // write_back[Reference($t0).big_vec (option::Option<big_vector::BigVector<#0>>)]($t42) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    $t0 := $UpdateMutation($t0, $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_big_vec($Dereference($t0), $Dereference($t42)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:55+4
    assume {:print "$at(50,7287,7291)"} true;
L0:

    // $t45 := borrow_field<smart_vector::SmartVector<#0>>.big_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:50+17
    assume {:print "$at(50,7282,7299)"} true;
    $t45 := $ChildMutation($t0, 1, $Dereference($t0)->$big_vec);

    // $t46 := option::borrow_mut<big_vector::BigVector<#0>>($t45) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:31+37
    call $t46,$t45 := $1_option_borrow_mut'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t45);
    if ($abort_flag) {
        assume {:print "$at(50,7263,7300)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // assume Identical($t47, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets<big_vector::BigVector<#0>>($t46))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:70:9+47
    assume {:print "$at(47,2926,2973)"} true;
    assume ($t47 == $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($Dereference($t46)->$buckets));

    // assume Identical($t48, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets<big_vector::BigVector<#0>>($t46))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:81:9+47
    assume {:print "$at(47,3413,3460)"} true;
    assume ($t48 == $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($Dereference($t46)->$buckets));

    // big_vector::push_back<#0>($t46, $t1) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:9+65
    assume {:print "$at(50,7241,7306)"} true;
    call $t46 := $1_big_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t46, $t1);
    if ($abort_flag) {
        assume {:print "$at(50,7241,7306)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // write_back[Reference($t45).vec (vector<big_vector::BigVector<#0>>)/[]]($t46) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:9+65
    $t45 := $UpdateMutation($t45, (var $$sel0 := $Dereference($t45)->$vec; $Update'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''_vec($Dereference($t45), UpdateVec($$sel0, ReadVec($t46->p, LenVec($t45->p) + 1), $Dereference($t46)))));

    // write_back[Reference($t0).big_vec (option::Option<big_vector::BigVector<#0>>)]($t45) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:9+65
    $t0 := $UpdateMutation($t0, $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_big_vec($Dereference($t0), $Dereference($t45)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:9+65
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:74+1
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'';

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:74+1

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:176:5+1
    assume {:print "$at(50,7312,7313)"} true;
L9:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:176:5+1
    assume {:print "$at(50,7312,7313)"} true;
    $ret0 := $t0;
    return;

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:176:5+1
L10:

    // abort($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:176:5+1
    assume {:print "$at(50,7312,7313)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

    // label L17 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L17:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L12 at <internal>:1:1+10
    goto L12;

    // label L18 at <internal>:1:1+10
L18:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L14 at <internal>:1:1+10
    goto L14;

    // label L19 at <internal>:1:1+10
L19:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L16 at <internal>:1:1+10
    goto L16;

    // label L20 at <internal>:1:1+10
L20:

    // drop($t42) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L15 at <internal>:1:1+10
    goto L15;

}

// fun smart_vector::push_back<aptos_discover::User_answer> [baseline] at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:154:5+1126
procedure {:inline 1} $1_smart_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(_$t0: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'), _$t1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer) returns ($ret0: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $t9: int;
    var $t10: int;
    var $t11: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var $t12: int;
    var $t13: bool;
    var $t14: $1_option_Option'u64';
    var $t15: bool;
    var $t16: $1_option_Option'u64';
    var $t17: int;
    var $t18: bool;
    var $t19: bool;
    var $t20: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
    var $t21: $1_option_Option'u64';
    var $t22: int;
    var $t23: bool;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: bool;
    var $t30: $Mutation (Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer));
    var $t31: Vec ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer);
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: int;
    var $t41: int;
    var $t42: $Mutation ($1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'');
    var $t43: $1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $t44: bool;
    var $t45: $Mutation ($1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'');
    var $t46: $Mutation ($1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var $t47: int;
    var $t48: int;
    var $t0: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var $t1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer;
    var $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''': $1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';
    var $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'': $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:154:5+1
    assume {:print "$at(50,6187,6188)"} true;
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // trace_local[val]($t1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:154:5+1
    assume {:print "$track_local(85,15,1):", $t1} $t1 == $t1;

    // $t8 := read_ref($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:155:26+4
    assume {:print "$at(50,6280,6284)"} true;
    $t8 := $Dereference($t0);

    // $t9 := smart_vector::length<#0>($t8) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:155:19+12
    call $t9 := $1_smart_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t8);
    if ($abort_flag) {
        assume {:print "$at(50,6273,6285)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // trace_local[len]($t9) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:155:13+3
    assume {:print "$track_local(85,15,6):", $t9} $t9 == $t9;

    // $t11 := get_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:156:41+16
    assume {:print "$at(50,6327,6343)"} true;
    $t11 := $Dereference($t0)->$inline_vec;

    // $t12 := vector::length<#0>($t11) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:156:26+32
    call $t12 := $1_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t11);
    if ($abort_flag) {
        assume {:print "$at(50,6312,6344)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // trace_local[inline_len]($t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:156:13+10
    assume {:print "$track_local(85,15,5):", $t12} $t12 == $t12;

    // $t13 := ==($t9, $t12) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:157:17+2
    assume {:print "$at(50,6362,6364)"} true;
    $t13 := $IsEqual'u64'($t9, $t12);

    // if ($t13) goto L1 else goto L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:157:9+877
    if ($t13) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:52+4
    assume {:print "$at(50,6430,6434)"} true;
L1:

    // $t14 := get_field<smart_vector::SmartVector<#0>>.inline_capacity($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:51+21
    assume {:print "$at(50,6429,6450)"} true;
    $t14 := $Dereference($t0)->$inline_capacity;

    // $t15 := opaque begin: option::is_some<u64>($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:35+38

    // assume WellFormed($t15) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:35+38
    assume $IsValid'bool'($t15);

    // assume Eq<bool>($t15, option::spec_is_some<u64>($t14)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:35+38
    assume $IsEqual'bool'($t15, $1_option_spec_is_some'u64'($t14));

    // $t15 := opaque end: option::is_some<u64>($t14) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:35+38

    // if ($t15) goto L3 else goto L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:31+734
    if ($t15) { goto L3; } else { goto L2; }

    // label L3 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:21+3
    assume {:print "$at(50,6475,6478)"} true;
L3:

    // $t16 := get_field<smart_vector::SmartVector<#0>>.inline_capacity($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:43+21
    assume {:print "$at(50,6497,6518)"} true;
    $t16 := $Dereference($t0)->$inline_capacity;

    // $t17 := opaque begin: option::borrow<u64>($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37

    // assume Identical($t18, option::spec_is_none<u64>($t16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    assume ($t18 == $1_option_spec_is_none'u64'($t16));

    // if ($t18) goto L17 else goto L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    if ($t18) { goto L17; } else { goto L11; }

    // label L12 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
L12:

    // assume And(option::spec_is_none<u64>($t16), Eq(262145, $t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    assume {:print "$at(50,6482,6519)"} true;
    assume ($1_option_spec_is_none'u64'($t16) && $IsEqual'num'(262145, $t10));

    // trace_abort($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    assume {:print "$at(50,6482,6519)"} true;
    assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    goto L10;

    // label L11 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
L11:

    // assume WellFormed($t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    assume {:print "$at(50,6482,6519)"} true;
    assume $IsValid'u64'($t17);

    // assume Eq<u64>($t17, option::spec_borrow<u64>($t16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37
    assume $IsEqual'u64'($t17, $1_option_spec_borrow'u64'($t16));

    // $t17 := opaque end: option::borrow<u64>($t16) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:28+37

    // $t19 := <($t9, $t17) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:25+1
    call $t19 := $Lt($t9, $t17);

    // if ($t19) goto L5 else goto L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:159:17+162
    if ($t19) { goto L5; } else { goto L4; }

    // label L5 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:160:44+4
    assume {:print "$at(50,6566,6570)"} true;
L5:

    // $t20 := borrow_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:160:39+20
    assume {:print "$at(50,6561,6581)"} true;
    $t20 := $ChildMutation($t0, 0, $Dereference($t0)->$inline_vec);

    // vector::push_back<#0>($t20, $t1) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:160:21+44
    call $t20 := $1_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t20, $t1);
    if ($abort_flag) {
        assume {:print "$at(50,6543,6587)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // write_back[Reference($t0).inline_vec (vector<#0>)]($t20) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:160:21+44
    $t0 := $UpdateMutation($t0, $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_inline_vec($Dereference($t0), $Dereference($t20)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:160:21+44
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:161:21+6
    assume {:print "$at(50,6609,6615)"} true;
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:161:21+6

    // goto L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:161:21+6
    goto L9;

    // label L4 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:34+4
    assume {:print "$at(50,6668,6672)"} true;
L4:

    // $t21 := get_field<smart_vector::SmartVector<#0>>.bucket_size($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:33+17
    assume {:print "$at(50,6667,6684)"} true;
    $t21 := $Dereference($t0)->$bucket_size;

    // $t22 := opaque begin: option::borrow<u64>($t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33

    // assume Identical($t23, option::spec_is_none<u64>($t21)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    assume ($t23 == $1_option_spec_is_none'u64'($t21));

    // if ($t23) goto L18 else goto L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    if ($t23) { goto L18; } else { goto L13; }

    // label L14 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
L14:

    // assume And(option::spec_is_none<u64>($t21), Eq(262145, $t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    assume {:print "$at(50,6652,6685)"} true;
    assume ($1_option_spec_is_none'u64'($t21) && $IsEqual'num'(262145, $t10));

    // trace_abort($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    assume {:print "$at(50,6652,6685)"} true;
    assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    goto L10;

    // label L13 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
L13:

    // assume WellFormed($t22) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    assume {:print "$at(50,6652,6685)"} true;
    assume $IsValid'u64'($t22);

    // assume Eq<u64>($t22, option::spec_borrow<u64>($t21)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33
    assume $IsEqual'u64'($t22, $1_option_spec_borrow'u64'($t21));

    // $t22 := opaque end: option::borrow<u64>($t21) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:163:18+33

    // $t2 := $t22 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:31+734
    assume {:print "$at(50,6409,7143)"} true;
    $t2 := $t22;

    // goto L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:31+734
    goto L6;

    // label L2 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:165:44+4
    assume {:print "$at(50,6750,6754)"} true;
L2:

    // $t24 := type_info::size_of_val<#0>($t1) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:165:32+17
    assume {:print "$at(50,6738,6755)"} true;
    call $t24 := $1_type_info_size_of_val'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t1);
    if ($abort_flag) {
        assume {:print "$at(50,6738,6755)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // trace_local[val_size]($t24) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:165:21+8
    assume {:print "$track_local(85,15,7):", $t24} $t24 == $t24;

    // $t25 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:166:46+1
    assume {:print "$at(50,6802,6803)"} true;
    $t25 := 1;
    assume $IsValid'u64'($t25);

    // $t26 := +($t12, $t25) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:166:44+1
    call $t26 := $AddU64($t12, $t25);
    if ($abort_flag) {
        assume {:print "$at(50,6800,6801)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t27 := *($t24, $t26) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:166:30+1
    call $t27 := $MulU64($t24, $t26);
    if ($abort_flag) {
        assume {:print "$at(50,6786,6787)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t28 := 150 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:166:51+3
    $t28 := 150;
    assume $IsValid'u64'($t28);

    // $t29 := <($t27, $t28) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:166:49+1
    call $t29 := $Lt($t27, $t28);

    // if ($t29) goto L8 else goto L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:166:17+170
    if ($t29) { goto L8; } else { goto L7; }

    // label L8 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:167:44+4
    assume {:print "$at(50,6876,6880)"} true;
L8:

    // $t30 := borrow_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:167:39+20
    assume {:print "$at(50,6871,6891)"} true;
    $t30 := $ChildMutation($t0, 0, $Dereference($t0)->$inline_vec);

    // vector::push_back<#0>($t30, $t1) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:167:21+44
    call $t30 := $1_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t30, $t1);
    if ($abort_flag) {
        assume {:print "$at(50,6853,6897)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // write_back[Reference($t0).inline_vec (vector<#0>)]($t30) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:167:21+44
    $t0 := $UpdateMutation($t0, $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_inline_vec($Dereference($t0), $Dereference($t30)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:167:21+44
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:168:21+6
    assume {:print "$at(50,6919,6925)"} true;
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:168:21+6

    // goto L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:168:21+6
    goto L9;

    // label L7 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:60+4
    assume {:print "$at(50,7004,7008)"} true;
L7:

    // $t31 := get_field<smart_vector::SmartVector<#0>>.inline_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:59+16
    assume {:print "$at(50,7003,7019)"} true;
    $t31 := $Dereference($t0)->$inline_vec;

    // $t32 := type_info::size_of_val<vector<#0>>($t31) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:47+29
    call $t32 := $1_type_info_size_of_val'vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t31);
    if ($abort_flag) {
        assume {:print "$at(50,6991,7020)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t33 := +($t32, $t24) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:77+1
    call $t33 := $AddU64($t32, $t24);
    if ($abort_flag) {
        assume {:print "$at(50,7021,7022)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t34 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:105+1
    $t34 := 1;
    assume $IsValid'u64'($t34);

    // $t35 := +($t12, $t34) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:103+1
    call $t35 := $AddU64($t12, $t34);
    if ($abort_flag) {
        assume {:print "$at(50,7047,7048)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t36 := /($t33, $t35) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:89+1
    call $t36 := $Div($t33, $t35);
    if ($abort_flag) {
        assume {:print "$at(50,7033,7034)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t37 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:109+1
    $t37 := 1;
    assume $IsValid'u64'($t37);

    // $t38 := math64::max($t36, $t37) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:42+69
    call $t38 := $1_math64_max($t36, $t37);
    if ($abort_flag) {
        assume {:print "$at(50,6986,7055)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // trace_local[estimated_avg_size]($t38) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:170:21+18
    assume {:print "$track_local(85,15,4):", $t38} $t38 == $t38;

    // $t39 := 1024 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:171:21+4
    assume {:print "$at(50,7077,7081)"} true;
    $t39 := 1024;
    assume $IsValid'u64'($t39);

    // $t40 := /($t39, $t38) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:171:49+1
    call $t40 := $Div($t39, $t38);
    if ($abort_flag) {
        assume {:print "$at(50,7105,7106)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // $t41 := 1 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:171:71+1
    $t41 := 1;
    assume $IsValid'u64'($t41);

    // $t2 := math64::max($t40, $t41) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:171:17+56
    call $t2 := $1_math64_max($t40, $t41);
    if ($abort_flag) {
        assume {:print "$at(50,7073,7129)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // label L6 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:31+734
    assume {:print "$at(50,6409,7143)"} true;
L6:

    // trace_local[bucket_size]($t2) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:158:17+11
    assume {:print "$at(50,6395,6406)"} true;
    assume {:print "$track_local(85,15,3):", $t2} $t2 == $t2;

    // $t42 := borrow_field<smart_vector::SmartVector<#0>>.big_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:26+17
    assume {:print "$at(50,7170,7187)"} true;
    $t42 := $ChildMutation($t0, 1, $Dereference($t0)->$big_vec);

    // $t43 := big_vector::empty<#0>($t2) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:45+30
    call $t43 := $1_big_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t2);
    if ($abort_flag) {
        assume {:print "$at(50,7189,7219)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // opaque begin: option::fill<big_vector::BigVector<#0>>($t42, $t43) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63

    // assume Identical($t44, option::spec_is_some<big_vector::BigVector<#0>>($t42)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume ($t44 == $1_option_spec_is_some'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($Dereference($t42)));

    // if ($t44) goto L19 else goto L20 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    if ($t44) { goto L19; } else { goto L20; }

    // label L16 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
L16:

    // assume And(option::spec_is_some<big_vector::BigVector<#0>>($t42), Eq(262144, $t10)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume {:print "$at(50,7157,7220)"} true;
    assume ($1_option_spec_is_some'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($Dereference($t42)) && $IsEqual'num'(262144, $t10));

    // trace_abort($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume {:print "$at(50,7157,7220)"} true;
    assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;

    // goto L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    goto L10;

    // label L15 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
L15:

    // $t42 := havoc[mut]() at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume {:print "$at(50,7157,7220)"} true;
    havoc $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''';
    $t42 := $UpdateMutation($t42, $temp_0'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''');

    // assume And(WellFormed($t42), And(Le(Len<big_vector::BigVector<#0>>(select option::Option.vec($t42)), 1), forall $elem: big_vector::BigVector<#0>: select option::Option.vec($t42): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<#0>(table_with_length::spec_get<u64, vector<#0>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets($elem)), 1))), 0))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume ($IsValid'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''($Dereference($t42)) && ((LenVec($Dereference($t42)->$vec) <= 1) && (var $range_0 := $Dereference($t42)->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))));

    // assume option::spec_is_some<big_vector::BigVector<#0>>($t42) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume $1_option_spec_is_some'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($Dereference($t42));

    // assume Eq<big_vector::BigVector<#0>>(option::spec_borrow<big_vector::BigVector<#0>>($t42), $t43) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    assume $IsEqual'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($1_option_spec_borrow'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($Dereference($t42)), $t43);

    // opaque end: option::fill<big_vector::BigVector<#0>>($t42, $t43) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63

    // write_back[Reference($t0).big_vec (option::Option<big_vector::BigVector<#0>>)]($t42) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    $t0 := $UpdateMutation($t0, $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_big_vec($Dereference($t0), $Dereference($t42)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:173:13+63
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // label L0 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:55+4
    assume {:print "$at(50,7287,7291)"} true;
L0:

    // $t45 := borrow_field<smart_vector::SmartVector<#0>>.big_vec($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:50+17
    assume {:print "$at(50,7282,7299)"} true;
    $t45 := $ChildMutation($t0, 1, $Dereference($t0)->$big_vec);

    // $t46 := option::borrow_mut<big_vector::BigVector<#0>>($t45) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:31+37
    call $t46,$t45 := $1_option_borrow_mut'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($t45);
    if ($abort_flag) {
        assume {:print "$at(50,7263,7300)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // assume Identical($t47, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets<big_vector::BigVector<#0>>($t46))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:70:9+47
    assume {:print "$at(47,2926,2973)"} true;
    assume ($t47 == $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($Dereference($t46)->$buckets));

    // assume Identical($t48, big_vector::spec_table_len<u64, vector<#0>>(select big_vector::BigVector.buckets<big_vector::BigVector<#0>>($t46))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:81:9+47
    assume {:print "$at(47,3413,3460)"} true;
    assume ($t48 == $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($Dereference($t46)->$buckets));

    // big_vector::push_back<#0>($t46, $t1) on_abort goto L10 with $t10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:9+65
    assume {:print "$at(50,7241,7306)"} true;
    call $t46 := $1_big_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t46, $t1);
    if ($abort_flag) {
        assume {:print "$at(50,7241,7306)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(85,15):", $t10} $t10 == $t10;
        goto L10;
    }

    // write_back[Reference($t45).vec (vector<big_vector::BigVector<#0>>)/[]]($t46) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:9+65
    $t45 := $UpdateMutation($t45, (var $$sel0 := $Dereference($t45)->$vec; $Update'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'''_vec($Dereference($t45), UpdateVec($$sel0, ReadVec($t46->p, LenVec($t45->p) + 1), $Dereference($t46)))));

    // write_back[Reference($t0).big_vec (option::Option<big_vector::BigVector<#0>>)]($t45) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:9+65
    $t0 := $UpdateMutation($t0, $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''_big_vec($Dereference($t0), $Dereference($t45)));

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:9+65
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // trace_local[self]($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:74+1
    $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' := $Dereference($t0);
    assume {:print "$track_local(85,15,0):", $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''} $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'' == $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'';

    // pack_ref_deep($t0) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:175:74+1

    // label L9 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:176:5+1
    assume {:print "$at(50,7312,7313)"} true;
L9:

    // return () at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:176:5+1
    assume {:print "$at(50,7312,7313)"} true;
    $ret0 := $t0;
    return;

    // label L10 at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:176:5+1
L10:

    // abort($t10) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.move:176:5+1
    assume {:print "$at(50,7312,7313)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

    // label L17 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L17:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L12 at <internal>:1:1+10
    goto L12;

    // label L18 at <internal>:1:1+10
L18:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L14 at <internal>:1:1+10
    goto L14;

    // label L19 at <internal>:1:1+10
L19:

    // drop($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L16 at <internal>:1:1+10
    goto L16;

    // label L20 at <internal>:1:1+10
L20:

    // drop($t42) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L15 at <internal>:1:1+10
    goto L15;

}

// struct aptos_discover::ChainMark_FA_cap at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:39:5+179
datatype $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap($mint_cap: $1_fungible_asset_MintRef, $burn_cap: $1_fungible_asset_BurnRef, $trans_cap: $1_fungible_asset_TransferRef)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'_mint_cap(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap, x: $1_fungible_asset_MintRef): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap(x, s->$burn_cap, s->$trans_cap)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'_burn_cap(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap, x: $1_fungible_asset_BurnRef): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap(s->$mint_cap, x, s->$trans_cap)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'_trans_cap(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap, x: $1_fungible_asset_TransferRef): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap(s->$mint_cap, s->$burn_cap, x)
}
function $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap): bool {
    $IsValid'$1_fungible_asset_MintRef'(s->$mint_cap)
      && $IsValid'$1_fungible_asset_BurnRef'(s->$burn_cap)
      && $IsValid'$1_fungible_asset_TransferRef'(s->$trans_cap)
}
function {:inline} $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'(s1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap, s2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap): bool {
    s1 == s2
}
var $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory: $Memory $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap;

// struct aptos_discover::ChainMark_Object_cap at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:35:5+130
datatype $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap($trans_cap: $1_object_TransferRef, $exten_cap: $1_object_ExtendRef)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'_trans_cap(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap, x: $1_object_TransferRef): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap(x, s->$exten_cap)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'_exten_cap(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap, x: $1_object_ExtendRef): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap(s->$trans_cap, x)
}
function $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap): bool {
    $IsValid'$1_object_TransferRef'(s->$trans_cap)
      && $IsValid'$1_object_ExtendRef'(s->$exten_cap)
}
function {:inline} $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'(s1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap, s2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap): bool {
    s1 == s2
}
var $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap_$memory: $Memory $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap;

// struct aptos_discover::Object_cap at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:45:5+156
datatype $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap($trans_cap: $1_object_TransferRef, $del_cap: $1_object_DeleteRef, $exten_cap: $1_object_ExtendRef)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'_trans_cap(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap, x: $1_object_TransferRef): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap(x, s->$del_cap, s->$exten_cap)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'_del_cap(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap, x: $1_object_DeleteRef): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap(s->$trans_cap, x, s->$exten_cap)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'_exten_cap(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap, x: $1_object_ExtendRef): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap(s->$trans_cap, s->$del_cap, x)
}
function $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap): bool {
    $IsValid'$1_object_TransferRef'(s->$trans_cap)
      && $IsValid'$1_object_DeleteRef'(s->$del_cap)
      && $IsValid'$1_object_ExtendRef'(s->$exten_cap)
}
function {:inline} $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'(s1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap, s2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap): bool {
    s1 == s2
}
var $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap_$memory: $Memory $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap;

// struct aptos_discover::Organization at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:56:5+139
datatype $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization($name: $1_string_String, $address: int, $organization_discribe: $1_string_String)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'_name(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization, x: $1_string_String): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization(x, s->$address, s->$organization_discribe)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'_address(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization, x: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization(s->$name, x, s->$organization_discribe)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'_organization_discribe(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization, x: $1_string_String): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization(s->$name, s->$address, x)
}
function $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization): bool {
    $IsValid'$1_string_String'(s->$name)
      && $IsValid'address'(s->$address)
      && $IsValid'$1_string_String'(s->$organization_discribe)
}
function {:inline} $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'(s1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization, s2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization): bool {
    $IsEqual'$1_string_String'(s1->$name, s2->$name)
    && $IsEqual'address'(s1->$address, s2->$address)
    && $IsEqual'$1_string_String'(s1->$organization_discribe, s2->$organization_discribe)}
var $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization_$memory: $Memory $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization;

// struct aptos_discover::Problem at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:62:5+127
datatype $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem($problem: $1_string_String, $owner_address: int, $date: $1_string_String)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'_problem(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem, x: $1_string_String): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem(x, s->$owner_address, s->$date)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'_owner_address(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem, x: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem(s->$problem, x, s->$date)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'_date(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem, x: $1_string_String): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem(s->$problem, s->$owner_address, x)
}
function $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem): bool {
    $IsValid'$1_string_String'(s->$problem)
      && $IsValid'address'(s->$owner_address)
      && $IsValid'$1_string_String'(s->$date)
}
function {:inline} $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'(s1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem, s2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem): bool {
    $IsEqual'$1_string_String'(s1->$problem, s2->$problem)
    && $IsEqual'address'(s1->$owner_address, s2->$owner_address)
    && $IsEqual'$1_string_String'(s1->$date, s2->$date)}
var $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_$memory: $Memory $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem;

// struct aptos_discover::Problem_set at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:84:5+287
datatype $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set($owner: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization, $problem_details: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem, $question: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set', $true_answer: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', $false_answer: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer', $reward: int)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_owner(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set, x: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set(x, s->$problem_details, s->$question, s->$true_answer, s->$false_answer, s->$reward)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_problem_details(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set, x: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set(s->$owner, x, s->$question, s->$true_answer, s->$false_answer, s->$reward)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set, x: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set(s->$owner, s->$problem_details, x, s->$true_answer, s->$false_answer, s->$reward)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_true_answer(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set, x: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set(s->$owner, s->$problem_details, s->$question, x, s->$false_answer, s->$reward)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_false_answer(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set, x: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set(s->$owner, s->$problem_details, s->$question, s->$true_answer, x, s->$reward)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_reward(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set, x: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set(s->$owner, s->$problem_details, s->$question, s->$true_answer, s->$false_answer, x)
}
function $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set): bool {
    $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'(s->$owner)
      && $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'(s->$problem_details)
      && $IsValid'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(s->$question)
      && $IsValid'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(s->$true_answer)
      && $IsValid'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(s->$false_answer)
      && $IsValid'u64'(s->$reward)
}
function {:inline} $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'(s1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set, s2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set): bool {
    $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization'(s1->$owner, s2->$owner)
    && $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem'(s1->$problem_details, s2->$problem_details)
    && $IsEqual'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''(s1->$question, s2->$question)
    && $IsEqual'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(s1->$true_answer, s2->$true_answer)
    && $IsEqual'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''(s1->$false_answer, s2->$false_answer)
    && $IsEqual'u64'(s1->$reward, s2->$reward)}
var $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory: $Memory $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set;

// struct aptos_discover::Q_set at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:69:5+150
datatype $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set($img_url_set: $1_string_String, $true_number: int, $false_number: int, $answer_number: int)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'_img_url_set(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set, x: $1_string_String): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set(x, s->$true_number, s->$false_number, s->$answer_number)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'_true_number(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set, x: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set(s->$img_url_set, x, s->$false_number, s->$answer_number)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'_false_number(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set, x: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set(s->$img_url_set, s->$true_number, x, s->$answer_number)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'_answer_number(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set, x: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set(s->$img_url_set, s->$true_number, s->$false_number, x)
}
function $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set): bool {
    $IsValid'$1_string_String'(s->$img_url_set)
      && $IsValid'u64'(s->$true_number)
      && $IsValid'u64'(s->$false_number)
      && $IsValid'u64'(s->$answer_number)
}
function {:inline} $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'(s1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set, s2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set): bool {
    $IsEqual'$1_string_String'(s1->$img_url_set, s2->$img_url_set)
    && $IsEqual'u64'(s1->$true_number, s2->$true_number)
    && $IsEqual'u64'(s1->$false_number, s2->$false_number)
    && $IsEqual'u64'(s1->$answer_number, s2->$answer_number)}
var $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set_$memory: $Memory $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;

// struct aptos_discover::ResourceCap at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:52:5+62
datatype $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap($cap: $1_account_SignerCapability)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'_cap(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap, x: $1_account_SignerCapability): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap(x)
}
function $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap): bool {
    $IsValid'$1_account_SignerCapability'(s->$cap)
}
function {:inline} $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'(s1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap, s2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap): bool {
    s1 == s2
}
var $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory: $Memory $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap;

// struct aptos_discover::Resource_store_object at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:32:5+67
datatype $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object($object: int)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'_object(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object, x: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object(x)
}
function $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object): bool {
    $IsValid'address'(s->$object)
}
function {:inline} $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'(s1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object, s2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object): bool {
    s1 == s2
}
var $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory: $Memory $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object;

// struct aptos_discover::User_answer at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:76:5+184
datatype $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer($image: $1_string_String, $index_of_smart_vector: int, $answer: bool, $user_address: int, $date: $1_string_String)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'_image(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer, x: $1_string_String): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer(x, s->$index_of_smart_vector, s->$answer, s->$user_address, s->$date)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'_index_of_smart_vector(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer, x: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer(s->$image, x, s->$answer, s->$user_address, s->$date)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'_answer(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer, x: bool): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer(s->$image, s->$index_of_smart_vector, x, s->$user_address, s->$date)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'_user_address(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer, x: int): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer(s->$image, s->$index_of_smart_vector, s->$answer, x, s->$date)
}
function {:inline} $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'_date(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer, x: $1_string_String): $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer {
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer(s->$image, s->$index_of_smart_vector, s->$answer, s->$user_address, x)
}
function $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(s: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer): bool {
    $IsValid'$1_string_String'(s->$image)
      && $IsValid'u64'(s->$index_of_smart_vector)
      && $IsValid'bool'(s->$answer)
      && $IsValid'address'(s->$user_address)
      && $IsValid'$1_string_String'(s->$date)
}
function {:inline} $IsEqual'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'(s1: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer, s2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer): bool {
    $IsEqual'$1_string_String'(s1->$image, s2->$image)
    && $IsEqual'u64'(s1->$index_of_smart_vector, s2->$index_of_smart_vector)
    && $IsEqual'bool'(s1->$answer, s2->$answer)
    && $IsEqual'address'(s1->$user_address, s2->$user_address)
    && $IsEqual'$1_string_String'(s1->$date, s2->$date)}
var $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer_$memory: $Memory $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer;

// fun aptos_discover::answer_question [verification] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1761
procedure {:timeLimit 40} $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_answer_question$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: bool, _$t3: $1_string_String, _$t4: int) returns ()
{
    // declare local variables
    var $t5: int;
    var $t6: $signer;
    var $t7: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set);
    var $t8: int;
    var $t9: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer;
    var $t10: $signer;
    var $t11: int;
    var $t12: Vec (int);
    var $t13: int;
    var $t14: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap;
    var $t15: int;
    var $t16: $1_account_SignerCapability;
    var $t17: int;
    var $t18: $signer;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set);
    var $t23: int;
    var $t24: bool;
    var $t25: int;
    var $t26: int;
    var $t27: int;
    var $t28: $1_object_ConstructorRef;
    var $t29: int;
    var $t30: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer;
    var $t31: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var $t32: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t33: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t34: int;
    var $t35: bool;
    var $t36: bool;
    var $t37: int;
    var $t38: int;
    var $t39: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t40: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t41: $Mutation (int);
    var $t42: bool;
    var $t43: bool;
    var $t44: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t45: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t46: int;
    var $t47: bool;
    var $t48: bool;
    var $t49: int;
    var $t50: int;
    var $t51: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t52: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t53: $Mutation (int);
    var $t54: bool;
    var $t55: bool;
    var $t56: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer');
    var $t57: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t58: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t59: int;
    var $t60: bool;
    var $t61: bool;
    var $t62: int;
    var $t63: int;
    var $t64: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t65: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t66: $Mutation (int);
    var $t67: bool;
    var $t68: bool;
    var $t69: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t70: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t71: int;
    var $t72: bool;
    var $t73: bool;
    var $t74: int;
    var $t75: int;
    var $t76: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t77: $Mutation ($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set);
    var $t78: $Mutation (int);
    var $t79: bool;
    var $t80: bool;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: bool;
    var $t3: $1_string_String;
    var $t4: int;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set;
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume {:print "$at(2,6031,6032)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume $IsValid'bool'($t2);

    // assume WellFormed($t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume $IsValid'$1_string_String'($t3);

    // assume WellFormed($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume $IsValid'address'($t4);

    // assume forall $rsc: features::Features: ResourceDomain<features::Features>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: object::TombStone: ResourceDomain<object::TombStone>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: object::Untransferable: ResourceDomain<object::Untransferable>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: fungible_asset::Untransferable: ResourceDomain<fungible_asset::Untransferable>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: fungible_asset::ConcurrentFungibleBalance: ResourceDomain<fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: fungible_asset::ConcurrentSupply: ResourceDomain<fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: fungible_asset::DispatchFunctionStore: ResourceDomain<fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: fungible_asset::FungibleStore: ResourceDomain<fungible_asset::FungibleStore>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: fungible_asset::Supply: ResourceDomain<fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: dispatchable_fungible_asset::TransferRefStore: ResourceDomain<dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: primary_fungible_store::DeriveRefPod: ResourceDomain<primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: aptos_discover::ChainMark_FA_cap: ResourceDomain<aptos_discover::ChainMark_FA_cap>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory, $a_0);
    ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'($rsc))));

    // assume forall $rsc: aptos_discover::Problem_set: ResourceDomain<aptos_discover::Problem_set>(): And(WellFormed($rsc), And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc))), 0))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc))), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.question($rsc))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc)))))), Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($rsc)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($rsc))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.true_answer($rsc))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($rsc)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($rsc))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.false_answer($rsc))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($rsc)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($rsc))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc)))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $a_0);
    (($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'($rsc) && ((((((((((((((((((((($1_option_$is_none'u64'($rsc->$question->$bucket_size) || ($1_option_$is_some'u64'($rsc->$question->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($rsc->$question->$bucket_size), 0))) && ($1_option_$is_none'u64'($rsc->$question->$inline_capacity) || (LenVec($rsc->$question->$inline_vec) <= $1_option_$borrow'u64'($rsc->$question->$inline_capacity)))) && (($1_option_$is_none'u64'($rsc->$question->$inline_capacity) && $1_option_$is_none'u64'($rsc->$question->$bucket_size)) || ($1_option_$is_some'u64'($rsc->$question->$inline_capacity) && $1_option_$is_some'u64'($rsc->$question->$bucket_size)))) && (LenVec($rsc->$question->$big_vec->$vec) <= 1)) && (var $range_1 := $rsc->$question->$big_vec->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_3 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_4: int :: $InRange($range_3, $i_4) ==> (var i := $i_4;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_5 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_6: int :: $InRange($range_5, $i_6) ==> (var i := $i_6;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($rsc->$question->$inline_capacity->$vec) <= 1)) && (LenVec($rsc->$question->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($rsc->$true_answer->$bucket_size) || ($1_option_$is_some'u64'($rsc->$true_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($rsc->$true_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($rsc->$true_answer->$inline_capacity) || (LenVec($rsc->$true_answer->$inline_vec) <= $1_option_$borrow'u64'($rsc->$true_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($rsc->$true_answer->$inline_capacity) && $1_option_$is_none'u64'($rsc->$true_answer->$bucket_size)) || ($1_option_$is_some'u64'($rsc->$true_answer->$inline_capacity) && $1_option_$is_some'u64'($rsc->$true_answer->$bucket_size)))) && (LenVec($rsc->$true_answer->$big_vec->$vec) <= 1)) && (var $range_7 := $rsc->$true_answer->$big_vec->$vec; (forall $i_8: int :: InRangeVec($range_7, $i_8) ==> (var $elem := ReadVec($range_7, $i_8);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_9 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_10: int :: $InRange($range_9, $i_10) ==> (var i := $i_10;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_11 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_12: int :: $InRange($range_11, $i_12) ==> (var i := $i_12;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($rsc->$true_answer->$inline_capacity->$vec) <= 1)) && (LenVec($rsc->$true_answer->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($rsc->$false_answer->$bucket_size) || ($1_option_$is_some'u64'($rsc->$false_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($rsc->$false_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($rsc->$false_answer->$inline_capacity) || (LenVec($rsc->$false_answer->$inline_vec) <= $1_option_$borrow'u64'($rsc->$false_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($rsc->$false_answer->$inline_capacity) && $1_option_$is_none'u64'($rsc->$false_answer->$bucket_size)) || ($1_option_$is_some'u64'($rsc->$false_answer->$inline_capacity) && $1_option_$is_some'u64'($rsc->$false_answer->$bucket_size)))) && (LenVec($rsc->$false_answer->$big_vec->$vec) <= 1)) && (var $range_13 := $rsc->$false_answer->$big_vec->$vec; (forall $i_14: int :: InRangeVec($range_13, $i_14) ==> (var $elem := ReadVec($range_13, $i_14);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_15 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_16: int :: $InRange($range_15, $i_16) ==> (var i := $i_16;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_17 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_18: int :: $InRange($range_17, $i_18) ==> (var i := $i_18;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($rsc->$false_answer->$inline_capacity->$vec) <= 1)) && (LenVec($rsc->$false_answer->$bucket_size->$vec) <= 1))))));

    // assume forall $rsc: aptos_discover::ResourceCap: ResourceDomain<aptos_discover::ResourceCap>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory, $a_0);
    ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'($rsc))));

    // trace_local[caller]($t0) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume {:print "$track_local(86,0,0):", $t0} $t0 == $t0;

    // trace_local[image_url]($t1) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume {:print "$track_local(86,0,1):", $t1} $t1 == $t1;

    // trace_local[answer1]($t2) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume {:print "$track_local(86,0,2):", $t2} $t2 == $t2;

    // trace_local[data1]($t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume {:print "$track_local(86,0,3):", $t3} $t3 == $t3;

    // trace_local[problem_set_address]($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:170:5+1
    assume {:print "$track_local(86,0,4):", $t4} $t4 == $t4;

    // $t11 := 0x28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:171:77+5
    assume {:print "$at(2,6297,6302)"} true;
    $t11 := 18425465769474857495901587093882631151486939702443524661813556910146273842942;
    assume $IsValid'address'($t11);

    // $t12 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:171:83+4
    $t12 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t12);

    // $t13 := opaque begin: account::create_resource_address($t11, $t12) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:171:52+36

    // assume WellFormed($t13) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:171:52+36
    assume $IsValid'address'($t13);

    // assume Eq<address>($t13, account::spec_create_resource_address($t11, $t12)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:171:52+36
    assume $IsEqual'address'($t13, $1_account_spec_create_resource_address($t11, $t12));

    // $t13 := opaque end: account::create_resource_address($t11, $t12) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:171:52+36

    // $t14 := get_global<aptos_discover::ResourceCap>($t13) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:171:25+13
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory, $t13);
    }
    if ($abort_flag) {
        assume {:print "$at(2,6245,6258)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t16 := get_field<aptos_discover::ResourceCap>.cap($t14) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:171:24+69
    $t16 := $t14->$cap;

    // assume Identical($t17, select account::SignerCapability.account<account::SignerCapability>($t16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:652:9+30
    assume {:print "$at(82,32362,32392)"} true;
    assume ($t17 == $t16->$account);

    // $t18 := account::create_signer_with_capability($t16) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:172:32+39
    assume {:print "$at(2,6346,6385)"} true;
    call $t18 := $1_account_create_signer_with_capability($t16);
    if ($abort_flag) {
        assume {:print "$at(2,6346,6385)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // trace_local[resource_signer]($t18) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:172:13+15
    assume {:print "$track_local(86,0,10):", $t18} $t18 == $t18;

    // $t19 := exists<aptos_discover::Problem_set>($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:173:17+6
    assume {:print "$at(2,6403,6409)"} true;
    $t19 := $ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t4);

    // if ($t19) goto L1 else goto L0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:173:9+71
    if ($t19) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:173:9+71
L1:

    // goto L2 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:173:9+71
    assume {:print "$at(2,6395,6466)"} true;
    goto L2;

    // label L0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:173:9+71
L0:

    // $t20 := 2 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:173:58+21
    assume {:print "$at(2,6444,6465)"} true;
    $t20 := 2;
    assume $IsValid'u64'($t20);

    // trace_abort($t20) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:173:9+71
    assume {:print "$at(2,6395,6466)"} true;
    assume {:print "$track_abort(86,0):", $t20} $t20 == $t20;

    // $t15 := move($t20) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:173:9+71
    $t15 := $t20;

    // goto L42 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:173:9+71
    goto L42;

    // label L2 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:174:32+19
    assume {:print "$at(2,6499,6518)"} true;
L2:

    // $t21 := aptos_discover::find_index($t4, $t1) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:174:21+41
    assume {:print "$at(2,6488,6529)"} true;
    call $t21 := $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_find_index($t4, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,6488,6529)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // trace_local[index]($t21) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:174:13+5
    assume {:print "$track_local(86,0,8):", $t21} $t21 == $t21;

    // $t22 := borrow_global<aptos_discover::Problem_set>($t4) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:175:22+17
    assume {:print "$at(2,6552,6569)"} true;
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t22 := $Mutation($Global($t4), EmptyVec(), $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t4));
    }
    if ($abort_flag) {
        assume {:print "$at(2,6552,6569)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // trace_local[borrow]($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:175:13+6
    $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set' := $Dereference($t22);
    assume {:print "$track_local(86,0,7):", $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'} $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set' == $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set';

    // $t23 := 9999999 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:176:26+7
    assume {:print "$at(2,6630,6637)"} true;
    $t23 := 9999999;
    assume $IsValid'u64'($t23);

    // $t24 := !=($t21, $t23) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:176:23+2
    $t24 := !$IsEqual'u64'($t21, $t23);

    // if ($t24) goto L4 else goto L3 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:176:9+39
    if ($t24) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:176:9+39
L4:

    // goto L5 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:176:9+39
    assume {:print "$at(2,6613,6652)"} true;
    goto L5;

    // label L3 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:176:9+39
L3:

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$question->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$question->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$question->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.question($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$question->$inline_capacity) || (LenVec($Dereference($t22)->$question->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$question->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$question->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$question->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$question->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$question->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$question->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$bucket_size->$vec) <= 1);

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$true_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$true_answer->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.true_answer($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$inline_capacity) || (LenVec($Dereference($t22)->$true_answer->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$true_answer->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$true_answer->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$true_answer->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$true_answer->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$true_answer->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$bucket_size->$vec) <= 1);

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$false_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$false_answer->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.false_answer($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$inline_capacity) || (LenVec($Dereference($t22)->$false_answer->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$false_answer->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$false_answer->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$false_answer->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$false_answer->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$false_answer->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$bucket_size->$vec) <= 1);

    // drop($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:176:9+39
    assume {:print "$at(2,6613,6652)"} true;

    // $t25 := 3 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:176:34+13
    $t25 := 3;
    assume $IsValid'u64'($t25);

    // trace_abort($t25) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:176:9+39
    assume {:print "$at(2,6613,6652)"} true;
    assume {:print "$track_abort(86,0):", $t25} $t25 == $t25;

    // $t15 := move($t25) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:176:9+39
    $t15 := $t25;

    // goto L42 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:176:9+39
    goto L42;

    // label L5 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:177:53+15
    assume {:print "$at(2,6706,6721)"} true;
L5:

    // $t26 := signer::address_of($t18) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:177:42+27
    assume {:print "$at(2,6695,6722)"} true;
    call $t26 := $1_signer_address_of($t18);
    if ($abort_flag) {
        assume {:print "$at(2,6695,6722)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // assume Identical($t27, transaction_context::spec_generate_unique_address()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:69:9+73
    assume {:print "$at(156,3206,3279)"} true;
    assume ($t27 == $1_transaction_context_spec_generate_unique_address());

    // $t28 := object::create_object($t26) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:177:20+50
    assume {:print "$at(2,6673,6723)"} true;
    call $t28 := $1_object_create_object($t26);
    if ($abort_flag) {
        assume {:print "$at(2,6673,6723)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // drop($t28) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:177:13+4

    // $t29 := signer::address_of($t0) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:182:26+18
    assume {:print "$at(2,6890,6908)"} true;
    call $t29 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,6890,6908)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t30 := pack aptos_discover::User_answer($t1, $t21, $t2, $t29, $t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:178:30+188
    assume {:print "$at(2,6754,6942)"} true;
    $t30 := $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer($t1, $t21, $t2, $t29, $t3);

    // trace_local[new_user_anser]($t30) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:178:13+14
    assume {:print "$track_local(86,0,9):", $t30} $t30 == $t30;

    // if ($t2) goto L7 else goto L6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:185:9+787
    assume {:print "$at(2,6952,7739)"} true;
    if ($t2) { goto L7; } else { goto L6; }

    // label L7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:186:42+6
    assume {:print "$at(2,7007,7013)"} true;
L7:

    // $t31 := borrow_field<aptos_discover::Problem_set>.true_answer($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:186:37+23
    assume {:print "$at(2,7002,7025)"} true;
    $t31 := $ChildMutation($t22, 3, $Dereference($t22)->$true_answer);

    // smart_vector::push_back<aptos_discover::User_answer>($t31, $t30) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:186:13+63
    call $t31 := $1_smart_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t31, $t30);
    if ($abort_flag) {
        assume {:print "$at(2,6978,7041)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // write_back[Reference($t22).true_answer (smart_vector::SmartVector<aptos_discover::User_answer>)]($t31) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:186:13+63
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_true_answer($Dereference($t22), $Dereference($t31)));

    // $t32 := borrow_field<aptos_discover::Problem_set>.question($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:104+20
    assume {:print "$at(2,7146,7166)"} true;
    $t32 := $ChildMutation($t22, 2, $Dereference($t22)->$question);

    // $t33 := smart_vector::borrow_mut<aptos_discover::Q_set>($t32, $t21) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:79+52
    call $t33,$t32 := $1_smart_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t32, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,7121,7173)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t34 := get_field<aptos_discover::Q_set>.true_number($t33) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:79+64
    $t34 := $Dereference($t33)->$true_number;

    // $t35 := is_parent[Reference($t32).inline_vec (vector<aptos_discover::Q_set>)/[]]($t33) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:79+64
    $t35 := $IsParentMutationHyper($t32, MakeVec2(0, -1), $t33);

    // if ($t35) goto L9 else goto L10 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:79+64
    if ($t35) { goto L9; } else { goto L10; }

    // label L9 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:79+64
L9:

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t32) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:79+64
    assume {:print "$at(2,7121,7185)"} true;
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t32)));

    // label L10 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:79+64
L10:

    // $t36 := is_parent[Reference($t32).big_vec (option::Option<big_vector::BigVector<aptos_discover::Q_set>>)/.vec (vector<big_vector::BigVector<aptos_discover::Q_set>>)/[]/.buckets (table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>)/[]/[]]($t33) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:79+64
    assume {:print "$at(2,7121,7185)"} true;
    $t36 := $IsParentMutationHyper($t32, ConcatVec(MakeVec4(1, 0, -1, 0), MakeVec2(-1, -1)), $t33);

    // if ($t36) goto L11 else goto L43 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:79+64
    if ($t36) { goto L11; } else { goto L43; }

    // label L11 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:79+64
L11:

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t32) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:79+64
    assume {:print "$at(2,7121,7185)"} true;
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t32)));

    // label L12 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:79+64
L12:

    // $t37 := 1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:144+1
    assume {:print "$at(2,7186,7187)"} true;
    $t37 := 1;
    assume $IsValid'u64'($t37);

    // $t38 := +($t34, $t37) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:143+1
    call $t38 := $AddU64($t34, $t37);
    if ($abort_flag) {
        assume {:print "$at(2,7185,7186)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t39 := borrow_field<aptos_discover::Problem_set>.question($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:38+20
    $t39 := $ChildMutation($t22, 2, $Dereference($t22)->$question);

    // $t40 := smart_vector::borrow_mut<aptos_discover::Q_set>($t39, $t21) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+52
    call $t40,$t39 := $1_smart_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t39, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,7055,7107)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t41 := borrow_field<aptos_discover::Q_set>.true_number($t40) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+64
    $t41 := $ChildMutation($t40, 1, $Dereference($t40)->$true_number);

    // write_ref($t41, $t38) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
    $t41 := $UpdateMutation($t41, $t38);

    // $t42 := is_parent[Reference($t39).inline_vec (vector<aptos_discover::Q_set>)/[]]($t40) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
    $t42 := $IsParentMutationHyper($t39, MakeVec2(0, -1), $t40);

    // if ($t42) goto L13 else goto L14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
    if ($t42) { goto L13; } else { goto L14; }

    // label L13 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
L13:

    // write_back[Reference($t40).true_number (u64)]($t41) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
    assume {:print "$at(2,7055,7187)"} true;
    $t40 := $UpdateMutation($t40, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'_true_number($Dereference($t40), $Dereference($t41)));

    // write_back[Reference($t39).inline_vec (vector<aptos_discover::Q_set>)/[]]($t40) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
    $t39 := $UpdateMutation($t39, (var $$sel0 := $Dereference($t39)->$inline_vec; $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_inline_vec($Dereference($t39), UpdateVec($$sel0, ReadVec($t40->p, LenVec($t39->p) + 1), $Dereference($t40)))));

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t39) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t39)));

    // label L14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
L14:

    // $t43 := is_parent[Reference($t39).big_vec (option::Option<big_vector::BigVector<aptos_discover::Q_set>>)/.vec (vector<big_vector::BigVector<aptos_discover::Q_set>>)/[]/.buckets (table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>)/[]/[]]($t40) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
    assume {:print "$at(2,7055,7187)"} true;
    $t43 := $IsParentMutationHyper($t39, ConcatVec(MakeVec4(1, 0, -1, 0), MakeVec2(-1, -1)), $t40);

    // if ($t43) goto L15 else goto L44 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
    if ($t43) { goto L15; } else { goto L44; }

    // label L15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
L15:

    // write_back[Reference($t40).true_number (u64)]($t41) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
    assume {:print "$at(2,7055,7187)"} true;
    $t40 := $UpdateMutation($t40, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'_true_number($Dereference($t40), $Dereference($t41)));

    // write_back[Reference($t39).big_vec (option::Option<big_vector::BigVector<aptos_discover::Q_set>>)/.vec (vector<big_vector::BigVector<aptos_discover::Q_set>>)/[]/.buckets (table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>)/[]/[]]($t40) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
    $t39 := $UpdateMutation($t39, (var $$sel0 := $Dereference($t39)->$big_vec; $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_big_vec($Dereference($t39), (var $$sel1 := $$sel0->$vec; $Update'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''_vec($$sel0, (var $$sel2 := ReadVec($$sel1, ReadVec($t40->p, LenVec($t39->p) + 2)); UpdateVec($$sel1, ReadVec($t40->p, LenVec($t39->p) + 2), (var $$sel3 := $$sel2->$buckets; $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_buckets($$sel2, (var $$sel4 := GetTable($$sel3, ReadVec($t40->p, LenVec($t39->p) + 4)); UpdateTable($$sel3, ReadVec($t40->p, LenVec($t39->p) + 4), UpdateVec($$sel4, ReadVec($t40->p, LenVec($t39->p) + 5), $Dereference($t40)))))))))))));

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t39) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t39)));

    // label L16 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:187:13+132
L16:

    // $t44 := borrow_field<aptos_discover::Problem_set>.question($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:106+20
    assume {:print "$at(2,7294,7314)"} true;
    $t44 := $ChildMutation($t22, 2, $Dereference($t22)->$question);

    // $t45 := smart_vector::borrow_mut<aptos_discover::Q_set>($t44, $t21) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:81+52
    call $t45,$t44 := $1_smart_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t44, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,7269,7321)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t46 := get_field<aptos_discover::Q_set>.answer_number($t45) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:81+66
    $t46 := $Dereference($t45)->$answer_number;

    // $t47 := is_parent[Reference($t44).inline_vec (vector<aptos_discover::Q_set>)/[]]($t45) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:81+66
    $t47 := $IsParentMutationHyper($t44, MakeVec2(0, -1), $t45);

    // if ($t47) goto L17 else goto L18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:81+66
    if ($t47) { goto L17; } else { goto L18; }

    // label L17 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:81+66
L17:

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t44) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:81+66
    assume {:print "$at(2,7269,7335)"} true;
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t44)));

    // label L18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:81+66
L18:

    // $t48 := is_parent[Reference($t44).big_vec (option::Option<big_vector::BigVector<aptos_discover::Q_set>>)/.vec (vector<big_vector::BigVector<aptos_discover::Q_set>>)/[]/.buckets (table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>)/[]/[]]($t45) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:81+66
    assume {:print "$at(2,7269,7335)"} true;
    $t48 := $IsParentMutationHyper($t44, ConcatVec(MakeVec4(1, 0, -1, 0), MakeVec2(-1, -1)), $t45);

    // if ($t48) goto L19 else goto L45 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:81+66
    if ($t48) { goto L19; } else { goto L45; }

    // label L19 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:81+66
L19:

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t44) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:81+66
    assume {:print "$at(2,7269,7335)"} true;
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t44)));

    // label L20 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:81+66
L20:

    // $t49 := 1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:148+1
    assume {:print "$at(2,7336,7337)"} true;
    $t49 := 1;
    assume $IsValid'u64'($t49);

    // $t50 := +($t46, $t49) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:147+1
    call $t50 := $AddU64($t46, $t49);
    if ($abort_flag) {
        assume {:print "$at(2,7335,7336)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t51 := borrow_field<aptos_discover::Problem_set>.question($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:38+20
    $t51 := $ChildMutation($t22, 2, $Dereference($t22)->$question);

    // $t52 := smart_vector::borrow_mut<aptos_discover::Q_set>($t51, $t21) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+52
    call $t52,$t51 := $1_smart_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t51, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,7201,7253)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t53 := borrow_field<aptos_discover::Q_set>.answer_number($t52) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+66
    $t53 := $ChildMutation($t52, 3, $Dereference($t52)->$answer_number);

    // write_ref($t53, $t50) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    $t53 := $UpdateMutation($t53, $t50);

    // $t54 := is_parent[Reference($t51).inline_vec (vector<aptos_discover::Q_set>)/[]]($t52) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    $t54 := $IsParentMutationHyper($t51, MakeVec2(0, -1), $t52);

    // if ($t54) goto L21 else goto L22 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    if ($t54) { goto L21; } else { goto L22; }

    // label L21 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
L21:

    // write_back[Reference($t52).answer_number (u64)]($t53) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    assume {:print "$at(2,7201,7337)"} true;
    $t52 := $UpdateMutation($t52, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'_answer_number($Dereference($t52), $Dereference($t53)));

    // write_back[Reference($t51).inline_vec (vector<aptos_discover::Q_set>)/[]]($t52) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    $t51 := $UpdateMutation($t51, (var $$sel0 := $Dereference($t51)->$inline_vec; $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_inline_vec($Dereference($t51), UpdateVec($$sel0, ReadVec($t52->p, LenVec($t51->p) + 1), $Dereference($t52)))));

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t51) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t51)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$question->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$question->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$question->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.question($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$question->$inline_capacity) || (LenVec($Dereference($t22)->$question->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$question->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$question->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$question->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$question->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$question->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$question->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$bucket_size->$vec) <= 1);

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$true_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$true_answer->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.true_answer($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$inline_capacity) || (LenVec($Dereference($t22)->$true_answer->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$true_answer->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$true_answer->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$true_answer->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$true_answer->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$true_answer->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$bucket_size->$vec) <= 1);

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$false_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$false_answer->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.false_answer($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$inline_capacity) || (LenVec($Dereference($t22)->$false_answer->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$false_answer->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$false_answer->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$false_answer->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$false_answer->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$false_answer->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$bucket_size->$vec) <= 1);

    // write_back[aptos_discover::Problem_set@]($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    assume {:print "$at(2,7201,7337)"} true;
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory := $ResourceUpdate($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $GlobalLocationAddress($t22),
        $Dereference($t22));

    // label L22 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
L22:

    // $t55 := is_parent[Reference($t51).big_vec (option::Option<big_vector::BigVector<aptos_discover::Q_set>>)/.vec (vector<big_vector::BigVector<aptos_discover::Q_set>>)/[]/.buckets (table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>)/[]/[]]($t52) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    assume {:print "$at(2,7201,7337)"} true;
    $t55 := $IsParentMutationHyper($t51, ConcatVec(MakeVec4(1, 0, -1, 0), MakeVec2(-1, -1)), $t52);

    // if ($t55) goto L23 else goto L46 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    if ($t55) { goto L23; } else { goto L46; }

    // label L23 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
L23:

    // write_back[Reference($t52).answer_number (u64)]($t53) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    assume {:print "$at(2,7201,7337)"} true;
    $t52 := $UpdateMutation($t52, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'_answer_number($Dereference($t52), $Dereference($t53)));

    // write_back[Reference($t51).big_vec (option::Option<big_vector::BigVector<aptos_discover::Q_set>>)/.vec (vector<big_vector::BigVector<aptos_discover::Q_set>>)/[]/.buckets (table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>)/[]/[]]($t52) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    $t51 := $UpdateMutation($t51, (var $$sel0 := $Dereference($t51)->$big_vec; $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_big_vec($Dereference($t51), (var $$sel1 := $$sel0->$vec; $Update'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''_vec($$sel0, (var $$sel2 := ReadVec($$sel1, ReadVec($t52->p, LenVec($t51->p) + 2)); UpdateVec($$sel1, ReadVec($t52->p, LenVec($t51->p) + 2), (var $$sel3 := $$sel2->$buckets; $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_buckets($$sel2, (var $$sel4 := GetTable($$sel3, ReadVec($t52->p, LenVec($t51->p) + 4)); UpdateTable($$sel3, ReadVec($t52->p, LenVec($t51->p) + 4), UpdateVec($$sel4, ReadVec($t52->p, LenVec($t51->p) + 5), $Dereference($t52)))))))))))));

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t51) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t51)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$question->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$question->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$question->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.question($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$question->$inline_capacity) || (LenVec($Dereference($t22)->$question->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$question->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$question->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$question->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$question->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$question->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$question->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$bucket_size->$vec) <= 1);

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$true_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$true_answer->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.true_answer($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$inline_capacity) || (LenVec($Dereference($t22)->$true_answer->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$true_answer->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$true_answer->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$true_answer->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$true_answer->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$true_answer->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$bucket_size->$vec) <= 1);

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$false_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$false_answer->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.false_answer($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$inline_capacity) || (LenVec($Dereference($t22)->$false_answer->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$false_answer->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$false_answer->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$false_answer->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$false_answer->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$false_answer->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$bucket_size->$vec) <= 1);

    // write_back[aptos_discover::Problem_set@]($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
    assume {:print "$at(2,7201,7337)"} true;
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory := $ResourceUpdate($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $GlobalLocationAddress($t22),
        $Dereference($t22));

    // label L24 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:13+136
L24:

    // goto L8 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:188:149+1
    assume {:print "$at(2,7337,7338)"} true;
    goto L8;

    // label L6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:190:42+6
    assume {:print "$at(2,7395,7401)"} true;
L6:

    // $t56 := borrow_field<aptos_discover::Problem_set>.false_answer($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:190:37+24
    assume {:print "$at(2,7390,7414)"} true;
    $t56 := $ChildMutation($t22, 4, $Dereference($t22)->$false_answer);

    // smart_vector::push_back<aptos_discover::User_answer>($t56, $t30) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:190:13+64
    call $t56 := $1_smart_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'($t56, $t30);
    if ($abort_flag) {
        assume {:print "$at(2,7366,7430)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // write_back[Reference($t22).false_answer (smart_vector::SmartVector<aptos_discover::User_answer>)]($t56) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:190:13+64
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_false_answer($Dereference($t22), $Dereference($t56)));

    // $t57 := borrow_field<aptos_discover::Problem_set>.question($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:105+20
    assume {:print "$at(2,7536,7556)"} true;
    $t57 := $ChildMutation($t22, 2, $Dereference($t22)->$question);

    // $t58 := smart_vector::borrow_mut<aptos_discover::Q_set>($t57, $t21) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:80+52
    call $t58,$t57 := $1_smart_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t57, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,7511,7563)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t59 := get_field<aptos_discover::Q_set>.false_number($t58) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:80+65
    $t59 := $Dereference($t58)->$false_number;

    // $t60 := is_parent[Reference($t57).inline_vec (vector<aptos_discover::Q_set>)/[]]($t58) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:80+65
    $t60 := $IsParentMutationHyper($t57, MakeVec2(0, -1), $t58);

    // if ($t60) goto L25 else goto L26 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:80+65
    if ($t60) { goto L25; } else { goto L26; }

    // label L25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:80+65
L25:

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t57) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:80+65
    assume {:print "$at(2,7511,7576)"} true;
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t57)));

    // label L26 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:80+65
L26:

    // $t61 := is_parent[Reference($t57).big_vec (option::Option<big_vector::BigVector<aptos_discover::Q_set>>)/.vec (vector<big_vector::BigVector<aptos_discover::Q_set>>)/[]/.buckets (table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>)/[]/[]]($t58) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:80+65
    assume {:print "$at(2,7511,7576)"} true;
    $t61 := $IsParentMutationHyper($t57, ConcatVec(MakeVec4(1, 0, -1, 0), MakeVec2(-1, -1)), $t58);

    // if ($t61) goto L27 else goto L47 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:80+65
    if ($t61) { goto L27; } else { goto L47; }

    // label L27 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:80+65
L27:

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t57) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:80+65
    assume {:print "$at(2,7511,7576)"} true;
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t57)));

    // label L28 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:80+65
L28:

    // $t62 := 1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:146+1
    assume {:print "$at(2,7577,7578)"} true;
    $t62 := 1;
    assume $IsValid'u64'($t62);

    // $t63 := +($t59, $t62) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:145+1
    call $t63 := $AddU64($t59, $t62);
    if ($abort_flag) {
        assume {:print "$at(2,7576,7577)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t64 := borrow_field<aptos_discover::Problem_set>.question($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:38+20
    $t64 := $ChildMutation($t22, 2, $Dereference($t22)->$question);

    // $t65 := smart_vector::borrow_mut<aptos_discover::Q_set>($t64, $t21) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+52
    call $t65,$t64 := $1_smart_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t64, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,7444,7496)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t66 := borrow_field<aptos_discover::Q_set>.false_number($t65) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+65
    $t66 := $ChildMutation($t65, 2, $Dereference($t65)->$false_number);

    // write_ref($t66, $t63) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
    $t66 := $UpdateMutation($t66, $t63);

    // $t67 := is_parent[Reference($t64).inline_vec (vector<aptos_discover::Q_set>)/[]]($t65) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
    $t67 := $IsParentMutationHyper($t64, MakeVec2(0, -1), $t65);

    // if ($t67) goto L29 else goto L30 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
    if ($t67) { goto L29; } else { goto L30; }

    // label L29 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
L29:

    // write_back[Reference($t65).false_number (u64)]($t66) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
    assume {:print "$at(2,7444,7578)"} true;
    $t65 := $UpdateMutation($t65, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'_false_number($Dereference($t65), $Dereference($t66)));

    // write_back[Reference($t64).inline_vec (vector<aptos_discover::Q_set>)/[]]($t65) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
    $t64 := $UpdateMutation($t64, (var $$sel0 := $Dereference($t64)->$inline_vec; $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_inline_vec($Dereference($t64), UpdateVec($$sel0, ReadVec($t65->p, LenVec($t64->p) + 1), $Dereference($t65)))));

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t64) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t64)));

    // label L30 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
L30:

    // $t68 := is_parent[Reference($t64).big_vec (option::Option<big_vector::BigVector<aptos_discover::Q_set>>)/.vec (vector<big_vector::BigVector<aptos_discover::Q_set>>)/[]/.buckets (table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>)/[]/[]]($t65) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
    assume {:print "$at(2,7444,7578)"} true;
    $t68 := $IsParentMutationHyper($t64, ConcatVec(MakeVec4(1, 0, -1, 0), MakeVec2(-1, -1)), $t65);

    // if ($t68) goto L31 else goto L48 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
    if ($t68) { goto L31; } else { goto L48; }

    // label L31 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
L31:

    // write_back[Reference($t65).false_number (u64)]($t66) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
    assume {:print "$at(2,7444,7578)"} true;
    $t65 := $UpdateMutation($t65, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'_false_number($Dereference($t65), $Dereference($t66)));

    // write_back[Reference($t64).big_vec (option::Option<big_vector::BigVector<aptos_discover::Q_set>>)/.vec (vector<big_vector::BigVector<aptos_discover::Q_set>>)/[]/.buckets (table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>)/[]/[]]($t65) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
    $t64 := $UpdateMutation($t64, (var $$sel0 := $Dereference($t64)->$big_vec; $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_big_vec($Dereference($t64), (var $$sel1 := $$sel0->$vec; $Update'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''_vec($$sel0, (var $$sel2 := ReadVec($$sel1, ReadVec($t65->p, LenVec($t64->p) + 2)); UpdateVec($$sel1, ReadVec($t65->p, LenVec($t64->p) + 2), (var $$sel3 := $$sel2->$buckets; $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_buckets($$sel2, (var $$sel4 := GetTable($$sel3, ReadVec($t65->p, LenVec($t64->p) + 4)); UpdateTable($$sel3, ReadVec($t65->p, LenVec($t64->p) + 4), UpdateVec($$sel4, ReadVec($t65->p, LenVec($t64->p) + 5), $Dereference($t65)))))))))))));

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t64) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t64)));

    // label L32 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:191:13+134
L32:

    // $t69 := borrow_field<aptos_discover::Problem_set>.question($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:106+20
    assume {:print "$at(2,7685,7705)"} true;
    $t69 := $ChildMutation($t22, 2, $Dereference($t22)->$question);

    // $t70 := smart_vector::borrow_mut<aptos_discover::Q_set>($t69, $t21) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:81+52
    call $t70,$t69 := $1_smart_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t69, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,7660,7712)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t71 := get_field<aptos_discover::Q_set>.answer_number($t70) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:81+66
    $t71 := $Dereference($t70)->$answer_number;

    // $t72 := is_parent[Reference($t69).inline_vec (vector<aptos_discover::Q_set>)/[]]($t70) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:81+66
    $t72 := $IsParentMutationHyper($t69, MakeVec2(0, -1), $t70);

    // if ($t72) goto L33 else goto L34 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:81+66
    if ($t72) { goto L33; } else { goto L34; }

    // label L33 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:81+66
L33:

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t69) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:81+66
    assume {:print "$at(2,7660,7726)"} true;
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t69)));

    // label L34 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:81+66
L34:

    // $t73 := is_parent[Reference($t69).big_vec (option::Option<big_vector::BigVector<aptos_discover::Q_set>>)/.vec (vector<big_vector::BigVector<aptos_discover::Q_set>>)/[]/.buckets (table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>)/[]/[]]($t70) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:81+66
    assume {:print "$at(2,7660,7726)"} true;
    $t73 := $IsParentMutationHyper($t69, ConcatVec(MakeVec4(1, 0, -1, 0), MakeVec2(-1, -1)), $t70);

    // if ($t73) goto L35 else goto L49 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:81+66
    if ($t73) { goto L35; } else { goto L49; }

    // label L35 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:81+66
L35:

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t69) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:81+66
    assume {:print "$at(2,7660,7726)"} true;
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t69)));

    // label L36 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:81+66
L36:

    // $t74 := 1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:148+1
    assume {:print "$at(2,7727,7728)"} true;
    $t74 := 1;
    assume $IsValid'u64'($t74);

    // $t75 := +($t71, $t74) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:147+1
    call $t75 := $AddU64($t71, $t74);
    if ($abort_flag) {
        assume {:print "$at(2,7726,7727)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t76 := borrow_field<aptos_discover::Problem_set>.question($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:38+20
    $t76 := $ChildMutation($t22, 2, $Dereference($t22)->$question);

    // $t77 := smart_vector::borrow_mut<aptos_discover::Q_set>($t76, $t21) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+52
    call $t77,$t76 := $1_smart_vector_borrow_mut'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t76, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,7592,7644)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // $t78 := borrow_field<aptos_discover::Q_set>.answer_number($t77) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+66
    $t78 := $ChildMutation($t77, 3, $Dereference($t77)->$answer_number);

    // write_ref($t78, $t75) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    $t78 := $UpdateMutation($t78, $t75);

    // $t79 := is_parent[Reference($t76).inline_vec (vector<aptos_discover::Q_set>)/[]]($t77) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    $t79 := $IsParentMutationHyper($t76, MakeVec2(0, -1), $t77);

    // if ($t79) goto L37 else goto L38 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    if ($t79) { goto L37; } else { goto L38; }

    // label L37 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
L37:

    // write_back[Reference($t77).answer_number (u64)]($t78) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    assume {:print "$at(2,7592,7728)"} true;
    $t77 := $UpdateMutation($t77, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'_answer_number($Dereference($t77), $Dereference($t78)));

    // write_back[Reference($t76).inline_vec (vector<aptos_discover::Q_set>)/[]]($t77) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    $t76 := $UpdateMutation($t76, (var $$sel0 := $Dereference($t76)->$inline_vec; $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_inline_vec($Dereference($t76), UpdateVec($$sel0, ReadVec($t77->p, LenVec($t76->p) + 1), $Dereference($t77)))));

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t76) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t76)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$question->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$question->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$question->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.question($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$question->$inline_capacity) || (LenVec($Dereference($t22)->$question->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$question->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$question->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$question->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$question->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$question->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$question->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$bucket_size->$vec) <= 1);

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$true_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$true_answer->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.true_answer($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$inline_capacity) || (LenVec($Dereference($t22)->$true_answer->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$true_answer->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$true_answer->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$true_answer->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$true_answer->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$true_answer->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$bucket_size->$vec) <= 1);

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$false_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$false_answer->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.false_answer($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$inline_capacity) || (LenVec($Dereference($t22)->$false_answer->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$false_answer->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$false_answer->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$false_answer->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$false_answer->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$false_answer->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$bucket_size->$vec) <= 1);

    // write_back[aptos_discover::Problem_set@]($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    assume {:print "$at(2,7592,7728)"} true;
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory := $ResourceUpdate($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $GlobalLocationAddress($t22),
        $Dereference($t22));

    // label L38 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
L38:

    // $t80 := is_parent[Reference($t76).big_vec (option::Option<big_vector::BigVector<aptos_discover::Q_set>>)/.vec (vector<big_vector::BigVector<aptos_discover::Q_set>>)/[]/.buckets (table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>)/[]/[]]($t77) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    assume {:print "$at(2,7592,7728)"} true;
    $t80 := $IsParentMutationHyper($t76, ConcatVec(MakeVec4(1, 0, -1, 0), MakeVec2(-1, -1)), $t77);

    // if ($t80) goto L39 else goto L50 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    if ($t80) { goto L39; } else { goto L50; }

    // label L39 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
L39:

    // write_back[Reference($t77).answer_number (u64)]($t78) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    assume {:print "$at(2,7592,7728)"} true;
    $t77 := $UpdateMutation($t77, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'_answer_number($Dereference($t77), $Dereference($t78)));

    // write_back[Reference($t76).big_vec (option::Option<big_vector::BigVector<aptos_discover::Q_set>>)/.vec (vector<big_vector::BigVector<aptos_discover::Q_set>>)/[]/.buckets (table_with_length::TableWithLength<u64, vector<aptos_discover::Q_set>>)/[]/[]]($t77) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    $t76 := $UpdateMutation($t76, (var $$sel0 := $Dereference($t76)->$big_vec; $Update'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_big_vec($Dereference($t76), (var $$sel1 := $$sel0->$vec; $Update'$1_option_Option'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'''_vec($$sel0, (var $$sel2 := ReadVec($$sel1, ReadVec($t77->p, LenVec($t76->p) + 2)); UpdateVec($$sel1, ReadVec($t77->p, LenVec($t76->p) + 2), (var $$sel3 := $$sel2->$buckets; $Update'$1_big_vector_BigVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''_buckets($$sel2, (var $$sel4 := GetTable($$sel3, ReadVec($t77->p, LenVec($t76->p) + 4)); UpdateTable($$sel3, ReadVec($t77->p, LenVec($t76->p) + 4), UpdateVec($$sel4, ReadVec($t77->p, LenVec($t76->p) + 5), $Dereference($t77)))))))))))));

    // write_back[Reference($t22).question (smart_vector::SmartVector<aptos_discover::Q_set>)]($t76) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    $t22 := $UpdateMutation($t22, $Update'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'_question($Dereference($t22), $Dereference($t76)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$question->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$question->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$question->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.question($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$question->$inline_capacity) || (LenVec($Dereference($t22)->$question->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$question->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$question->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$question->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$question->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$question->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$question->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$question->$bucket_size->$vec) <= 1);

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$true_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$true_answer->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.true_answer($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$inline_capacity) || (LenVec($Dereference($t22)->$true_answer->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$true_answer->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$true_answer->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$true_answer->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$true_answer->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$true_answer->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$true_answer->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$true_answer->$bucket_size->$vec) <= 1);

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t22)->$false_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t22)->$false_answer->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.false_answer($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$inline_capacity) || (LenVec($Dereference($t22)->$false_answer->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t22)->$false_answer->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t22)->$false_answer->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t22)->$false_answer->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t22)->$false_answer->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t22)->$false_answer->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t22)->$false_answer->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t22)->$false_answer->$bucket_size->$vec) <= 1);

    // write_back[aptos_discover::Problem_set@]($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
    assume {:print "$at(2,7592,7728)"} true;
    $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory := $ResourceUpdate($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $GlobalLocationAddress($t22),
        $Dereference($t22));

    // label L40 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:192:13+136
L40:

    // label L8 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:194:22+6
    assume {:print "$at(2,7762,7768)"} true;
L8:

    // aptos_discover::increase_CHP($t0, $t18) on_abort goto L42 with $t15 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:194:9+36
    assume {:print "$at(2,7749,7785)"} true;
    call $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_increase_CHP($t0, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,7749,7785)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(86,0):", $t15} $t15 == $t15;
        goto L42;
    }

    // label L41 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:195:5+1
    assume {:print "$at(2,7791,7792)"} true;
L41:

    // return () at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:195:5+1
    assume {:print "$at(2,7791,7792)"} true;
    return;

    // label L42 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:195:5+1
L42:

    // abort($t15) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:195:5+1
    assume {:print "$at(2,7791,7792)"} true;
    $abort_code := $t15;
    $abort_flag := true;
    return;

    // label L43 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L43:

    // drop($t32) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L12 at <internal>:1:1+10
    goto L12;

    // label L44 at <internal>:1:1+10
L44:

    // drop($t39) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t40) at <internal>:1:1+10

    // drop($t41) at <internal>:1:1+10

    // goto L16 at <internal>:1:1+10
    goto L16;

    // label L45 at <internal>:1:1+10
L45:

    // drop($t44) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L20 at <internal>:1:1+10
    goto L20;

    // label L46 at <internal>:1:1+10
L46:

    // drop($t22) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t51) at <internal>:1:1+10

    // drop($t52) at <internal>:1:1+10

    // drop($t53) at <internal>:1:1+10

    // goto L24 at <internal>:1:1+10
    goto L24;

    // label L47 at <internal>:1:1+10
L47:

    // drop($t57) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L28 at <internal>:1:1+10
    goto L28;

    // label L48 at <internal>:1:1+10
L48:

    // drop($t64) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t65) at <internal>:1:1+10

    // drop($t66) at <internal>:1:1+10

    // goto L32 at <internal>:1:1+10
    goto L32;

    // label L49 at <internal>:1:1+10
L49:

    // drop($t69) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L36 at <internal>:1:1+10
    goto L36;

    // label L50 at <internal>:1:1+10
L50:

    // drop($t22) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // drop($t76) at <internal>:1:1+10

    // drop($t77) at <internal>:1:1+10

    // drop($t78) at <internal>:1:1+10

    // goto L40 at <internal>:1:1+10
    goto L40;

}

// fun aptos_discover::create_problem_set [verification] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+2197
procedure {:timeLimit 40} $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_create_problem_set$verify(_$t0: $signer, _$t1: $1_string_String, _$t2: $1_string_String, _$t3: $1_string_String, _$t4: $1_string_String, _$t5: Vec ($1_string_String), _$t6: int) returns ()
{
    // declare local variables
    var $t7: int;
    var $t8: $signer;
    var $t9: $1_object_ConstructorRef;
    var $t10: $signer;
    var $t11: int;
    var $t12: int;
    var $t13: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem;
    var $t14: $1_object_DeleteRef;
    var $t15: $1_object_ExtendRef;
    var $t16: $1_object_ConstructorRef;
    var $t17: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization;
    var $t18: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set;
    var $t19: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $t20: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t21: $1_object_TransferRef;
    var $t22: $signer;
    var $t23: $signer;
    var $t24: int;
    var $t25: int;
    var $t26: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization;
    var $t27: int;
    var $t28: int;
    var $t29: bool;
    var $t30: $1_string_String;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $t35: int;
    var $t36: int;
    var $t37: $Mutation ($1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set');
    var $t38: int;
    var $t39: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem;
    var $t40: int;
    var $t41: Vec (int);
    var $t42: int;
    var $t43: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap;
    var $t44: $1_account_SignerCapability;
    var $t45: int;
    var $t46: $signer;
    var $t47: int;
    var $t48: int;
    var $t49: $1_object_ConstructorRef;
    var $t50: $signer;
    var $t51: $1_object_DeleteRef;
    var $t52: $1_object_TransferRef;
    var $t53: $1_object_ExtendRef;
    var $t54: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t55: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $t56: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer';
    var $t57: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set;
    var $t58: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap;
    var $t59: int;
    var $t60: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object;
    var $t0: $signer;
    var $t1: $1_string_String;
    var $t2: $1_string_String;
    var $t3: $1_string_String;
    var $t4: $1_string_String;
    var $t5: Vec ($1_string_String);
    var $t6: int;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_DeleteRef': $1_object_DeleteRef;
    var $temp_0'$1_object_ExtendRef': $1_object_ExtendRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'': $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization;
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem;
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set;
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'$1_string_String'': Vec ($1_string_String);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;
    $t5 := _$t5;
    $t6 := _$t6;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume {:print "$at(2,3811,3812)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume WellFormed($t2) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume $IsValid'$1_string_String'($t2);

    // assume WellFormed($t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume $IsValid'$1_string_String'($t3);

    // assume WellFormed($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume $IsValid'$1_string_String'($t4);

    // assume WellFormed($t5) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume $IsValid'vec'$1_string_String''($t5);

    // assume WellFormed($t6) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume $IsValid'u64'($t6);

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: object::Untransferable: ResourceDomain<object::Untransferable>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: aptos_discover::Object_cap: ResourceDomain<aptos_discover::Object_cap>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap_$memory, $a_0);
    ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap'($rsc))));

    // assume forall $rsc: aptos_discover::Problem_set: ResourceDomain<aptos_discover::Problem_set>(): And(WellFormed($rsc), And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc))), 0))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc))), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.question($rsc))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc)))))), Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($rsc)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($rsc))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.true_answer($rsc))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($rsc)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($rsc))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.false_answer($rsc))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($rsc)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($rsc))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc)))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $a_0);
    (($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'($rsc) && ((((((((((((((((((((($1_option_$is_none'u64'($rsc->$question->$bucket_size) || ($1_option_$is_some'u64'($rsc->$question->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($rsc->$question->$bucket_size), 0))) && ($1_option_$is_none'u64'($rsc->$question->$inline_capacity) || (LenVec($rsc->$question->$inline_vec) <= $1_option_$borrow'u64'($rsc->$question->$inline_capacity)))) && (($1_option_$is_none'u64'($rsc->$question->$inline_capacity) && $1_option_$is_none'u64'($rsc->$question->$bucket_size)) || ($1_option_$is_some'u64'($rsc->$question->$inline_capacity) && $1_option_$is_some'u64'($rsc->$question->$bucket_size)))) && (LenVec($rsc->$question->$big_vec->$vec) <= 1)) && (var $range_1 := $rsc->$question->$big_vec->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_3 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_4: int :: $InRange($range_3, $i_4) ==> (var i := $i_4;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_5 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_6: int :: $InRange($range_5, $i_6) ==> (var i := $i_6;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($rsc->$question->$inline_capacity->$vec) <= 1)) && (LenVec($rsc->$question->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($rsc->$true_answer->$bucket_size) || ($1_option_$is_some'u64'($rsc->$true_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($rsc->$true_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($rsc->$true_answer->$inline_capacity) || (LenVec($rsc->$true_answer->$inline_vec) <= $1_option_$borrow'u64'($rsc->$true_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($rsc->$true_answer->$inline_capacity) && $1_option_$is_none'u64'($rsc->$true_answer->$bucket_size)) || ($1_option_$is_some'u64'($rsc->$true_answer->$inline_capacity) && $1_option_$is_some'u64'($rsc->$true_answer->$bucket_size)))) && (LenVec($rsc->$true_answer->$big_vec->$vec) <= 1)) && (var $range_7 := $rsc->$true_answer->$big_vec->$vec; (forall $i_8: int :: InRangeVec($range_7, $i_8) ==> (var $elem := ReadVec($range_7, $i_8);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_9 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_10: int :: $InRange($range_9, $i_10) ==> (var i := $i_10;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_11 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_12: int :: $InRange($range_11, $i_12) ==> (var i := $i_12;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($rsc->$true_answer->$inline_capacity->$vec) <= 1)) && (LenVec($rsc->$true_answer->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($rsc->$false_answer->$bucket_size) || ($1_option_$is_some'u64'($rsc->$false_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($rsc->$false_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($rsc->$false_answer->$inline_capacity) || (LenVec($rsc->$false_answer->$inline_vec) <= $1_option_$borrow'u64'($rsc->$false_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($rsc->$false_answer->$inline_capacity) && $1_option_$is_none'u64'($rsc->$false_answer->$bucket_size)) || ($1_option_$is_some'u64'($rsc->$false_answer->$inline_capacity) && $1_option_$is_some'u64'($rsc->$false_answer->$bucket_size)))) && (LenVec($rsc->$false_answer->$big_vec->$vec) <= 1)) && (var $range_13 := $rsc->$false_answer->$big_vec->$vec; (forall $i_14: int :: InRangeVec($range_13, $i_14) ==> (var $elem := ReadVec($range_13, $i_14);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_15 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_16: int :: $InRange($range_15, $i_16) ==> (var i := $i_16;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_17 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_18: int :: $InRange($range_17, $i_18) ==> (var i := $i_18;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($rsc->$false_answer->$inline_capacity->$vec) <= 1)) && (LenVec($rsc->$false_answer->$bucket_size->$vec) <= 1))))));

    // assume forall $rsc: aptos_discover::ResourceCap: ResourceDomain<aptos_discover::ResourceCap>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory, $a_0);
    ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'($rsc))));

    // assume forall $rsc: aptos_discover::Resource_store_object: ResourceDomain<aptos_discover::Resource_store_object>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $a_0);
    ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'($rsc))));

    // trace_local[caller]($t0) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume {:print "$track_local(86,1,0):", $t0} $t0 == $t0;

    // trace_local[problem1]($t1) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume {:print "$track_local(86,1,1):", $t1} $t1 == $t1;

    // trace_local[date1]($t2) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume {:print "$track_local(86,1,2):", $t2} $t2 == $t2;

    // trace_local[descibe]($t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume {:print "$track_local(86,1,3):", $t3} $t3 == $t3;

    // trace_local[name_of_Organization]($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume {:print "$track_local(86,1,4):", $t4} $t4 == $t4;

    // trace_local[image_vector]($t5) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume {:print "$track_local(86,1,5):", $t5} $t5 == $t5;

    // trace_local[reward_budget]($t6) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:114:5+1
    assume {:print "$track_local(86,1,6):", $t6} $t6 == $t6;

    // $t24 := signer::address_of($t0) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:117:21+18
    assume {:print "$at(2,4143,4161)"} true;
    call $t24 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,4143,4161)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // $t26 := pack aptos_discover::Organization($t4, $t24, $t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:115:25+144
    assume {:print "$at(2,4070,4214)"} true;
    $t26 := $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Organization($t4, $t24, $t3);

    // trace_local[new_organ]($t26) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:115:13+9
    assume {:print "$track_local(86,1,17):", $t26} $t26 == $t26;

    // $t20 := smart_vector::empty<aptos_discover::Q_set>() on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:120:31+28
    assume {:print "$at(2,4246,4274)"} true;
    call $t20 := $1_smart_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'();
    if ($abort_flag) {
        assume {:print "$at(2,4246,4274)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // trace_local[new_smart_vector]($t20) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:120:13+16
    assume {:print "$track_local(86,1,20):", $t20} $t20 == $t20;

    // $t27 := vector::length<string::String>($t5) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:121:22+29
    assume {:print "$at(2,4297,4326)"} true;
    call $t27 := $1_vector_length'$1_string_String'($t5);
    if ($abort_flag) {
        assume {:print "$at(2,4297,4326)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // trace_local[length]($t27) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:121:13+6
    assume {:print "$track_local(86,1,12):", $t27} $t27 == $t27;

    // $t28 := 0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:122:15+1
    assume {:print "$at(2,4342,4343)"} true;
    $t28 := 0;
    assume $IsValid'u64'($t28);

    // trace_local[i]($t28) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:122:13+1
    assume {:print "$track_local(86,1,11):", $t28} $t28 == $t28;

    // label L3 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume {:print "$at(2,4360,4361)"} true;
L3:

    // $t11 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume {:print "$at(2,4360,4361)"} true;
    havoc $t11;

    // assume WellFormed($t11) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume $IsValid'u64'($t11);

    // $t20 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    havoc $t20;

    // assume And(WellFormed($t20), And(And(And(And(And(And(Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size($t20)), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size($t20)), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size($t20)), 0))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity($t20)), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec($t20)), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity($t20))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity($t20)), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size($t20))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity($t20)), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size($t20))))), Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec($t20))), 1)), forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec($t20)): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity($t20))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size($t20))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume ($IsValid'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t20) && ((((((($1_option_$is_none'u64'($t20->$bucket_size) || ($1_option_$is_some'u64'($t20->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t20->$bucket_size), 0))) && ($1_option_$is_none'u64'($t20->$inline_capacity) || (LenVec($t20->$inline_vec) <= $1_option_$borrow'u64'($t20->$inline_capacity)))) && (($1_option_$is_none'u64'($t20->$inline_capacity) && $1_option_$is_none'u64'($t20->$bucket_size)) || ($1_option_$is_some'u64'($t20->$inline_capacity) && $1_option_$is_some'u64'($t20->$bucket_size)))) && (LenVec($t20->$big_vec->$vec) <= 1)) && (var $range_0 := $t20->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t20->$inline_capacity->$vec) <= 1)) && (LenVec($t20->$bucket_size->$vec) <= 1)));

    // $t29 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    havoc $t29;

    // assume WellFormed($t29) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume $IsValid'bool'($t29);

    // $t30 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    havoc $t30;

    // assume WellFormed($t30) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume $IsValid'$1_string_String'($t30);

    // $t31 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    havoc $t31;

    // assume WellFormed($t31) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume $IsValid'u64'($t31);

    // $t32 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    havoc $t32;

    // assume WellFormed($t32) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume $IsValid'u64'($t32);

    // $t33 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    havoc $t33;

    // assume WellFormed($t33) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume $IsValid'u64'($t33);

    // $t34 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    havoc $t34;

    // assume WellFormed($t34) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t34);

    // $t35 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    havoc $t35;

    // assume WellFormed($t35) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume $IsValid'u64'($t35);

    // $t36 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    havoc $t36;

    // assume WellFormed($t36) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume $IsValid'u64'($t36);

    // $t37 := havoc[mut_all]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    havoc $t37;

    // assume And(WellFormed($t37), And(And(And(And(And(And(Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size($t37)), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size($t37)), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size($t37)), 0))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity($t37)), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec($t37)), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity($t37))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity($t37)), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size($t37))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity($t37)), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size($t37))))), Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec($t37))), 1)), forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec($t37)): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity($t37))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size($t37))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume ($IsValid'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($Dereference($t37)) && ((((((($1_option_$is_none'u64'($Dereference($t37)->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t37)->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t37)->$bucket_size), 0))) && ($1_option_$is_none'u64'($Dereference($t37)->$inline_capacity) || (LenVec($Dereference($t37)->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t37)->$inline_capacity)))) && (($1_option_$is_none'u64'($Dereference($t37)->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t37)->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t37)->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t37)->$bucket_size)))) && (LenVec($Dereference($t37)->$big_vec->$vec) <= 1)) && (var $range_0 := $Dereference($t37)->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($Dereference($t37)->$inline_capacity->$vec) <= 1)) && (LenVec($Dereference($t37)->$bucket_size->$vec) <= 1)));

    // trace_local[i]($t11) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume {:print "$info(): enter loop, variable(s) i, new_smart_vector havocked and reassigned"} true;
    assume {:print "$track_local(86,1,11):", $t11} $t11 == $t11;

    // trace_local[new_smart_vector]($t20) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume {:print "$track_local(86,1,20):", $t20} $t20 == $t20;

    // assume Not(AbortFlag()) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:16+1
    assume !$abort_flag;

    // $t29 := <($t11, $t27) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:18+1
    call $t29 := $Lt($t11, $t27);

    // if ($t29) goto L1 else goto L0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:9+371
    if ($t29) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:123:9+371
L1:

    // label L2 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:124:48+13
    assume {:print "$at(2,4420,4433)"} true;
L2:

    // $t30 := vector::borrow<string::String>($t5, $t11) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:124:33+31
    assume {:print "$at(2,4405,4436)"} true;
    call $t30 := $1_vector_borrow'$1_string_String'($t5, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,4405,4436)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // $t31 := 0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:127:29+1
    assume {:print "$at(2,4543,4544)"} true;
    $t31 := 0;
    assume $IsValid'u64'($t31);

    // $t32 := 0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:128:30+1
    assume {:print "$at(2,4575,4576)"} true;
    $t32 := 0;
    assume $IsValid'u64'($t32);

    // $t33 := 0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:129:31+1
    assume {:print "$at(2,4608,4609)"} true;
    $t33 := 0;
    assume $IsValid'u64'($t33);

    // $t34 := pack aptos_discover::Q_set($t30, $t31, $t32, $t33) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:125:29+158
    assume {:print "$at(2,4466,4624)"} true;
    $t34 := $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set($t30, $t31, $t32, $t33);

    // trace_local[new_q_set]($t34) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:125:17+9
    assume {:print "$track_local(86,1,19):", $t34} $t34 == $t34;

    // $t37 := borrow_local($t20) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:131:37+21
    assume {:print "$at(2,4662,4683)"} true;
    $t37 := $Mutation($Local(20), EmptyVec(), $t20);

    // smart_vector::push_back<aptos_discover::Q_set>($t37, $t34) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:131:13+56
    call $t37 := $1_smart_vector_push_back'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t37, $t34);
    if ($abort_flag) {
        assume {:print "$at(2,4638,4694)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size($t37)), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size($t37)), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size($t37)), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:5:9+121
    assume {:print "$at(51,118,239)"} true;
    assert {:msg "assert_failed(51,118,239): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t37)->$bucket_size) || ($1_option_$is_some'u64'($Dereference($t37)->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($Dereference($t37)->$bucket_size), 0)));

    // assert Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity($t37)), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec($t37)), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity($t37)))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:8:9+111
    assume {:print "$at(51,319,430)"} true;
    assert {:msg "assert_failed(51,319,430): data invariant does not hold"}
      ($1_option_$is_none'u64'($Dereference($t37)->$inline_capacity) || (LenVec($Dereference($t37)->$inline_vec) <= $1_option_$borrow'u64'($Dereference($t37)->$inline_capacity)));

    // assert Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity($t37)), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size($t37))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity($t37)), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size($t37)))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/smart_vector.spec.move:11:9+159
    assume {:print "$at(51,538,697)"} true;
    assert {:msg "assert_failed(51,538,697): data invariant does not hold"}
      (($1_option_$is_none'u64'($Dereference($t37)->$inline_capacity) && $1_option_$is_none'u64'($Dereference($t37)->$bucket_size)) || ($1_option_$is_some'u64'($Dereference($t37)->$inline_capacity) && $1_option_$is_some'u64'($Dereference($t37)->$bucket_size)));

    // assert Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec($t37))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t37)->$big_vec->$vec) <= 1);

    // assert forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec($t37)): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0))) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/data_structures/big_vector.spec.move:7:9+27
    assume {:print "$at(47,132,159)"} true;
    assert {:msg "assert_failed(47,132,159): data invariant does not hold"}
      (var $range_0 := $Dereference($t37)->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))));

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity($t37))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assume {:print "$at(12,530,554)"} true;
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t37)->$inline_capacity->$vec) <= 1);

    // assert Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size($t37))), 1) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    // data invariant at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:13:9+24
    assert {:msg "assert_failed(12,530,554): data invariant does not hold"}
      (LenVec($Dereference($t37)->$bucket_size->$vec) <= 1);

    // write_back[LocalRoot($t20)@]($t37) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:131:13+56
    assume {:print "$at(2,4638,4694)"} true;
    $t20 := $Dereference($t37);

    // trace_local[new_smart_vector]($t20) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:131:13+56
    assume {:print "$track_local(86,1,20):", $t20} $t20 == $t20;

    // $t35 := 1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:132:17+1
    assume {:print "$at(2,4712,4713)"} true;
    $t35 := 1;
    assume $IsValid'u64'($t35);

    // $t36 := +($t11, $t35) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:132:16+1
    call $t36 := $AddU64($t11, $t35);
    if ($abort_flag) {
        assume {:print "$at(2,4711,4712)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // trace_local[i]($t36) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:132:13+1
    assume {:print "$track_local(86,1,11):", $t36} $t36 == $t36;

    // goto L4 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:132:18+1
    goto L4;

    // label L0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:135:21+8
    assume {:print "$at(2,4781,4789)"} true;
L0:

    // $t38 := signer::address_of($t0) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:136:27+18
    assume {:print "$at(2,4817,4835)"} true;
    call $t38 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,4817,4835)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // $t39 := pack aptos_discover::Problem($t1, $t38, $t2) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:134:27+117
    assume {:print "$at(2,4752,4869)"} true;
    $t39 := $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem($t1, $t38, $t2);

    // trace_local[new_Problem]($t39) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:134:13+11
    assume {:print "$track_local(86,1,13):", $t39} $t39 == $t39;

    // $t40 := 0x28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:140:76+5
    assume {:print "$at(2,4947,4952)"} true;
    $t40 := 18425465769474857495901587093882631151486939702443524661813556910146273842942;
    assume $IsValid'address'($t40);

    // $t41 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:140:82+4
    $t41 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t41);

    // $t42 := opaque begin: account::create_resource_address($t40, $t41) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:140:51+36

    // assume WellFormed($t42) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:140:51+36
    assume $IsValid'address'($t42);

    // assume Eq<address>($t42, account::spec_create_resource_address($t40, $t41)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:140:51+36
    assume $IsEqual'address'($t42, $1_account_spec_create_resource_address($t40, $t41));

    // $t42 := opaque end: account::create_resource_address($t40, $t41) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:140:51+36

    // $t43 := get_global<aptos_discover::ResourceCap>($t42) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:140:24+13
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory, $t42)) {
        call $ExecFailureAbort();
    } else {
        $t43 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory, $t42);
    }
    if ($abort_flag) {
        assume {:print "$at(2,4895,4908)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // $t44 := get_field<aptos_discover::ResourceCap>.cap($t43) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:140:23+69
    $t44 := $t43->$cap;

    // assume Identical($t45, select account::SignerCapability.account<account::SignerCapability>($t44)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:652:9+30
    assume {:print "$at(82,32362,32392)"} true;
    assume ($t45 == $t44->$account);

    // $t46 := account::create_signer_with_capability($t44) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:141:32+39
    assume {:print "$at(2,4996,5035)"} true;
    call $t46 := $1_account_create_signer_with_capability($t44);
    if ($abort_flag) {
        assume {:print "$at(2,4996,5035)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // trace_local[resouces_signer]($t46) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:141:13+15
    assume {:print "$track_local(86,1,23):", $t46} $t46 == $t46;

    // $t47 := signer::address_of($t46) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:143:49+27
    assume {:print "$at(2,5086,5113)"} true;
    call $t47 := $1_signer_address_of($t46);
    if ($abort_flag) {
        assume {:print "$at(2,5086,5113)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // assume Identical($t48, transaction_context::spec_generate_unique_address()) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:69:9+73
    assume {:print "$at(156,3206,3279)"} true;
    assume ($t48 == $1_transaction_context_spec_generate_unique_address());

    // $t49 := object::create_object($t47) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:143:27+50
    assume {:print "$at(2,5064,5114)"} true;
    call $t49 := $1_object_create_object($t47);
    if ($abort_flag) {
        assume {:print "$at(2,5064,5114)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // trace_local[new_object]($t49) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:143:13+10
    assume {:print "$track_local(86,1,16):", $t49} $t49 == $t49;

    // $t50 := object::generate_signer($t49) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:144:30+35
    assume {:print "$at(2,5145,5180)"} true;
    call $t50 := $1_object_generate_signer($t49);
    if ($abort_flag) {
        assume {:print "$at(2,5145,5180)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // trace_local[object_signer]($t50) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:144:13+13
    assume {:print "$track_local(86,1,22):", $t50} $t50 == $t50;

    // $t51 := object::generate_delete_ref($t49) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:146:27+39
    assume {:print "$at(2,5209,5248)"} true;
    call $t51 := $1_object_generate_delete_ref($t49);
    if ($abort_flag) {
        assume {:print "$at(2,5209,5248)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // trace_local[new_del_red]($t51) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:146:13+11
    assume {:print "$track_local(86,1,14):", $t51} $t51 == $t51;

    // $t52 := object::generate_transfer_ref($t49) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:147:29+41
    assume {:print "$at(2,5278,5319)"} true;
    call $t52 := $1_object_generate_transfer_ref($t49);
    if ($abort_flag) {
        assume {:print "$at(2,5278,5319)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // trace_local[new_trans_ref]($t52) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:147:13+13
    assume {:print "$track_local(86,1,21):", $t52} $t52 == $t52;

    // $t53 := object::generate_extend_ref($t49) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:148:30+39
    assume {:print "$at(2,5350,5389)"} true;
    call $t53 := $1_object_generate_extend_ref($t49);
    if ($abort_flag) {
        assume {:print "$at(2,5350,5389)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // trace_local[new_extent_ref]($t53) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:148:13+14
    assume {:print "$track_local(86,1,15):", $t53} $t53 == $t53;

    // $t54 := move($t20) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:153:22+16
    assume {:print "$at(2,5526,5542)"} true;
    $t54 := $t20;

    // $t55 := smart_vector::empty<aptos_discover::User_answer>() on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:154:25+34
    assume {:print "$at(2,5568,5602)"} true;
    call $t55 := $1_smart_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'();
    if ($abort_flag) {
        assume {:print "$at(2,5568,5602)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // $t56 := smart_vector::empty<aptos_discover::User_answer>() on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:155:26+34
    assume {:print "$at(2,5629,5663)"} true;
    call $t56 := $1_smart_vector_empty'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer'();
    if ($abort_flag) {
        assume {:print "$at(2,5629,5663)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // $t57 := pack aptos_discover::Problem_set($t26, $t39, $t54, $t55, $t56, $t6) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:150:31+285
    assume {:print "$at(2,5422,5707)"} true;
    $t57 := $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set($t26, $t39, $t54, $t55, $t56, $t6);

    // trace_local[new_problem_set]($t57) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:150:13+15
    assume {:print "$track_local(86,1,18):", $t57} $t57 == $t57;

    // $t58 := pack aptos_discover::Object_cap($t52, $t51, $t53) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:158:24+129
    assume {:print "$at(2,5732,5861)"} true;
    $t58 := $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap($t52, $t51, $t53);

    // move_to<aptos_discover::Object_cap>($t58, $t0) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:158:9+7
    if ($ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap_$memory, $t0->$addr)) {
        call $ExecFailureAbort();
    } else {
        $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap_$memory := $ResourceUpdate($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Object_cap_$memory, $t0->$addr, $t58);
    }
    if ($abort_flag) {
        assume {:print "$at(2,5717,5724)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // $t59 := signer::address_of($t50) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:164:62+25
    assume {:print "$at(2,5926,5951)"} true;
    call $t59 := $1_signer_address_of($t50);
    if ($abort_flag) {
        assume {:print "$at(2,5926,5951)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // $t60 := pack aptos_discover::Resource_store_object($t59) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:164:33+55
    $t60 := $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object($t59);

    // move_to<aptos_discover::Resource_store_object>($t60, $t46) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:164:9+7
    if ($ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $t46->$addr)) {
        call $ExecFailureAbort();
    } else {
        $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory := $ResourceUpdate($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $t46->$addr, $t60);
    }
    if ($abort_flag) {
        assume {:print "$at(2,5873,5880)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // move_to<aptos_discover::Problem_set>($t57, $t50) on_abort goto L6 with $t25 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:165:9+7
    assume {:print "$at(2,5963,5970)"} true;
    if ($ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t50->$addr)) {
        call $ExecFailureAbort();
    } else {
        $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory := $ResourceUpdate($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t50->$addr, $t57);
    }
    if ($abort_flag) {
        assume {:print "$at(2,5963,5970)"} true;
        $t25 := $abort_code;
        assume {:print "$track_abort(86,1):", $t25} $t25 == $t25;
        goto L6;
    }

    // goto L5 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:165:47+1
    goto L5;

    // label L4 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:135:21+8
    // Loop invariant checking block for the loop started with header: L3
    assume {:print "$at(2,4781,4789)"} true;
L4:

    // stop() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:135:21+8
    assume {:print "$at(2,4781,4789)"} true;
    assume false;
    return;

    // label L5 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:166:5+1
    assume {:print "$at(2,6007,6008)"} true;
L5:

    // return () at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:166:5+1
    assume {:print "$at(2,6007,6008)"} true;
    return;

    // label L6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:166:5+1
L6:

    // abort($t25) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:166:5+1
    assume {:print "$at(2,6007,6008)"} true;
    $abort_code := $t25;
    $abort_flag := true;
    return;

}

// fun aptos_discover::image_vector [verification] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:100:5+658
procedure {:timeLimit 40} $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_image_vector$verify() returns ($ret0: Vec ($1_string_String))
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $t3: int;
    var $t4: int;
    var $t5: Vec ($1_string_String);
    var $t6: int;
    var $t7: int;
    var $t8: Vec (int);
    var $t9: int;
    var $t10: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object;
    var $t11: int;
    var $t12: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set;
    var $t13: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: int;
    var $t18: Vec (int);
    var $t19: int;
    var $t20: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object;
    var $t21: int;
    var $t22: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set;
    var $t23: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t24: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $t25: $1_string_String;
    var $t26: int;
    var $t27: int;
    var $t28: $Mutation (Vec ($1_string_String));
    var $t29: Vec ($1_string_String);
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'u64': int;
    var $temp_0'vec'$1_string_String'': Vec ($1_string_String);

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume forall $rsc: aptos_discover::Problem_set: ResourceDomain<aptos_discover::Problem_set>(): And(WellFormed($rsc), And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc))), 0))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc))), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.question($rsc))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc)))))), Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($rsc)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($rsc))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.true_answer($rsc))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($rsc)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($rsc))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.false_answer($rsc))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($rsc)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($rsc))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc)))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:100:5+1
    assume {:print "$at(2,3122,3123)"} true;
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $a_0);
    (($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'($rsc) && ((((((((((((((((((((($1_option_$is_none'u64'($rsc->$question->$bucket_size) || ($1_option_$is_some'u64'($rsc->$question->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($rsc->$question->$bucket_size), 0))) && ($1_option_$is_none'u64'($rsc->$question->$inline_capacity) || (LenVec($rsc->$question->$inline_vec) <= $1_option_$borrow'u64'($rsc->$question->$inline_capacity)))) && (($1_option_$is_none'u64'($rsc->$question->$inline_capacity) && $1_option_$is_none'u64'($rsc->$question->$bucket_size)) || ($1_option_$is_some'u64'($rsc->$question->$inline_capacity) && $1_option_$is_some'u64'($rsc->$question->$bucket_size)))) && (LenVec($rsc->$question->$big_vec->$vec) <= 1)) && (var $range_1 := $rsc->$question->$big_vec->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_3 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_4: int :: $InRange($range_3, $i_4) ==> (var i := $i_4;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_5 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_6: int :: $InRange($range_5, $i_6) ==> (var i := $i_6;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($rsc->$question->$inline_capacity->$vec) <= 1)) && (LenVec($rsc->$question->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($rsc->$true_answer->$bucket_size) || ($1_option_$is_some'u64'($rsc->$true_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($rsc->$true_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($rsc->$true_answer->$inline_capacity) || (LenVec($rsc->$true_answer->$inline_vec) <= $1_option_$borrow'u64'($rsc->$true_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($rsc->$true_answer->$inline_capacity) && $1_option_$is_none'u64'($rsc->$true_answer->$bucket_size)) || ($1_option_$is_some'u64'($rsc->$true_answer->$inline_capacity) && $1_option_$is_some'u64'($rsc->$true_answer->$bucket_size)))) && (LenVec($rsc->$true_answer->$big_vec->$vec) <= 1)) && (var $range_7 := $rsc->$true_answer->$big_vec->$vec; (forall $i_8: int :: InRangeVec($range_7, $i_8) ==> (var $elem := ReadVec($range_7, $i_8);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_9 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_10: int :: $InRange($range_9, $i_10) ==> (var i := $i_10;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_11 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_12: int :: $InRange($range_11, $i_12) ==> (var i := $i_12;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($rsc->$true_answer->$inline_capacity->$vec) <= 1)) && (LenVec($rsc->$true_answer->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($rsc->$false_answer->$bucket_size) || ($1_option_$is_some'u64'($rsc->$false_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($rsc->$false_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($rsc->$false_answer->$inline_capacity) || (LenVec($rsc->$false_answer->$inline_vec) <= $1_option_$borrow'u64'($rsc->$false_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($rsc->$false_answer->$inline_capacity) && $1_option_$is_none'u64'($rsc->$false_answer->$bucket_size)) || ($1_option_$is_some'u64'($rsc->$false_answer->$inline_capacity) && $1_option_$is_some'u64'($rsc->$false_answer->$bucket_size)))) && (LenVec($rsc->$false_answer->$big_vec->$vec) <= 1)) && (var $range_13 := $rsc->$false_answer->$big_vec->$vec; (forall $i_14: int :: InRangeVec($range_13, $i_14) ==> (var $elem := ReadVec($range_13, $i_14);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_15 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_16: int :: $InRange($range_15, $i_16) ==> (var i := $i_16;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_17 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_18: int :: $InRange($range_17, $i_18) ==> (var i := $i_18;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($rsc->$false_answer->$inline_capacity->$vec) <= 1)) && (LenVec($rsc->$false_answer->$bucket_size->$vec) <= 1))))));

    // assume forall $rsc: aptos_discover::Resource_store_object: ResourceDomain<aptos_discover::Resource_store_object>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:100:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $a_0);
    ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'($rsc))));

    // $t5 := vector::empty<string::String>() on_abort goto L6 with $t6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:101:26+23
    assume {:print "$at(2,3244,3267)"} true;
    call $t5 := $1_vector_empty'$1_string_String'();
    if ($abort_flag) {
        assume {:print "$at(2,3244,3267)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(86,3):", $t6} $t6 == $t6;
        goto L6;
    }

    // trace_local[new_vector]($t5) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:101:13+10
    assume {:print "$track_local(86,3,5):", $t5} $t5 == $t5;

    // $t7 := 0x28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:102:133+5
    assume {:print "$at(2,3401,3406)"} true;
    $t7 := 18425465769474857495901587093882631151486939702443524661813556910146273842942;
    assume $IsValid'address'($t7);

    // $t8 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:102:139+4
    $t8 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t8);

    // $t9 := opaque begin: account::create_resource_address($t7, $t8) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:102:108+36

    // assume WellFormed($t9) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:102:108+36
    assume $IsValid'address'($t9);

    // assume Eq<address>($t9, account::spec_create_resource_address($t7, $t8)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:102:108+36
    assume $IsEqual'address'($t9, $1_account_spec_create_resource_address($t7, $t8));

    // $t9 := opaque end: account::create_resource_address($t7, $t8) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:102:108+36

    // $t10 := get_global<aptos_discover::Resource_store_object>($t9) on_abort goto L6 with $t6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:102:71+13
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(2,3339,3352)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(86,3):", $t6} $t6 == $t6;
        goto L6;
    }

    // $t11 := get_field<aptos_discover::Resource_store_object>.object($t10) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:102:71+81
    $t11 := $t10->$object;

    // $t12 := get_global<aptos_discover::Problem_set>($t11) on_abort goto L6 with $t6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:102:44+13
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t11);
    }
    if ($abort_flag) {
        assume {:print "$at(2,3312,3325)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(86,3):", $t6} $t6 == $t6;
        goto L6;
    }

    // $t13 := get_field<aptos_discover::Problem_set>.question($t12) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:102:43+119
    $t13 := $t12->$question;

    // $t14 := smart_vector::length<aptos_discover::Q_set>($t13) on_abort goto L6 with $t6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:102:22+141
    call $t14 := $1_smart_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t13);
    if ($abort_flag) {
        assume {:print "$at(2,3290,3431)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(86,3):", $t6} $t6 == $t6;
        goto L6;
    }

    // trace_local[length]($t14) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:102:13+6
    assume {:print "$track_local(86,3,4):", $t14} $t14 == $t14;

    // $t15 := 0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:103:17+1
    assume {:print "$at(2,3449,3450)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // trace_local[i]($t15) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:103:13+1
    assume {:print "$track_local(86,3,3):", $t15} $t15 == $t15;

    // label L3 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume {:print "$at(2,3466,3467)"} true;
L3:

    // $t3 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume {:print "$at(2,3466,3467)"} true;
    havoc $t3;

    // assume WellFormed($t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'u64'($t3);

    // $t5 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t5;

    // assume WellFormed($t5) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'vec'$1_string_String''($t5);

    // $t16 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t16;

    // assume WellFormed($t16) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'bool'($t16);

    // $t17 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t17;

    // assume WellFormed($t17) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'address'($t17);

    // $t18 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t18;

    // assume WellFormed($t18) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'vec'u8''($t18);

    // $t19 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t19;

    // assume WellFormed($t19) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'address'($t19);

    // $t20 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t20;

    // assume WellFormed($t20) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'($t20);

    // $t21 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t21;

    // assume WellFormed($t21) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'address'($t21);

    // $t22 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t22;

    // assume And(WellFormed($t22), And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22))), 0))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.question($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))))), Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t22)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t22)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t22)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.true_answer($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t22)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t22)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t22)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.false_answer($t22))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t22)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t22))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t22)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t22)))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'($t22) && ((((((((((((((((((((($1_option_$is_none'u64'($t22->$question->$bucket_size) || ($1_option_$is_some'u64'($t22->$question->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t22->$question->$bucket_size), 0))) && ($1_option_$is_none'u64'($t22->$question->$inline_capacity) || (LenVec($t22->$question->$inline_vec) <= $1_option_$borrow'u64'($t22->$question->$inline_capacity)))) && (($1_option_$is_none'u64'($t22->$question->$inline_capacity) && $1_option_$is_none'u64'($t22->$question->$bucket_size)) || ($1_option_$is_some'u64'($t22->$question->$inline_capacity) && $1_option_$is_some'u64'($t22->$question->$bucket_size)))) && (LenVec($t22->$question->$big_vec->$vec) <= 1)) && (var $range_0 := $t22->$question->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t22->$question->$inline_capacity->$vec) <= 1)) && (LenVec($t22->$question->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($t22->$true_answer->$bucket_size) || ($1_option_$is_some'u64'($t22->$true_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t22->$true_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($t22->$true_answer->$inline_capacity) || (LenVec($t22->$true_answer->$inline_vec) <= $1_option_$borrow'u64'($t22->$true_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($t22->$true_answer->$inline_capacity) && $1_option_$is_none'u64'($t22->$true_answer->$bucket_size)) || ($1_option_$is_some'u64'($t22->$true_answer->$inline_capacity) && $1_option_$is_some'u64'($t22->$true_answer->$bucket_size)))) && (LenVec($t22->$true_answer->$big_vec->$vec) <= 1)) && (var $range_6 := $t22->$true_answer->$big_vec->$vec; (forall $i_7: int :: InRangeVec($range_6, $i_7) ==> (var $elem := ReadVec($range_6, $i_7);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_8 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_9: int :: $InRange($range_8, $i_9) ==> (var i := $i_9;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_10 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_11: int :: $InRange($range_10, $i_11) ==> (var i := $i_11;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t22->$true_answer->$inline_capacity->$vec) <= 1)) && (LenVec($t22->$true_answer->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($t22->$false_answer->$bucket_size) || ($1_option_$is_some'u64'($t22->$false_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t22->$false_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($t22->$false_answer->$inline_capacity) || (LenVec($t22->$false_answer->$inline_vec) <= $1_option_$borrow'u64'($t22->$false_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($t22->$false_answer->$inline_capacity) && $1_option_$is_none'u64'($t22->$false_answer->$bucket_size)) || ($1_option_$is_some'u64'($t22->$false_answer->$inline_capacity) && $1_option_$is_some'u64'($t22->$false_answer->$bucket_size)))) && (LenVec($t22->$false_answer->$big_vec->$vec) <= 1)) && (var $range_12 := $t22->$false_answer->$big_vec->$vec; (forall $i_13: int :: InRangeVec($range_12, $i_13) ==> (var $elem := ReadVec($range_12, $i_13);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_14 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_15: int :: $InRange($range_14, $i_15) ==> (var i := $i_15;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_16 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_17: int :: $InRange($range_16, $i_17) ==> (var i := $i_17;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t22->$false_answer->$inline_capacity->$vec) <= 1)) && (LenVec($t22->$false_answer->$bucket_size->$vec) <= 1)));

    // $t23 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t23;

    // assume And(WellFormed($t23), And(And(And(And(And(And(Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size($t23)), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size($t23)), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size($t23)), 0))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity($t23)), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec($t23)), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity($t23))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity($t23)), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size($t23))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity($t23)), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size($t23))))), Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec($t23))), 1)), forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec($t23)): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity($t23))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size($t23))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume ($IsValid'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t23) && ((((((($1_option_$is_none'u64'($t23->$bucket_size) || ($1_option_$is_some'u64'($t23->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t23->$bucket_size), 0))) && ($1_option_$is_none'u64'($t23->$inline_capacity) || (LenVec($t23->$inline_vec) <= $1_option_$borrow'u64'($t23->$inline_capacity)))) && (($1_option_$is_none'u64'($t23->$inline_capacity) && $1_option_$is_none'u64'($t23->$bucket_size)) || ($1_option_$is_some'u64'($t23->$inline_capacity) && $1_option_$is_some'u64'($t23->$bucket_size)))) && (LenVec($t23->$big_vec->$vec) <= 1)) && (var $range_0 := $t23->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t23->$inline_capacity->$vec) <= 1)) && (LenVec($t23->$bucket_size->$vec) <= 1)));

    // $t24 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t24;

    // assume WellFormed($t24) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t24);

    // $t25 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t25;

    // assume WellFormed($t25) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'$1_string_String'($t25);

    // $t26 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t26;

    // assume WellFormed($t26) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'u64'($t26);

    // $t27 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t27;

    // assume WellFormed($t27) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'u64'($t27);

    // $t28 := havoc[mut_all]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    havoc $t28;

    // assume WellFormed($t28) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume $IsValid'vec'$1_string_String''($Dereference($t28));

    // trace_local[i]($t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume {:print "$info(): enter loop, variable(s) i, new_vector havocked and reassigned"} true;
    assume {:print "$track_local(86,3,3):", $t3} $t3 == $t3;

    // trace_local[new_vector]($t5) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume {:print "$track_local(86,3,5):", $t5} $t5 == $t5;

    // assume Not(AbortFlag()) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:15+1
    assume !$abort_flag;

    // $t16 := <($t3, $t14) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:17+1
    call $t16 := $Lt($t3, $t14);

    // if ($t16) goto L1 else goto L0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:9+287
    if ($t16) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:104:9+287
L1:

    // label L2 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:136+5
    assume {:print "$at(2,3615,3620)"} true;
L2:

    // $t17 := 0x28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:136+5
    assume {:print "$at(2,3615,3620)"} true;
    $t17 := 18425465769474857495901587093882631151486939702443524661813556910146273842942;
    assume $IsValid'address'($t17);

    // $t18 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:142+4
    $t18 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t18);

    // $t19 := opaque begin: account::create_resource_address($t17, $t18) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:111+36

    // assume WellFormed($t19) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:111+36
    assume $IsValid'address'($t19);

    // assume Eq<address>($t19, account::spec_create_resource_address($t17, $t18)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:111+36
    assume $IsEqual'address'($t19, $1_account_spec_create_resource_address($t17, $t18));

    // $t19 := opaque end: account::create_resource_address($t17, $t18) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:111+36

    // $t20 := get_global<aptos_discover::Resource_store_object>($t19) on_abort goto L6 with $t6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:74+13
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $t19)) {
        call $ExecFailureAbort();
    } else {
        $t20 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $t19);
    }
    if ($abort_flag) {
        assume {:print "$at(2,3553,3566)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(86,3):", $t6} $t6 == $t6;
        goto L6;
    }

    // $t21 := get_field<aptos_discover::Resource_store_object>.object($t20) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:74+81
    $t21 := $t20->$object;

    // $t22 := get_global<aptos_discover::Problem_set>($t21) on_abort goto L6 with $t6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:47+13
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t21)) {
        call $ExecFailureAbort();
    } else {
        $t22 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t21);
    }
    if ($abort_flag) {
        assume {:print "$at(2,3526,3539)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(86,3):", $t6} $t6 == $t6;
        goto L6;
    }

    // $t23 := get_field<aptos_discover::Problem_set>.question($t22) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:46+119
    $t23 := $t22->$question;

    // $t24 := smart_vector::borrow<aptos_discover::Q_set>($t23, $t3) on_abort goto L6 with $t6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:25+143
    call $t24 := $1_smart_vector_borrow'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t23, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,3504,3647)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(86,3):", $t6} $t6 == $t6;
        goto L6;
    }

    // trace_local[borrow]($t24) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:105:17+6
    assume {:print "$track_local(86,3,2):", $t24} $t24 == $t24;

    // $t28 := borrow_local($t5) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:106:31+15
    assume {:print "$at(2,3679,3694)"} true;
    $t28 := $Mutation($Local(5), EmptyVec(), $t5);

    // $t25 := get_field<aptos_discover::Q_set>.img_url_set($t24) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:106:47+18
    $t25 := $t24->$img_url_set;

    // vector::push_back<string::String>($t28, $t25) on_abort goto L6 with $t6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:106:13+53
    call $t28 := $1_vector_push_back'$1_string_String'($t28, $t25);
    if ($abort_flag) {
        assume {:print "$at(2,3661,3714)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(86,3):", $t6} $t6 == $t6;
        goto L6;
    }

    // write_back[LocalRoot($t5)@]($t28) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:106:13+53
    $t5 := $Dereference($t28);

    // trace_local[new_vector]($t5) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:106:13+53
    assume {:print "$track_local(86,3,5):", $t5} $t5 == $t5;

    // $t26 := 1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:107:19+1
    assume {:print "$at(2,3735,3736)"} true;
    $t26 := 1;
    assume $IsValid'u64'($t26);

    // $t27 := +($t3, $t26) on_abort goto L6 with $t6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:107:18+1
    call $t27 := $AddU64($t3, $t26);
    if ($abort_flag) {
        assume {:print "$at(2,3734,3735)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(86,3):", $t6} $t6 == $t6;
        goto L6;
    }

    // trace_local[i]($t27) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:107:13+1
    assume {:print "$track_local(86,3,3):", $t27} $t27 == $t27;

    // goto L4 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:107:20+1
    goto L4;

    // label L0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:109:16+10
    assume {:print "$at(2,3764,3774)"} true;
L0:

    // $t29 := move($t5) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:109:16+10
    assume {:print "$at(2,3764,3774)"} true;
    $t29 := $t5;

    // trace_return[0]($t29) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:109:9+17
    assume {:print "$track_return(86,3,0):", $t29} $t29 == $t29;

    // goto L5 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:109:9+17
    goto L5;

    // label L4 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:109:16+10
    // Loop invariant checking block for the loop started with header: L3
L4:

    // stop() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:109:16+10
    assume {:print "$at(2,3764,3774)"} true;
    assume false;
    return;

    // label L5 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:110:5+1
    assume {:print "$at(2,3779,3780)"} true;
L5:

    // return $t29 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:110:5+1
    assume {:print "$at(2,3779,3780)"} true;
    $ret0 := $t29;
    return;

    // label L6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:110:5+1
L6:

    // abort($t6) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:110:5+1
    assume {:print "$at(2,3779,3780)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun aptos_discover::find_index [baseline] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:199:5+514
procedure {:inline 1} $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_find_index(_$t0: int, _$t1: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set;
    var $t7: int;
    var $t8: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set;
    var $t14: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t15: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $t16: $1_string_String;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t0: int;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[caller]($t0) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:199:5+1
    assume {:print "$at(2,7811,7812)"} true;
    assume {:print "$track_local(86,2,0):", $t0} $t0 == $t0;

    // trace_local[image_target]($t1) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:199:5+1
    assume {:print "$track_local(86,2,1):", $t1} $t1 == $t1;

    // $t6 := get_global<aptos_discover::Problem_set>($t0) on_abort goto L8 with $t7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:200:44+13
    assume {:print "$at(2,7941,7954)"} true;
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,7941,7954)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(86,2):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t8 := get_field<aptos_discover::Problem_set>.question($t6) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:200:43+44
    $t8 := $t6->$question;

    // $t9 := smart_vector::length<aptos_discover::Q_set>($t8) on_abort goto L8 with $t7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:200:22+66
    call $t9 := $1_smart_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t8);
    if ($abort_flag) {
        assume {:print "$at(2,7919,7985)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(86,2):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[length]($t9) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:200:13+6
    assume {:print "$track_local(86,2,5):", $t9} $t9 == $t9;

    // $t10 := 9999999 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:201:21+7
    assume {:print "$at(2,8007,8014)"} true;
    $t10 := 9999999;
    assume $IsValid'u64'($t10);

    // trace_local[index]($t10) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:201:13+5
    assume {:print "$track_local(86,2,4):", $t10} $t10 == $t10;

    // $t11 := 0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:202:17+1
    assume {:print "$at(2,8032,8033)"} true;
    $t11 := 0;
    assume $IsValid'u64'($t11);

    // trace_local[i]($t11) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:202:14+1
    assume {:print "$track_local(86,2,3):", $t11} $t11 == $t11;

    // label L5 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume {:print "$at(2,8050,8051)"} true;
L5:

    // $t3 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume {:print "$at(2,8050,8051)"} true;
    havoc $t3;

    // assume WellFormed($t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'u64'($t3);

    // $t4 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t4;

    // assume WellFormed($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'u64'($t4);

    // $t12 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t12;

    // assume WellFormed($t12) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'bool'($t12);

    // $t13 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t13;

    // assume And(WellFormed($t13), And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t13))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t13))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t13))), 0))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t13))), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.question($t13))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t13)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t13))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t13)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t13))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t13)))))), Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t13)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t13))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t13)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t13)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t13))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t13))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t13))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t13))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.true_answer($t13))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t13)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t13))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t13)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t13))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t13)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t13)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t13))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t13)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t13)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t13))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t13))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t13))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t13))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.false_answer($t13))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t13)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t13))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t13)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t13))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t13)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t13)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t13))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t13)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t13)))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'($t13) && ((((((((((((((((((((($1_option_$is_none'u64'($t13->$question->$bucket_size) || ($1_option_$is_some'u64'($t13->$question->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t13->$question->$bucket_size), 0))) && ($1_option_$is_none'u64'($t13->$question->$inline_capacity) || (LenVec($t13->$question->$inline_vec) <= $1_option_$borrow'u64'($t13->$question->$inline_capacity)))) && (($1_option_$is_none'u64'($t13->$question->$inline_capacity) && $1_option_$is_none'u64'($t13->$question->$bucket_size)) || ($1_option_$is_some'u64'($t13->$question->$inline_capacity) && $1_option_$is_some'u64'($t13->$question->$bucket_size)))) && (LenVec($t13->$question->$big_vec->$vec) <= 1)) && (var $range_0 := $t13->$question->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t13->$question->$inline_capacity->$vec) <= 1)) && (LenVec($t13->$question->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($t13->$true_answer->$bucket_size) || ($1_option_$is_some'u64'($t13->$true_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t13->$true_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($t13->$true_answer->$inline_capacity) || (LenVec($t13->$true_answer->$inline_vec) <= $1_option_$borrow'u64'($t13->$true_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($t13->$true_answer->$inline_capacity) && $1_option_$is_none'u64'($t13->$true_answer->$bucket_size)) || ($1_option_$is_some'u64'($t13->$true_answer->$inline_capacity) && $1_option_$is_some'u64'($t13->$true_answer->$bucket_size)))) && (LenVec($t13->$true_answer->$big_vec->$vec) <= 1)) && (var $range_6 := $t13->$true_answer->$big_vec->$vec; (forall $i_7: int :: InRangeVec($range_6, $i_7) ==> (var $elem := ReadVec($range_6, $i_7);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_8 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_9: int :: $InRange($range_8, $i_9) ==> (var i := $i_9;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_10 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_11: int :: $InRange($range_10, $i_11) ==> (var i := $i_11;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t13->$true_answer->$inline_capacity->$vec) <= 1)) && (LenVec($t13->$true_answer->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($t13->$false_answer->$bucket_size) || ($1_option_$is_some'u64'($t13->$false_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t13->$false_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($t13->$false_answer->$inline_capacity) || (LenVec($t13->$false_answer->$inline_vec) <= $1_option_$borrow'u64'($t13->$false_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($t13->$false_answer->$inline_capacity) && $1_option_$is_none'u64'($t13->$false_answer->$bucket_size)) || ($1_option_$is_some'u64'($t13->$false_answer->$inline_capacity) && $1_option_$is_some'u64'($t13->$false_answer->$bucket_size)))) && (LenVec($t13->$false_answer->$big_vec->$vec) <= 1)) && (var $range_12 := $t13->$false_answer->$big_vec->$vec; (forall $i_13: int :: InRangeVec($range_12, $i_13) ==> (var $elem := ReadVec($range_12, $i_13);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_14 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_15: int :: $InRange($range_14, $i_15) ==> (var i := $i_15;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_16 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_17: int :: $InRange($range_16, $i_17) ==> (var i := $i_17;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t13->$false_answer->$inline_capacity->$vec) <= 1)) && (LenVec($t13->$false_answer->$bucket_size->$vec) <= 1)));

    // $t14 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t14;

    // assume And(WellFormed($t14), And(And(And(And(And(And(Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size($t14)), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size($t14)), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size($t14)), 0))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity($t14)), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec($t14)), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity($t14))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity($t14)), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size($t14))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity($t14)), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size($t14))))), Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec($t14))), 1)), forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec($t14)): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity($t14))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size($t14))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume ($IsValid'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14) && ((((((($1_option_$is_none'u64'($t14->$bucket_size) || ($1_option_$is_some'u64'($t14->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t14->$bucket_size), 0))) && ($1_option_$is_none'u64'($t14->$inline_capacity) || (LenVec($t14->$inline_vec) <= $1_option_$borrow'u64'($t14->$inline_capacity)))) && (($1_option_$is_none'u64'($t14->$inline_capacity) && $1_option_$is_none'u64'($t14->$bucket_size)) || ($1_option_$is_some'u64'($t14->$inline_capacity) && $1_option_$is_some'u64'($t14->$bucket_size)))) && (LenVec($t14->$big_vec->$vec) <= 1)) && (var $range_0 := $t14->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t14->$inline_capacity->$vec) <= 1)) && (LenVec($t14->$bucket_size->$vec) <= 1)));

    // $t15 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t15;

    // assume WellFormed($t15) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t15);

    // $t16 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t16;

    // assume WellFormed($t16) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'$1_string_String'($t16);

    // $t17 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t17;

    // assume WellFormed($t17) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'bool'($t17);

    // $t18 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t18;

    // assume WellFormed($t18) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'u64'($t18);

    // $t19 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t19;

    // assume WellFormed($t19) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'u64'($t19);

    // trace_local[i]($t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume {:print "$info(): enter loop, variable(s) i, index havocked and reassigned"} true;
    assume {:print "$track_local(86,2,3):", $t3} $t3 == $t3;

    // trace_local[index]($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume {:print "$track_local(86,2,4):", $t4} $t4 == $t4;

    // assume Not(AbortFlag()) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume !$abort_flag;

    // $t12 := <($t3, $t9) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:18+1
    call $t12 := $Lt($t3, $t9);

    // if ($t12) goto L1 else goto L0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:9+254
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:9+254
L1:

    // label L2 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:204:82+6
    assume {:print "$at(2,8145,8151)"} true;
L2:

    // $t13 := get_global<aptos_discover::Problem_set>($t0) on_abort goto L8 with $t7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:204:55+13
    assume {:print "$at(2,8118,8131)"} true;
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,8118,8131)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(86,2):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t14 := get_field<aptos_discover::Problem_set>.question($t13) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:204:54+44
    $t14 := $t13->$question;

    // $t15 := smart_vector::borrow<aptos_discover::Q_set>($t14, $t3) on_abort goto L8 with $t7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:204:33+68
    call $t15 := $1_smart_vector_borrow'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t14, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,8096,8164)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(86,2):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[borrow_target]($t15) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:204:17+13
    assume {:print "$track_local(86,2,2):", $t15} $t15 == $t15;

    // $t16 := get_field<aptos_discover::Q_set>.img_url_set($t15) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:205:32+25
    assume {:print "$at(2,8197,8222)"} true;
    $t16 := $t15->$img_url_set;

    // $t17 := ==($t1, $t16) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:205:29+2
    $t17 := $IsEqual'$1_string_String'($t1, $t16);

    // if ($t17) goto L4 else goto L3 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:205:13+87
    if ($t17) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:206:25+1
    assume {:print "$at(2,8249,8250)"} true;
L4:

    // trace_local[index]($t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:206:17+5
    assume {:print "$at(2,8241,8246)"} true;
    assume {:print "$track_local(86,2,4):", $t3} $t3 == $t3;

    // label L3 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:208:17+1
    assume {:print "$at(2,8283,8284)"} true;
L3:

    // $t18 := 1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:208:19+1
    assume {:print "$at(2,8285,8286)"} true;
    $t18 := 1;
    assume $IsValid'u64'($t18);

    // $t19 := +($t3, $t18) on_abort goto L8 with $t7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:208:18+1
    call $t19 := $AddU64($t3, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,8284,8285)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(86,2):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[i]($t19) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:208:13+1
    assume {:print "$track_local(86,2,3):", $t19} $t19 == $t19;

    // goto L6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:208:20+1
    goto L6;

    // label L0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:210:16+5
    assume {:print "$at(2,8314,8319)"} true;
L0:

    // trace_return[0]($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:210:9+12
    assume {:print "$at(2,8307,8319)"} true;
    assume {:print "$track_return(86,2,0):", $t4} $t4 == $t4;

    // $t20 := move($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:210:9+12
    $t20 := $t4;

    // goto L7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:210:9+12
    goto L7;

    // label L6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:210:16+5
    // Loop invariant checking block for the loop started with header: L5
L6:

    // stop() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:210:16+5
    assume {:print "$at(2,8314,8319)"} true;
    assume false;
    return;

    // label L7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:211:5+1
    assume {:print "$at(2,8324,8325)"} true;
L7:

    // return $t20 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:211:5+1
    assume {:print "$at(2,8324,8325)"} true;
    $ret0 := $t20;
    return;

    // label L8 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:211:5+1
L8:

    // abort($t7) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:211:5+1
    assume {:print "$at(2,8324,8325)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun aptos_discover::find_index [verification] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:199:5+514
procedure {:timeLimit 40} $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_find_index$verify(_$t0: int, _$t1: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t2: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set;
    var $t7: int;
    var $t8: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set;
    var $t14: $1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set';
    var $t15: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $t16: $1_string_String;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t0: int;
    var $t1: $1_string_String;
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set': $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:199:5+1
    assume {:print "$at(2,7811,7812)"} true;
    assume $IsValid'address'($t0);

    // assume WellFormed($t1) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:199:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume forall $rsc: aptos_discover::Problem_set: ResourceDomain<aptos_discover::Problem_set>(): And(WellFormed($rsc), And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc))), 0))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc))), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.question($rsc))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc)))))), Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($rsc)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($rsc))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($rsc)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($rsc)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.true_answer($rsc))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($rsc)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($rsc))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($rsc)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($rsc)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.false_answer($rsc))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($rsc)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($rsc))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($rsc)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($rsc)))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:199:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $a_0);
    (($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'($rsc) && ((((((((((((((((((((($1_option_$is_none'u64'($rsc->$question->$bucket_size) || ($1_option_$is_some'u64'($rsc->$question->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($rsc->$question->$bucket_size), 0))) && ($1_option_$is_none'u64'($rsc->$question->$inline_capacity) || (LenVec($rsc->$question->$inline_vec) <= $1_option_$borrow'u64'($rsc->$question->$inline_capacity)))) && (($1_option_$is_none'u64'($rsc->$question->$inline_capacity) && $1_option_$is_none'u64'($rsc->$question->$bucket_size)) || ($1_option_$is_some'u64'($rsc->$question->$inline_capacity) && $1_option_$is_some'u64'($rsc->$question->$bucket_size)))) && (LenVec($rsc->$question->$big_vec->$vec) <= 1)) && (var $range_1 := $rsc->$question->$big_vec->$vec; (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_3 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_4: int :: $InRange($range_3, $i_4) ==> (var i := $i_4;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_5 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_6: int :: $InRange($range_5, $i_6) ==> (var i := $i_6;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($rsc->$question->$inline_capacity->$vec) <= 1)) && (LenVec($rsc->$question->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($rsc->$true_answer->$bucket_size) || ($1_option_$is_some'u64'($rsc->$true_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($rsc->$true_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($rsc->$true_answer->$inline_capacity) || (LenVec($rsc->$true_answer->$inline_vec) <= $1_option_$borrow'u64'($rsc->$true_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($rsc->$true_answer->$inline_capacity) && $1_option_$is_none'u64'($rsc->$true_answer->$bucket_size)) || ($1_option_$is_some'u64'($rsc->$true_answer->$inline_capacity) && $1_option_$is_some'u64'($rsc->$true_answer->$bucket_size)))) && (LenVec($rsc->$true_answer->$big_vec->$vec) <= 1)) && (var $range_7 := $rsc->$true_answer->$big_vec->$vec; (forall $i_8: int :: InRangeVec($range_7, $i_8) ==> (var $elem := ReadVec($range_7, $i_8);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_9 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_10: int :: $InRange($range_9, $i_10) ==> (var i := $i_10;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_11 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_12: int :: $InRange($range_11, $i_12) ==> (var i := $i_12;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($rsc->$true_answer->$inline_capacity->$vec) <= 1)) && (LenVec($rsc->$true_answer->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($rsc->$false_answer->$bucket_size) || ($1_option_$is_some'u64'($rsc->$false_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($rsc->$false_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($rsc->$false_answer->$inline_capacity) || (LenVec($rsc->$false_answer->$inline_vec) <= $1_option_$borrow'u64'($rsc->$false_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($rsc->$false_answer->$inline_capacity) && $1_option_$is_none'u64'($rsc->$false_answer->$bucket_size)) || ($1_option_$is_some'u64'($rsc->$false_answer->$inline_capacity) && $1_option_$is_some'u64'($rsc->$false_answer->$bucket_size)))) && (LenVec($rsc->$false_answer->$big_vec->$vec) <= 1)) && (var $range_13 := $rsc->$false_answer->$big_vec->$vec; (forall $i_14: int :: InRangeVec($range_13, $i_14) ==> (var $elem := ReadVec($range_13, $i_14);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_15 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_16: int :: $InRange($range_15, $i_16) ==> (var i := $i_16;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_17 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_18: int :: $InRange($range_17, $i_18) ==> (var i := $i_18;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($rsc->$false_answer->$inline_capacity->$vec) <= 1)) && (LenVec($rsc->$false_answer->$bucket_size->$vec) <= 1))))));

    // trace_local[caller]($t0) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:199:5+1
    assume {:print "$track_local(86,2,0):", $t0} $t0 == $t0;

    // trace_local[image_target]($t1) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:199:5+1
    assume {:print "$track_local(86,2,1):", $t1} $t1 == $t1;

    // $t6 := get_global<aptos_discover::Problem_set>($t0) on_abort goto L8 with $t7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:200:44+13
    assume {:print "$at(2,7941,7954)"} true;
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,7941,7954)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(86,2):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t8 := get_field<aptos_discover::Problem_set>.question($t6) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:200:43+44
    $t8 := $t6->$question;

    // $t9 := smart_vector::length<aptos_discover::Q_set>($t8) on_abort goto L8 with $t7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:200:22+66
    call $t9 := $1_smart_vector_length'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t8);
    if ($abort_flag) {
        assume {:print "$at(2,7919,7985)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(86,2):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[length]($t9) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:200:13+6
    assume {:print "$track_local(86,2,5):", $t9} $t9 == $t9;

    // $t10 := 9999999 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:201:21+7
    assume {:print "$at(2,8007,8014)"} true;
    $t10 := 9999999;
    assume $IsValid'u64'($t10);

    // trace_local[index]($t10) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:201:13+5
    assume {:print "$track_local(86,2,4):", $t10} $t10 == $t10;

    // $t11 := 0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:202:17+1
    assume {:print "$at(2,8032,8033)"} true;
    $t11 := 0;
    assume $IsValid'u64'($t11);

    // trace_local[i]($t11) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:202:14+1
    assume {:print "$track_local(86,2,3):", $t11} $t11 == $t11;

    // label L5 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume {:print "$at(2,8050,8051)"} true;
L5:

    // $t3 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume {:print "$at(2,8050,8051)"} true;
    havoc $t3;

    // assume WellFormed($t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'u64'($t3);

    // $t4 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t4;

    // assume WellFormed($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'u64'($t4);

    // $t12 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t12;

    // assume WellFormed($t12) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'bool'($t12);

    // $t13 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t13;

    // assume And(WellFormed($t13), And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(And(Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t13))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t13))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t13))), 0))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t13))), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.question($t13))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t13)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t13))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t13)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t13))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t13)))))), Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t13)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.question($t13))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.question($t13)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.question($t13)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t13))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t13))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t13))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t13))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.true_answer($t13))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t13)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t13))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t13)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t13))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t13)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t13)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.true_answer($t13))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.true_answer($t13)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.true_answer($t13)))), 1)), Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t13))), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t13))), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t13))), 0)))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t13))), Le(Len<aptos_discover::User_answer>(select smart_vector::SmartVector.inline_vec(select aptos_discover::Problem_set.false_answer($t13))), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t13)))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t13))), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t13)))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t13))), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t13)))))), Le(Len<big_vector::BigVector<aptos_discover::User_answer>>(select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t13)))), 1)), forall $elem: big_vector::BigVector<aptos_discover::User_answer>: select option::Option.vec(select smart_vector::SmartVector.big_vec(select aptos_discover::Problem_set.false_answer($t13))): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::User_answer>(table_with_length::spec_get<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::User_answer>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity(select aptos_discover::Problem_set.false_answer($t13)))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size(select aptos_discover::Problem_set.false_answer($t13)))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set'($t13) && ((((((((((((((((((((($1_option_$is_none'u64'($t13->$question->$bucket_size) || ($1_option_$is_some'u64'($t13->$question->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t13->$question->$bucket_size), 0))) && ($1_option_$is_none'u64'($t13->$question->$inline_capacity) || (LenVec($t13->$question->$inline_vec) <= $1_option_$borrow'u64'($t13->$question->$inline_capacity)))) && (($1_option_$is_none'u64'($t13->$question->$inline_capacity) && $1_option_$is_none'u64'($t13->$question->$bucket_size)) || ($1_option_$is_some'u64'($t13->$question->$inline_capacity) && $1_option_$is_some'u64'($t13->$question->$bucket_size)))) && (LenVec($t13->$question->$big_vec->$vec) <= 1)) && (var $range_0 := $t13->$question->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t13->$question->$inline_capacity->$vec) <= 1)) && (LenVec($t13->$question->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($t13->$true_answer->$bucket_size) || ($1_option_$is_some'u64'($t13->$true_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t13->$true_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($t13->$true_answer->$inline_capacity) || (LenVec($t13->$true_answer->$inline_vec) <= $1_option_$borrow'u64'($t13->$true_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($t13->$true_answer->$inline_capacity) && $1_option_$is_none'u64'($t13->$true_answer->$bucket_size)) || ($1_option_$is_some'u64'($t13->$true_answer->$inline_capacity) && $1_option_$is_some'u64'($t13->$true_answer->$bucket_size)))) && (LenVec($t13->$true_answer->$big_vec->$vec) <= 1)) && (var $range_6 := $t13->$true_answer->$big_vec->$vec; (forall $i_7: int :: InRangeVec($range_6, $i_7) ==> (var $elem := ReadVec($range_6, $i_7);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_8 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_9: int :: $InRange($range_8, $i_9) ==> (var i := $i_9;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_10 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_11: int :: $InRange($range_10, $i_11) ==> (var i := $i_11;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t13->$true_answer->$inline_capacity->$vec) <= 1)) && (LenVec($t13->$true_answer->$bucket_size->$vec) <= 1)) && ($1_option_$is_none'u64'($t13->$false_answer->$bucket_size) || ($1_option_$is_some'u64'($t13->$false_answer->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t13->$false_answer->$bucket_size), 0)))) && ($1_option_$is_none'u64'($t13->$false_answer->$inline_capacity) || (LenVec($t13->$false_answer->$inline_vec) <= $1_option_$borrow'u64'($t13->$false_answer->$inline_capacity)))) && (($1_option_$is_none'u64'($t13->$false_answer->$inline_capacity) && $1_option_$is_none'u64'($t13->$false_answer->$bucket_size)) || ($1_option_$is_some'u64'($t13->$false_answer->$inline_capacity) && $1_option_$is_some'u64'($t13->$false_answer->$bucket_size)))) && (LenVec($t13->$false_answer->$big_vec->$vec) <= 1)) && (var $range_12 := $t13->$false_answer->$big_vec->$vec; (forall $i_13: int :: InRangeVec($range_12, $i_13) ==> (var $elem := ReadVec($range_12, $i_13);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (var $range_14 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)); (forall $i_15: int :: $InRange($range_14, $i_15) ==> (var i := $i_15;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_16 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)); (forall $i_17: int :: $InRange($range_16, $i_17) ==> (var i := $i_17;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_User_answer''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t13->$false_answer->$inline_capacity->$vec) <= 1)) && (LenVec($t13->$false_answer->$bucket_size->$vec) <= 1)));

    // $t14 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t14;

    // assume And(WellFormed($t14), And(And(And(And(And(And(Or(option::$is_none<u64>(select smart_vector::SmartVector.bucket_size($t14)), And(option::$is_some<u64>(select smart_vector::SmartVector.bucket_size($t14)), Neq<u64>(option::$borrow<u64>(select smart_vector::SmartVector.bucket_size($t14)), 0))), Or(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity($t14)), Le(Len<aptos_discover::Q_set>(select smart_vector::SmartVector.inline_vec($t14)), option::$borrow<u64>(select smart_vector::SmartVector.inline_capacity($t14))))), Or(And(option::$is_none<u64>(select smart_vector::SmartVector.inline_capacity($t14)), option::$is_none<u64>(select smart_vector::SmartVector.bucket_size($t14))), And(option::$is_some<u64>(select smart_vector::SmartVector.inline_capacity($t14)), option::$is_some<u64>(select smart_vector::SmartVector.bucket_size($t14))))), Le(Len<big_vector::BigVector<aptos_discover::Q_set>>(select option::Option.vec(select smart_vector::SmartVector.big_vec($t14))), 1)), forall $elem: big_vector::BigVector<aptos_discover::Q_set>: select option::Option.vec(select smart_vector::SmartVector.big_vec($t14)): And(And(And(And(And(And(And(And(And(And(And(Neq<u64>(select big_vector::BigVector.bucket_size($elem), 0), Implies(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0))), Implies(Eq<u64>(select big_vector::BigVector.end_index($elem), 0), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0))), Le(select big_vector::BigVector.end_index($elem), Mul(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), forall i: num: Range(0, Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)): Eq<num>(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), select big_vector::BigVector.bucket_size($elem)))), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Le(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), select big_vector::BigVector.bucket_size($elem)))), forall i: num: Range(0, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), Div(Sub(Add(select big_vector::BigVector.end_index($elem), select big_vector::BigVector.bucket_size($elem)), 1), select big_vector::BigVector.bucket_size($elem)))), Or(And(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<u64>(select big_vector::BigVector.end_index($elem), 0)), And(Neq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Eq<num>(Add(Mul(Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1), select big_vector::BigVector.bucket_size($elem)), Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1)))), select big_vector::BigVector.end_index($elem))))), forall i: u64: TypeDomain<u64>() where Ge(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): Not(big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i))), forall i: u64: TypeDomain<u64>() where Lt(i, big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem))): big_vector::spec_table_contains<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), i)), Or(Eq<u64>(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 0), Gt(Len<aptos_discover::Q_set>(table_with_length::spec_get<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem), Sub(big_vector::spec_table_len<u64, vector<aptos_discover::Q_set>>(select big_vector::BigVector.buckets($elem)), 1))), 0)))), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.inline_capacity($t14))), 1)), Le(Len<u64>(select option::Option.vec(select smart_vector::SmartVector.bucket_size($t14))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume ($IsValid'$1_smart_vector_SmartVector'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($t14) && ((((((($1_option_$is_none'u64'($t14->$bucket_size) || ($1_option_$is_some'u64'($t14->$bucket_size) && !$IsEqual'u64'($1_option_$borrow'u64'($t14->$bucket_size), 0))) && ($1_option_$is_none'u64'($t14->$inline_capacity) || (LenVec($t14->$inline_vec) <= $1_option_$borrow'u64'($t14->$inline_capacity)))) && (($1_option_$is_none'u64'($t14->$inline_capacity) && $1_option_$is_none'u64'($t14->$bucket_size)) || ($1_option_$is_some'u64'($t14->$inline_capacity) && $1_option_$is_some'u64'($t14->$bucket_size)))) && (LenVec($t14->$big_vec->$vec) <= 1)) && (var $range_0 := $t14->$big_vec->$vec; (forall $i_1: int :: InRangeVec($range_0, $i_1) ==> (var $elem := ReadVec($range_0, $i_1);
    ((((((((((((!$IsEqual'u64'($elem->$bucket_size, 0) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) ==> $IsEqual'u64'($elem->$end_index, 0))) && ($IsEqual'u64'($elem->$end_index, 0) ==> $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0))) && ($elem->$end_index <= ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) * $elem->$bucket_size))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (var $range_2 := $Range(0, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    ($IsEqual'num'(LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)), $elem->$bucket_size))))))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) <= $elem->$bucket_size))) && (var $range_4 := $Range(0, $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)); (forall $i_5: int :: $InRange($range_4, $i_5) ==> (var i := $i_5;
    ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))))) && $IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), ((($elem->$end_index + $elem->$bucket_size) - 1) div $elem->$bucket_size))) && (($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'u64'($elem->$end_index, 0)) || (!$IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) && $IsEqual'num'(((($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1) * $elem->$bucket_size) + LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1)))), $elem->$end_index)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i >= $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> (!$1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && (forall i: int :: $IsValid'u64'(i) ==> ((i < $1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets)))  ==> ($1_big_vector_spec_table_contains'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, i)))) && ($IsEqual'u64'($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets), 0) || (LenVec($1_table_with_length_spec_get'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets, ($1_big_vector_spec_table_len'u64_vec'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set''($elem->$buckets) - 1))) > 0)))))))) && (LenVec($t14->$inline_capacity->$vec) <= 1)) && (LenVec($t14->$bucket_size->$vec) <= 1)));

    // $t15 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t15;

    // assume WellFormed($t15) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t15);

    // $t16 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t16;

    // assume WellFormed($t16) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'$1_string_String'($t16);

    // $t17 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t17;

    // assume WellFormed($t17) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'bool'($t17);

    // $t18 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t18;

    // assume WellFormed($t18) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'u64'($t18);

    // $t19 := havoc[val]() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    havoc $t19;

    // assume WellFormed($t19) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume $IsValid'u64'($t19);

    // trace_local[i]($t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume {:print "$info(): enter loop, variable(s) i, index havocked and reassigned"} true;
    assume {:print "$track_local(86,2,3):", $t3} $t3 == $t3;

    // trace_local[index]($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume {:print "$track_local(86,2,4):", $t4} $t4 == $t4;

    // assume Not(AbortFlag()) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:16+1
    assume !$abort_flag;

    // $t12 := <($t3, $t9) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:18+1
    call $t12 := $Lt($t3, $t9);

    // if ($t12) goto L1 else goto L0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:9+254
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:203:9+254
L1:

    // label L2 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:204:82+6
    assume {:print "$at(2,8145,8151)"} true;
L2:

    // $t13 := get_global<aptos_discover::Problem_set>($t0) on_abort goto L8 with $t7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:204:55+13
    assume {:print "$at(2,8118,8131)"} true;
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Problem_set_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,8118,8131)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(86,2):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t14 := get_field<aptos_discover::Problem_set>.question($t13) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:204:54+44
    $t14 := $t13->$question;

    // $t15 := smart_vector::borrow<aptos_discover::Q_set>($t14, $t3) on_abort goto L8 with $t7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:204:33+68
    call $t15 := $1_smart_vector_borrow'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Q_set'($t14, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,8096,8164)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(86,2):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[borrow_target]($t15) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:204:17+13
    assume {:print "$track_local(86,2,2):", $t15} $t15 == $t15;

    // $t16 := get_field<aptos_discover::Q_set>.img_url_set($t15) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:205:32+25
    assume {:print "$at(2,8197,8222)"} true;
    $t16 := $t15->$img_url_set;

    // $t17 := ==($t1, $t16) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:205:29+2
    $t17 := $IsEqual'$1_string_String'($t1, $t16);

    // if ($t17) goto L4 else goto L3 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:205:13+87
    if ($t17) { goto L4; } else { goto L3; }

    // label L4 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:206:25+1
    assume {:print "$at(2,8249,8250)"} true;
L4:

    // trace_local[index]($t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:206:17+5
    assume {:print "$at(2,8241,8246)"} true;
    assume {:print "$track_local(86,2,4):", $t3} $t3 == $t3;

    // label L3 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:208:17+1
    assume {:print "$at(2,8283,8284)"} true;
L3:

    // $t18 := 1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:208:19+1
    assume {:print "$at(2,8285,8286)"} true;
    $t18 := 1;
    assume $IsValid'u64'($t18);

    // $t19 := +($t3, $t18) on_abort goto L8 with $t7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:208:18+1
    call $t19 := $AddU64($t3, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,8284,8285)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(86,2):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[i]($t19) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:208:13+1
    assume {:print "$track_local(86,2,3):", $t19} $t19 == $t19;

    // goto L6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:208:20+1
    goto L6;

    // label L0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:210:16+5
    assume {:print "$at(2,8314,8319)"} true;
L0:

    // trace_return[0]($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:210:9+12
    assume {:print "$at(2,8307,8319)"} true;
    assume {:print "$track_return(86,2,0):", $t4} $t4 == $t4;

    // $t20 := move($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:210:9+12
    $t20 := $t4;

    // goto L7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:210:9+12
    goto L7;

    // label L6 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:210:16+5
    // Loop invariant checking block for the loop started with header: L5
L6:

    // stop() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:210:16+5
    assume {:print "$at(2,8314,8319)"} true;
    assume false;
    return;

    // label L7 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:211:5+1
    assume {:print "$at(2,8324,8325)"} true;
L7:

    // return $t20 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:211:5+1
    assume {:print "$at(2,8324,8325)"} true;
    $ret0 := $t20;
    return;

    // label L8 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:211:5+1
L8:

    // abort($t7) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:211:5+1
    assume {:print "$at(2,8324,8325)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun aptos_discover::increase_CHP [baseline] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1323
procedure {:inline 1} $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_increase_CHP(_$t0: $signer, _$t1: $signer) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_fungible_asset_MintRef;
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: int;
    var $t8: int;
    var $t9: Vec (int);
    var $t10: int;
    var $t11: Vec (int);
    var $t12: int;
    var $t13: $1_object_Object'$1_fungible_asset_Metadata';
    var $t14: int;
    var $t15: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap;
    var $t16: $1_fungible_asset_MintRef;
    var $t17: int;
    var $t18: Vec (int);
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t0: $signer;
    var $t1: $signer;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[caller]($t0) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume {:print "$at(2,9931,9932)"} true;
    assume {:print "$track_local(86,4,0):", $t0} $t0 == $t0;

    // trace_local[resoures_signer]($t1) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume {:print "$track_local(86,4,1):", $t1} $t1 == $t1;

    // $t8 := 0x28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:83+5
    assume {:print "$at(2,10100,10105)"} true;
    $t8 := 18425465769474857495901587093882631151486939702443524661813556910146273842942;
    assume $IsValid'address'($t8);

    // $t9 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:89+4
    $t9 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t9);

    // $t10 := opaque begin: account::create_resource_address($t8, $t9) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:58+36

    // assume WellFormed($t10) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:58+36
    assume $IsValid'address'($t10);

    // assume Eq<address>($t10, account::spec_create_resource_address($t8, $t9)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:58+36
    assume $IsEqual'address'($t10, $1_account_spec_create_resource_address($t8, $t9));

    // $t10 := opaque end: account::create_resource_address($t8, $t9) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:58+36

    // $t11 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:95+4
    $t11 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t11);

    // $t12 := opaque begin: object::create_object_address($t10, $t11) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:27+73

    // assume WellFormed($t12) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:27+73
    assume $IsValid'address'($t12);

    // assume Eq<address>($t12, object::spec_create_object_address($t10, $t11)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:27+73
    assume $IsEqual'address'($t12, $1_object_spec_create_object_address($t10, $t11));

    // $t12 := opaque end: object::create_object_address($t10, $t11) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:27+73

    // trace_local[obj_address]($t12) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:13+11
    assume {:print "$track_local(86,4,7):", $t12} $t12 == $t12;

    // $t13 := object::address_to_object<fungible_asset::Metadata>($t12) on_abort goto L2 with $t14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:254:25+48
    assume {:print "$at(2,10143,10191)"} true;
    call $t13 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t12);
    if ($abort_flag) {
        assume {:print "$at(2,10143,10191)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(86,4):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[meta_data]($t13) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:254:13+9
    assume {:print "$track_local(86,4,6):", $t13} $t13 == $t13;

    // $t15 := get_global<aptos_discover::ChainMark_FA_cap>($t12) on_abort goto L2 with $t14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:257:22+13
    assume {:print "$at(2,10316,10329)"} true;
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory, $t12)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory, $t12);
    }
    if ($abort_flag) {
        assume {:print "$at(2,10316,10329)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(86,4):", $t14} $t14 == $t14;
        goto L2;
    }

    // $t16 := get_field<aptos_discover::ChainMark_FA_cap>.mint_cap($t15) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:38+16
    assume {:print "$at(2,10585,10601)"} true;
    $t16 := $t15->$mint_cap;

    // $t17 := 0x28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:80+5
    $t17 := 18425465769474857495901587093882631151486939702443524661813556910146273842942;
    assume $IsValid'address'($t17);

    // $t18 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:86+4
    $t18 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t18);

    // $t19 := opaque begin: account::create_resource_address($t17, $t18) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:55+36

    // assume WellFormed($t19) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:55+36
    assume $IsValid'address'($t19);

    // assume Eq<address>($t19, account::spec_create_resource_address($t17, $t18)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:55+36
    assume $IsEqual'address'($t19, $1_account_spec_create_resource_address($t17, $t18));

    // $t19 := opaque end: account::create_resource_address($t17, $t18) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:55+36

    // $t20 := 100000000 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:92+9
    $t20 := 100000000;
    assume $IsValid'u64'($t20);

    // primary_fungible_store::mint($t16, $t19, $t20) on_abort goto L2 with $t14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:9+93
    call $1_primary_fungible_store_mint($t16, $t19, $t20);
    if ($abort_flag) {
        assume {:print "$at(2,10556,10649)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(86,4):", $t14} $t14 == $t14;
        goto L2;
    }

    // $t21 := signer::address_of($t0) on_abort goto L2 with $t14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:261:68+26
    assume {:print "$at(2,10718,10744)"} true;
    call $t21 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,10718,10744)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(86,4):", $t14} $t14 == $t14;
        goto L2;
    }

    // $t22 := 100000000 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:261:95+9
    $t22 := 100000000;
    assume $IsValid'u64'($t22);

    // primary_fungible_store::transfer<fungible_asset::Metadata>($t1, $t13, $t21, $t22) on_abort goto L2 with $t14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:261:9+96
    call $1_primary_fungible_store_transfer'$1_fungible_asset_Metadata'($t1, $t13, $t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(2,10659,10755)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(86,4):", $t14} $t14 == $t14;
        goto L2;
    }

    // label L1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:274:5+1
    assume {:print "$at(2,11253,11254)"} true;
L1:

    // return () at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:274:5+1
    assume {:print "$at(2,11253,11254)"} true;
    return;

    // label L2 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:274:5+1
L2:

    // abort($t14) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:274:5+1
    assume {:print "$at(2,11253,11254)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun aptos_discover::increase_CHP [verification] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1323
procedure {:timeLimit 40} $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_increase_CHP$verify(_$t0: $signer, _$t1: $signer) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_fungible_asset_MintRef;
    var $t6: $1_object_Object'$1_fungible_asset_Metadata';
    var $t7: int;
    var $t8: int;
    var $t9: Vec (int);
    var $t10: int;
    var $t11: Vec (int);
    var $t12: int;
    var $t13: $1_object_Object'$1_fungible_asset_Metadata';
    var $t14: int;
    var $t15: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap;
    var $t16: $1_fungible_asset_MintRef;
    var $t17: int;
    var $t18: Vec (int);
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t0: $signer;
    var $t1: $signer;
    var $temp_0'$1_object_Object'$1_fungible_asset_Metadata'': $1_object_Object'$1_fungible_asset_Metadata';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume {:print "$at(2,9931,9932)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume WellFormed($t1) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume $IsValid'signer'($t1) && $1_signer_is_txn_signer($t1) && $1_signer_is_txn_signer_addr($t1->$addr);

    // assume forall $rsc: features::Features: ResourceDomain<features::Features>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: object::TombStone: ResourceDomain<object::TombStone>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_TombStone_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_TombStone_$memory, $a_0);
    ($IsValid'$1_object_TombStone'($rsc))));

    // assume forall $rsc: object::Untransferable: ResourceDomain<object::Untransferable>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: fungible_asset::Untransferable: ResourceDomain<fungible_asset::Untransferable>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Untransferable_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Untransferable'($rsc))));

    // assume forall $rsc: fungible_asset::ConcurrentFungibleBalance: ResourceDomain<fungible_asset::ConcurrentFungibleBalance>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentFungibleBalance_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentFungibleBalance'($rsc))));

    // assume forall $rsc: fungible_asset::ConcurrentSupply: ResourceDomain<fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: fungible_asset::DispatchFunctionStore: ResourceDomain<fungible_asset::DispatchFunctionStore>(): And(WellFormed($rsc), And(And(Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.withdraw_function($rsc))), 1), Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.deposit_function($rsc))), 1)), Le(Len<function_info::FunctionInfo>(select option::Option.vec(select fungible_asset::DispatchFunctionStore.derived_balance_function($rsc))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_DispatchFunctionStore_$memory, $a_0);
    (($IsValid'$1_fungible_asset_DispatchFunctionStore'($rsc) && (((LenVec($rsc->$withdraw_function->$vec) <= 1) && (LenVec($rsc->$deposit_function->$vec) <= 1)) && (LenVec($rsc->$derived_balance_function->$vec) <= 1))))));

    // assume forall $rsc: fungible_asset::FungibleStore: ResourceDomain<fungible_asset::FungibleStore>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_FungibleStore_$memory, $a_0);
    ($IsValid'$1_fungible_asset_FungibleStore'($rsc))));

    // assume forall $rsc: fungible_asset::Supply: ResourceDomain<fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: dispatchable_fungible_asset::TransferRefStore: ResourceDomain<dispatchable_fungible_asset::TransferRefStore>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_dispatchable_fungible_asset_TransferRefStore_$memory, $a_0);
    ($IsValid'$1_dispatchable_fungible_asset_TransferRefStore'($rsc))));

    // assume forall $rsc: primary_fungible_store::DeriveRefPod: ResourceDomain<primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: aptos_discover::ChainMark_FA_cap: ResourceDomain<aptos_discover::ChainMark_FA_cap>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory, $a_0);
    ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'($rsc))));

    // trace_local[caller]($t0) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume {:print "$track_local(86,4,0):", $t0} $t0 == $t0;

    // trace_local[resoures_signer]($t1) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:251:5+1
    assume {:print "$track_local(86,4,1):", $t1} $t1 == $t1;

    // $t8 := 0x28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:83+5
    assume {:print "$at(2,10100,10105)"} true;
    $t8 := 18425465769474857495901587093882631151486939702443524661813556910146273842942;
    assume $IsValid'address'($t8);

    // $t9 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:89+4
    $t9 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t9);

    // $t10 := opaque begin: account::create_resource_address($t8, $t9) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:58+36

    // assume WellFormed($t10) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:58+36
    assume $IsValid'address'($t10);

    // assume Eq<address>($t10, account::spec_create_resource_address($t8, $t9)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:58+36
    assume $IsEqual'address'($t10, $1_account_spec_create_resource_address($t8, $t9));

    // $t10 := opaque end: account::create_resource_address($t8, $t9) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:58+36

    // $t11 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:95+4
    $t11 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t11);

    // $t12 := opaque begin: object::create_object_address($t10, $t11) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:27+73

    // assume WellFormed($t12) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:27+73
    assume $IsValid'address'($t12);

    // assume Eq<address>($t12, object::spec_create_object_address($t10, $t11)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:27+73
    assume $IsEqual'address'($t12, $1_object_spec_create_object_address($t10, $t11));

    // $t12 := opaque end: object::create_object_address($t10, $t11) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:27+73

    // trace_local[obj_address]($t12) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:253:13+11
    assume {:print "$track_local(86,4,7):", $t12} $t12 == $t12;

    // $t13 := object::address_to_object<fungible_asset::Metadata>($t12) on_abort goto L2 with $t14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:254:25+48
    assume {:print "$at(2,10143,10191)"} true;
    call $t13 := $1_object_address_to_object'$1_fungible_asset_Metadata'($t12);
    if ($abort_flag) {
        assume {:print "$at(2,10143,10191)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(86,4):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[meta_data]($t13) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:254:13+9
    assume {:print "$track_local(86,4,6):", $t13} $t13 == $t13;

    // $t15 := get_global<aptos_discover::ChainMark_FA_cap>($t12) on_abort goto L2 with $t14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:257:22+13
    assume {:print "$at(2,10316,10329)"} true;
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory, $t12)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory, $t12);
    }
    if ($abort_flag) {
        assume {:print "$at(2,10316,10329)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(86,4):", $t14} $t14 == $t14;
        goto L2;
    }

    // $t16 := get_field<aptos_discover::ChainMark_FA_cap>.mint_cap($t15) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:38+16
    assume {:print "$at(2,10585,10601)"} true;
    $t16 := $t15->$mint_cap;

    // $t17 := 0x28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:80+5
    $t17 := 18425465769474857495901587093882631151486939702443524661813556910146273842942;
    assume $IsValid'address'($t17);

    // $t18 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:86+4
    $t18 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t18);

    // $t19 := opaque begin: account::create_resource_address($t17, $t18) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:55+36

    // assume WellFormed($t19) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:55+36
    assume $IsValid'address'($t19);

    // assume Eq<address>($t19, account::spec_create_resource_address($t17, $t18)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:55+36
    assume $IsEqual'address'($t19, $1_account_spec_create_resource_address($t17, $t18));

    // $t19 := opaque end: account::create_resource_address($t17, $t18) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:55+36

    // $t20 := 100000000 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:92+9
    $t20 := 100000000;
    assume $IsValid'u64'($t20);

    // primary_fungible_store::mint($t16, $t19, $t20) on_abort goto L2 with $t14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:260:9+93
    call $1_primary_fungible_store_mint($t16, $t19, $t20);
    if ($abort_flag) {
        assume {:print "$at(2,10556,10649)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(86,4):", $t14} $t14 == $t14;
        goto L2;
    }

    // $t21 := signer::address_of($t0) on_abort goto L2 with $t14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:261:68+26
    assume {:print "$at(2,10718,10744)"} true;
    call $t21 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,10718,10744)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(86,4):", $t14} $t14 == $t14;
        goto L2;
    }

    // $t22 := 100000000 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:261:95+9
    $t22 := 100000000;
    assume $IsValid'u64'($t22);

    // primary_fungible_store::transfer<fungible_asset::Metadata>($t1, $t13, $t21, $t22) on_abort goto L2 with $t14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:261:9+96
    call $1_primary_fungible_store_transfer'$1_fungible_asset_Metadata'($t1, $t13, $t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(2,10659,10755)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(86,4):", $t14} $t14 == $t14;
        goto L2;
    }

    // label L1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:274:5+1
    assume {:print "$at(2,11253,11254)"} true;
L1:

    // return () at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:274:5+1
    assume {:print "$at(2,11253,11254)"} true;
    return;

    // label L2 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:274:5+1
L2:

    // abort($t14) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:274:5+1
    assume {:print "$at(2,11253,11254)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun aptos_discover::init_module [verification] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1583
procedure {:timeLimit 40} $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_init_module$verify(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: $signer;
    var $t2: $1_fungible_asset_BurnRef;
    var $t3: $1_fungible_asset_MintRef;
    var $t4: $1_object_ExtendRef;
    var $t5: $1_object_ConstructorRef;
    var $t6: $1_object_TransferRef;
    var $t7: $signer;
    var $t8: $1_account_SignerCapability;
    var $t9: $signer;
    var $t10: $1_fungible_asset_TransferRef;
    var $t11: Vec (int);
    var $t12: int;
    var $t13: int;
    var $t14: $1_account_Account;
    var $t15: Vec (int);
    var $t16: $signer;
    var $t17: $1_account_SignerCapability;
    var $t18: int;
    var $t19: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap;
    var $t20: Vec (int);
    var $t21: int;
    var $t22: int;
    var $t23: $1_object_ConstructorRef;
    var $t24: $1_object_TransferRef;
    var $t25: $1_object_ExtendRef;
    var $t26: $signer;
    var $t27: $1_option_Option'u128';
    var $t28: Vec (int);
    var $t29: $1_string_String;
    var $t30: Vec (int);
    var $t31: $1_string_String;
    var $t32: int;
    var $t33: Vec (int);
    var $t34: $1_string_String;
    var $t35: Vec (int);
    var $t36: $1_string_String;
    var $t37: $1_fungible_asset_MintRef;
    var $t38: $1_fungible_asset_BurnRef;
    var $t39: $1_fungible_asset_TransferRef;
    var $t40: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap;
    var $t41: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap;
    var $t0: $signer;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'$1_fungible_asset_BurnRef': $1_fungible_asset_BurnRef;
    var $temp_0'$1_fungible_asset_MintRef': $1_fungible_asset_MintRef;
    var $temp_0'$1_fungible_asset_TransferRef': $1_fungible_asset_TransferRef;
    var $temp_0'$1_object_ConstructorRef': $1_object_ConstructorRef;
    var $temp_0'$1_object_ExtendRef': $1_object_ExtendRef;
    var $temp_0'$1_object_TransferRef': $1_object_TransferRef;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume {:print "$at(2,8331,8332)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($t0->$addr);

    // assume forall $rsc: features::Features: ResourceDomain<features::Features>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_features_Features_$memory, $a_0)}(var $rsc := $ResourceValue($1_features_Features_$memory, $a_0);
    ($IsValid'$1_features_Features'($rsc))));

    // assume forall $rsc: account::Account: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($rsc->$rotation_capability_offer->$for->$vec) <= 1) && (LenVec($rsc->$signer_capability_offer->$for->$vec) <= 1))))));

    // assume forall $rsc: object::ObjectCore: ResourceDomain<object::ObjectCore>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_ObjectCore_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_ObjectCore_$memory, $a_0);
    ($IsValid'$1_object_ObjectCore'($rsc))));

    // assume forall $rsc: object::Untransferable: ResourceDomain<object::Untransferable>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_object_Untransferable_$memory, $a_0)}(var $rsc := $ResourceValue($1_object_Untransferable_$memory, $a_0);
    ($IsValid'$1_object_Untransferable'($rsc))));

    // assume forall $rsc: fungible_asset::ConcurrentSupply: ResourceDomain<fungible_asset::ConcurrentSupply>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_ConcurrentSupply_$memory, $a_0);
    ($IsValid'$1_fungible_asset_ConcurrentSupply'($rsc))));

    // assume forall $rsc: fungible_asset::Metadata: ResourceDomain<fungible_asset::Metadata>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Metadata_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Metadata_$memory, $a_0);
    ($IsValid'$1_fungible_asset_Metadata'($rsc))));

    // assume forall $rsc: fungible_asset::Supply: ResourceDomain<fungible_asset::Supply>(): And(WellFormed($rsc), Le(Len<u128>(select option::Option.vec(select fungible_asset::Supply.maximum($rsc))), 1)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_fungible_asset_Supply_$memory, $a_0)}(var $rsc := $ResourceValue($1_fungible_asset_Supply_$memory, $a_0);
    (($IsValid'$1_fungible_asset_Supply'($rsc) && (LenVec($rsc->$maximum->$vec) <= 1)))));

    // assume forall $rsc: primary_fungible_store::DeriveRefPod: ResourceDomain<primary_fungible_store::DeriveRefPod>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0)}(var $rsc := $ResourceValue($1_primary_fungible_store_DeriveRefPod_$memory, $a_0);
    ($IsValid'$1_primary_fungible_store_DeriveRefPod'($rsc))));

    // assume forall $rsc: aptos_discover::ChainMark_FA_cap: ResourceDomain<aptos_discover::ChainMark_FA_cap>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory, $a_0);
    ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap'($rsc))));

    // assume forall $rsc: aptos_discover::ChainMark_Object_cap: ResourceDomain<aptos_discover::ChainMark_Object_cap>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap_$memory, $a_0);
    ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap'($rsc))));

    // assume forall $rsc: aptos_discover::ResourceCap: ResourceDomain<aptos_discover::ResourceCap>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory, $a_0);
    ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap'($rsc))));

    // trace_local[caller]($t0) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:213:5+1
    assume {:print "$track_local(86,5,0):", $t0} $t0 == $t0;

    // $t11 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:216:17+4
    assume {:print "$at(2,8489,8493)"} true;
    $t11 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t11);

    // assume Identical($t12, signer::$address_of($t0)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:583:9+45
    assume {:print "$at(82,29469,29514)"} true;
    assume ($t12 == $1_signer_$address_of($t0));

    // assume Identical($t13, account::spec_create_resource_address($t12, $t11)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:584:9+68
    assume {:print "$at(82,29523,29591)"} true;
    assume ($t13 == $1_account_spec_create_resource_address($t12, $t11));

    // assume Identical($t14, global<account::Account>($t13)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:658:9+45
    assume {:print "$at(82,32540,32585)"} true;
    assume ($t14 == $ResourceValue($1_account_Account_$memory, $t13));

    // assume Identical($t15, bcs::$to_bytes<address>($t13)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/account.spec.move:161:9+45
    assume {:print "$at(82,8713,8758)"} true;
    assume ($t15 == $1_bcs_$to_bytes'address'($t13));

    // ($t16, $t17) := account::create_resource_account($t0, $t11) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:214:47+100
    assume {:print "$at(2,8411,8511)"} true;
    call $t16,$t17 := $1_account_create_resource_account($t0, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,8411,8511)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // trace_local[resource_cap]($t17) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:214:31+12
    assume {:print "$track_local(86,5,8):", $t17} $t17 == $t17;

    // trace_local[resource_signer]($t16) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:214:14+15
    assume {:print "$track_local(86,5,9):", $t16} $t16 == $t16;

    // $t19 := pack aptos_discover::ResourceCap($t17) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:218:34+29
    assume {:print "$at(2,8546,8575)"} true;
    $t19 := $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap($t17);

    // move_to<aptos_discover::ResourceCap>($t19, $t16) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:218:9+7
    if ($ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory, $t16->$addr)) {
        call $ExecFailureAbort();
    } else {
        $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory := $ResourceUpdate($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ResourceCap_$memory, $t16->$addr, $t19);
    }
    if ($abort_flag) {
        assume {:print "$at(2,8521,8528)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // $t20 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:219:76+4
    assume {:print "$at(2,8653,8657)"} true;
    $t20 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t20);

    // assume Identical($t21, signer::$address_of($t16)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:154:9+50
    assume {:print "$at(156,6577,6627)"} true;
    assume ($t21 == $1_signer_$address_of($t16));

    // assume Identical($t22, object::spec_create_object_address($t21, $t20)) at /Users/dylan/.move/https___github_com_aptos-labs_aptos-core_git_mainnet/aptos-move/framework/aptos-framework/sources/object.spec.move:155:9+65
    assume {:print "$at(156,6636,6701)"} true;
    assume ($t22 == $1_object_spec_create_object_address($t21, $t20));

    // $t23 := object::create_named_object($t16, $t20) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:219:31+50
    assume {:print "$at(2,8608,8658)"} true;
    call $t23 := $1_object_create_named_object($t16, $t20);
    if ($abort_flag) {
        assume {:print "$at(2,8608,8658)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // trace_local[new_object_cons]($t23) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:219:13+15
    assume {:print "$track_local(86,5,5):", $t23} $t23 == $t23;

    // $t24 := object::generate_transfer_ref($t23) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:220:29+47
    assume {:print "$at(2,8688,8735)"} true;
    call $t24 := $1_object_generate_transfer_ref($t23);
    if ($abort_flag) {
        assume {:print "$at(2,8688,8735)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // trace_local[new_trans_ref]($t24) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:220:13+13
    assume {:print "$track_local(86,5,6):", $t24} $t24 == $t24;

    // $t25 := object::generate_extend_ref($t23) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:221:30+45
    assume {:print "$at(2,8766,8811)"} true;
    call $t25 := $1_object_generate_extend_ref($t23);
    if ($abort_flag) {
        assume {:print "$at(2,8766,8811)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // trace_local[new_extent_ref]($t25) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:221:13+14
    assume {:print "$track_local(86,5,4):", $t25} $t25 == $t25;

    // object::disable_ungated_transfer($t24) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:223:9+41
    assume {:print "$at(2,8822,8863)"} true;
    call $1_object_disable_ungated_transfer($t24);
    if ($abort_flag) {
        assume {:print "$at(2,8822,8863)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // $t26 := object::generate_signer($t23) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:224:30+41
    assume {:print "$at(2,8894,8935)"} true;
    call $t26 := $1_object_generate_signer($t23);
    if ($abort_flag) {
        assume {:print "$at(2,8894,8935)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // trace_local[object_signer]($t26) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:224:13+13
    assume {:print "$track_local(86,5,7):", $t26} $t26 == $t26;

    // $t27 := opaque begin: option::none<u128>() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:227:10+14
    assume {:print "$at(2,9031,9045)"} true;

    // assume And(WellFormed($t27), Le(Len<u128>(select option::Option.vec($t27)), 1)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:227:10+14
    assume ($IsValid'$1_option_Option'u128''($t27) && (LenVec($t27->$vec) <= 1));

    // assume Eq<option::Option<u128>>($t27, option::spec_none<u128>()) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:227:10+14
    assume $IsEqual'$1_option_Option'u128''($t27, $1_option_spec_none'u128'());

    // $t27 := opaque end: option::none<u128>() at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:227:10+14

    // $t28 := [67, 104, 97, 105, 110, 77, 97, 114, 107, 32, 67, 111, 105, 110] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:228:19+17
    assume {:print "$at(2,9065,9082)"} true;
    $t28 := ConcatVec(ConcatVec(ConcatVec(MakeVec4(67, 104, 97, 105), MakeVec4(110, 77, 97, 114)), MakeVec4(107, 32, 67, 111)), MakeVec2(105, 110));
    assume $IsValid'vec'u8''($t28);

    // $t29 := string::utf8($t28) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:228:14+23
    call $t29 := $1_string_utf8($t28);
    if ($abort_flag) {
        assume {:print "$at(2,9060,9083)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // $t30 := [67, 77, 67] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:229:19+6
    assume {:print "$at(2,9103,9109)"} true;
    $t30 := MakeVec3(67, 77, 67);
    assume $IsValid'vec'u8''($t30);

    // $t31 := string::utf8($t30) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:229:14+12
    call $t31 := $1_string_utf8($t30);
    if ($abort_flag) {
        assume {:print "$at(2,9098,9110)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // $t32 := 8 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:230:14+1
    assume {:print "$at(2,9125,9126)"} true;
    $t32 := 8;
    assume $IsValid'u8'($t32);

    // $t33 := [104, 116, 116, 112, 115, 58, 47, 47, 114, 97, 119, 46, 103, 105, 116, 104, 117, 98, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116, 46, 99, 111, 109, 47, 100, 121, 108, 97, 110, 49, 50, 51, 56, 54, 47, 97, 112, 116, 111, 115, 95, 100, 105, 115, 99, 111, 118, 101, 114, 47, 114, 101, 102, 115, 47, 104, 101, 97, 100, 115, 47, 109, 97, 105, 110, 47, 67, 104, 97, 105, 110, 77, 65, 82, 75, 46, 106, 112, 101, 103] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:231:19+93
    assume {:print "$at(2,9146,9239)"} true;
    $t33 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(104, 116, 116, 112), MakeVec4(115, 58, 47, 47)), MakeVec4(114, 97, 119, 46)), MakeVec4(103, 105, 116, 104)), MakeVec4(117, 98, 117, 115)), MakeVec4(101, 114, 99, 111)), MakeVec4(110, 116, 101, 110)), MakeVec4(116, 46, 99, 111)), MakeVec4(109, 47, 100, 121)), MakeVec4(108, 97, 110, 49)), MakeVec4(50, 51, 56, 54)), MakeVec4(47, 97, 112, 116)), MakeVec4(111, 115, 95, 100)), MakeVec4(105, 115, 99, 111)), MakeVec4(118, 101, 114, 47)), MakeVec4(114, 101, 102, 115)), MakeVec4(47, 104, 101, 97)), MakeVec4(100, 115, 47, 109)), MakeVec4(97, 105, 110, 47)), MakeVec4(67, 104, 97, 105)), MakeVec4(110, 77, 65, 82)), MakeVec4(75, 46, 106, 112)), MakeVec2(101, 103));
    assume $IsValid'vec'u8''($t33);

    // $t34 := string::utf8($t33) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:231:14+99
    call $t34 := $1_string_utf8($t33);
    if ($abort_flag) {
        assume {:print "$at(2,9141,9240)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // $t35 := [104, 116, 116, 112, 115, 58, 47, 47, 103, 105, 116, 104, 117, 98, 46, 99, 111, 109, 47, 100, 121, 108, 97, 110, 49, 50, 51, 56, 54, 47, 97, 112, 116, 111, 115, 95, 100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:232:19+47
    assume {:print "$at(2,9260,9307)"} true;
    $t35 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(104, 116, 116, 112), MakeVec4(115, 58, 47, 47)), MakeVec4(103, 105, 116, 104)), MakeVec4(117, 98, 46, 99)), MakeVec4(111, 109, 47, 100)), MakeVec4(121, 108, 97, 110)), MakeVec4(49, 50, 51, 56)), MakeVec4(54, 47, 97, 112)), MakeVec4(116, 111, 115, 95)), MakeVec4(100, 105, 115, 99)), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t35);

    // $t36 := string::utf8($t35) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:232:14+53
    call $t36 := $1_string_utf8($t35);
    if ($abort_flag) {
        assume {:print "$at(2,9255,9308)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // primary_fungible_store::create_primary_store_enabled_fungible_asset($t23, $t27, $t29, $t31, $t32, $t34, $t36) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:225:10+373
    assume {:print "$at(2,8946,9319)"} true;
    call $1_primary_fungible_store_create_primary_store_enabled_fungible_asset($t23, $t27, $t29, $t31, $t32, $t34, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,8946,9319)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // $t37 := fungible_asset::generate_mint_ref($t23) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:234:24+51
    assume {:print "$at(2,9344,9395)"} true;
    call $t37 := $1_fungible_asset_generate_mint_ref($t23);
    if ($abort_flag) {
        assume {:print "$at(2,9344,9395)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // trace_local[mint_ref]($t37) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:234:13+8
    assume {:print "$track_local(86,5,3):", $t37} $t37 == $t37;

    // $t38 := fungible_asset::generate_burn_ref($t23) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:235:24+51
    assume {:print "$at(2,9420,9471)"} true;
    call $t38 := $1_fungible_asset_generate_burn_ref($t23);
    if ($abort_flag) {
        assume {:print "$at(2,9420,9471)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // trace_local[burn_ref]($t38) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:235:13+8
    assume {:print "$track_local(86,5,2):", $t38} $t38 == $t38;

    // $t39 := fungible_asset::generate_transfer_ref($t23) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:236:24+55
    assume {:print "$at(2,9496,9551)"} true;
    call $t39 := $1_fungible_asset_generate_transfer_ref($t23);
    if ($abort_flag) {
        assume {:print "$at(2,9496,9551)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // trace_local[tran_ref]($t39) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:236:13+8
    assume {:print "$track_local(86,5,10):", $t39} $t39 == $t39;

    // $t40 := pack aptos_discover::ChainMark_FA_cap($t37, $t38, $t39) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:237:32+120
    assume {:print "$at(2,9584,9704)"} true;
    $t40 := $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap($t37, $t38, $t39);

    // move_to<aptos_discover::ChainMark_FA_cap>($t40, $t26) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:237:9+7
    if ($ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory, $t26->$addr)) {
        call $ExecFailureAbort();
    } else {
        $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory := $ResourceUpdate($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_FA_cap_$memory, $t26->$addr, $t40);
    }
    if ($abort_flag) {
        assume {:print "$at(2,9561,9568)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // $t41 := pack aptos_discover::ChainMark_Object_cap($t24, $t25) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:242:34+106
    assume {:print "$at(2,9740,9846)"} true;
    $t41 := $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap($t24, $t25);

    // move_to<aptos_discover::ChainMark_Object_cap>($t41, $t16) on_abort goto L2 with $t18 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:242:9+7
    if ($ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap_$memory, $t16->$addr)) {
        call $ExecFailureAbort();
    } else {
        $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap_$memory := $ResourceUpdate($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_ChainMark_Object_cap_$memory, $t16->$addr, $t41);
    }
    if ($abort_flag) {
        assume {:print "$at(2,9715,9722)"} true;
        $t18 := $abort_code;
        assume {:print "$track_abort(86,5):", $t18} $t18 == $t18;
        goto L2;
    }

    // label L1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:247:5+1
    assume {:print "$at(2,9913,9914)"} true;
L1:

    // return () at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:247:5+1
    assume {:print "$at(2,9913,9914)"} true;
    return;

    // label L2 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:247:5+1
L2:

    // abort($t18) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:247:5+1
    assume {:print "$at(2,9913,9914)"} true;
    $abort_code := $t18;
    $abort_flag := true;
    return;

}

// fun aptos_discover::tell_object_address [verification] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:94:5+284
procedure {:timeLimit 40} $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_tell_object_address$verify() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $t3: Vec (int);
    var $t4: int;
    var $t5: bool;
    var $t6: bool;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: Vec (int);
    var $t12: int;
    var $t13: $28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object;
    var $t14: int;
    var $temp_0'address': int;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume forall $rsc: aptos_discover::Resource_store_object: ResourceDomain<aptos_discover::Resource_store_object>(): WellFormed($rsc) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:94:5+1
    assume {:print "$at(2,2820,2821)"} true;
    assume (forall $a_0: int :: {$ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $a_0)}(var $rsc := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $a_0);
    ($IsValid'$28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object'($rsc))));

    // $t2 := 0x28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:72+5
    assume {:print "$at(2,2965,2970)"} true;
    $t2 := 18425465769474857495901587093882631151486939702443524661813556910146273842942;
    assume $IsValid'address'($t2);

    // $t3 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:78+4
    $t3 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t3);

    // $t4 := opaque begin: account::create_resource_address($t2, $t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:47+36

    // assume WellFormed($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:47+36
    assume $IsValid'address'($t4);

    // assume Eq<address>($t4, account::spec_create_resource_address($t2, $t3)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:47+36
    assume $IsEqual'address'($t4, $1_account_spec_create_resource_address($t2, $t3));

    // $t4 := opaque end: account::create_resource_address($t2, $t3) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:47+36

    // $t5 := exists<aptos_discover::Resource_store_object>($t4) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:17+6
    $t5 := $ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $t4);

    // $t6 := true at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:86+4
    $t6 := true;
    assume $IsValid'bool'($t6);

    // $t7 := ==($t5, $t6) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:84+2
    $t7 := $IsEqual'bool'($t5, $t6);

    // if ($t7) goto L1 else goto L0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:9+98
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:9+98
L1:

    // goto L2 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:9+98
    assume {:print "$at(2,2902,3000)"} true;
    goto L2;

    // label L0 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:91+15
L0:

    // $t8 := 1 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:91+15
    assume {:print "$at(2,2984,2999)"} true;
    $t8 := 1;
    assume $IsValid'u64'($t8);

    // trace_abort($t8) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:9+98
    assume {:print "$at(2,2902,3000)"} true;
    assume {:print "$track_abort(86,6):", $t8} $t8 == $t8;

    // $t9 := move($t8) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:9+98
    $t9 := $t8;

    // goto L4 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:95:9+98
    goto L4;

    // label L2 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:96:78+5
    assume {:print "$at(2,3079,3084)"} true;
L2:

    // $t10 := 0x28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:96:78+5
    assume {:print "$at(2,3079,3084)"} true;
    $t10 := 18425465769474857495901587093882631151486939702443524661813556910146273842942;
    assume $IsValid'address'($t10);

    // $t11 := [100, 105, 115, 99, 111, 118, 101, 114] at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:96:84+4
    $t11 := ConcatVec(MakeVec4(100, 105, 115, 99), MakeVec4(111, 118, 101, 114));
    assume $IsValid'vec'u8''($t11);

    // $t12 := opaque begin: account::create_resource_address($t10, $t11) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:96:53+36

    // assume WellFormed($t12) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:96:53+36
    assume $IsValid'address'($t12);

    // assume Eq<address>($t12, account::spec_create_resource_address($t10, $t11)) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:96:53+36
    assume $IsEqual'address'($t12, $1_account_spec_create_resource_address($t10, $t11));

    // $t12 := opaque end: account::create_resource_address($t10, $t11) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:96:53+36

    // $t13 := get_global<aptos_discover::Resource_store_object>($t12) on_abort goto L4 with $t9 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:96:16+13
    if (!$ResourceExists($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $t12)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $ResourceValue($28bc71ad9d3a098d1bbaab0ccb3bd1beb8d02652566858538f9a62fac02a96fe_aptos_discover_Resource_store_object_$memory, $t12);
    }
    if ($abort_flag) {
        assume {:print "$at(2,3017,3030)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(86,6):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t14 := get_field<aptos_discover::Resource_store_object>.object($t13) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:96:16+81
    $t14 := $t13->$object;

    // trace_return[0]($t14) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:96:9+88
    assume {:print "$track_return(86,6,0):", $t14} $t14 == $t14;

    // label L3 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:97:5+1
    assume {:print "$at(2,3103,3104)"} true;
L3:

    // return $t14 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:97:5+1
    assume {:print "$at(2,3103,3104)"} true;
    $ret0 := $t14;
    return;

    // label L4 at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:97:5+1
L4:

    // abort($t9) at /Users/dylan/IdeaProjects/aptos_discover/sources/aptos_discover.move:97:5+1
    assume {:print "$at(2,3103,3104)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}
